

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 01 21:57:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     008F                     	;# 
   124     0090                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0095                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0098                     	;# 
   135     0099                     	;# 
   136     009A                     	;# 
   137     009B                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     0105                     	;# 
   143     0107                     	;# 
   144     0108                     	;# 
   145     0109                     	;# 
   146     010C                     	;# 
   147     010C                     	;# 
   148     010D                     	;# 
   149     010E                     	;# 
   150     010F                     	;# 
   151     0185                     	;# 
   152     0187                     	;# 
   153     0188                     	;# 
   154     0189                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     008F                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0094                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0098                     	;# 
   213     0099                     	;# 
   214     009A                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     0105                     	;# 
   221     0107                     	;# 
   222     0108                     	;# 
   223     0109                     	;# 
   224     010C                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     0185                     	;# 
   230     0187                     	;# 
   231     0188                     	;# 
   232     0189                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     000E                     	;# 
   251     000F                     	;# 
   252     0010                     	;# 
   253     0011                     	;# 
   254     0012                     	;# 
   255     0013                     	;# 
   256     0014                     	;# 
   257     0015                     	;# 
   258     0015                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001B                     	;# 
   266     001C                     	;# 
   267     001D                     	;# 
   268     001E                     	;# 
   269     001F                     	;# 
   270     0081                     	;# 
   271     0085                     	;# 
   272     0086                     	;# 
   273     0087                     	;# 
   274     0088                     	;# 
   275     0089                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     008F                     	;# 
   280     0090                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     0105                     	;# 
   299     0107                     	;# 
   300     0108                     	;# 
   301     0109                     	;# 
   302     010C                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     0185                     	;# 
   308     0187                     	;# 
   309     0188                     	;# 
   310     0189                     	;# 
   311     018C                     	;# 
   312     018D                     	;# 
   313     0000                     	;# 
   314     0001                     	;# 
   315     0002                     	;# 
   316     0003                     	;# 
   317     0004                     	;# 
   318     0005                     	;# 
   319     0006                     	;# 
   320     0007                     	;# 
   321     0008                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     000E                     	;# 
   328     000E                     	;# 
   329     000F                     	;# 
   330     0010                     	;# 
   331     0011                     	;# 
   332     0012                     	;# 
   333     0013                     	;# 
   334     0014                     	;# 
   335     0015                     	;# 
   336     0015                     	;# 
   337     0016                     	;# 
   338     0017                     	;# 
   339     0018                     	;# 
   340     0019                     	;# 
   341     001A                     	;# 
   342     001B                     	;# 
   343     001B                     	;# 
   344     001C                     	;# 
   345     001D                     	;# 
   346     001E                     	;# 
   347     001F                     	;# 
   348     0081                     	;# 
   349     0085                     	;# 
   350     0086                     	;# 
   351     0087                     	;# 
   352     0088                     	;# 
   353     0089                     	;# 
   354     008C                     	;# 
   355     008D                     	;# 
   356     008E                     	;# 
   357     008F                     	;# 
   358     0090                     	;# 
   359     0091                     	;# 
   360     0092                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0094                     	;# 
   365     0095                     	;# 
   366     0096                     	;# 
   367     0097                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009A                     	;# 
   371     009B                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     0105                     	;# 
   377     0107                     	;# 
   378     0108                     	;# 
   379     0109                     	;# 
   380     010C                     	;# 
   381     010C                     	;# 
   382     010D                     	;# 
   383     010E                     	;# 
   384     010F                     	;# 
   385     0185                     	;# 
   386     0187                     	;# 
   387     0188                     	;# 
   388     0189                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     0000                     	;# 
   392     0001                     	;# 
   393     0002                     	;# 
   394     0003                     	;# 
   395     0004                     	;# 
   396     0005                     	;# 
   397     0006                     	;# 
   398     0007                     	;# 
   399     0008                     	;# 
   400     0009                     	;# 
   401     000A                     	;# 
   402     000B                     	;# 
   403     000C                     	;# 
   404     000D                     	;# 
   405     000E                     	;# 
   406     000E                     	;# 
   407     000F                     	;# 
   408     0010                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0014                     	;# 
   413     0015                     	;# 
   414     0015                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001B                     	;# 
   422     001C                     	;# 
   423     001D                     	;# 
   424     001E                     	;# 
   425     001F                     	;# 
   426     0081                     	;# 
   427     0085                     	;# 
   428     0086                     	;# 
   429     0087                     	;# 
   430     0088                     	;# 
   431     0089                     	;# 
   432     008C                     	;# 
   433     008D                     	;# 
   434     008E                     	;# 
   435     008F                     	;# 
   436     0090                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0094                     	;# 
   443     0095                     	;# 
   444     0096                     	;# 
   445     0097                     	;# 
   446     0098                     	;# 
   447     0099                     	;# 
   448     009A                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     009F                     	;# 
   454     0105                     	;# 
   455     0107                     	;# 
   456     0108                     	;# 
   457     0109                     	;# 
   458     010C                     	;# 
   459     010C                     	;# 
   460     010D                     	;# 
   461     010E                     	;# 
   462     010F                     	;# 
   463     0185                     	;# 
   464     0187                     	;# 
   465     0188                     	;# 
   466     0189                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469                           
   470                           	psect	strings
   471     0003                     __pstrings:
   472     0003                     stringtab:
   473     0003                     __stringtab:
   474                           
   475                           ;	String table - string pointers are 1 byte each
   476     0003  1BFF               	btfsc	btemp+1,7
   477     0004  280D               	ljmp	stringcode
   478     0005  1383               	bcf	3,7
   479     0006  187F               	btfsc	btemp+1,0
   480     0007  1783               	bsf	3,7
   481     0008  0800               	movf	0,w
   482     0009  0A84               	incf	4,f
   483     000A  1903               	skipnz
   484     000B  0AFF               	incf	btemp+1,f
   485     000C  0008               	return
   486     000D                     stringcode:
   487     000D                     stringdir:
   488     000D  3000               	movlw	high stringdir
   489     000E  008A               	movwf	10
   490     000F  0804               	movf	4,w
   491     0010  0A84               	incf	4,f
   492     0011  0782               	addwf	2,f
   493     0012                     __stringbase:
   494     0012  3400               	retlw	0
   495     0013                     __end_of__stringtab:
   496     0013                     _dpowers:
   497     0013  3401               	retlw	1
   498     0014  3400               	retlw	0
   499     0015  340A               	retlw	10
   500     0016  3400               	retlw	0
   501     0017  3464               	retlw	100
   502     0018  3400               	retlw	0
   503     0019  34E8               	retlw	232
   504     001A  3403               	retlw	3
   505     001B  3410               	retlw	16
   506     001C  3427               	retlw	39
   507     001D                     __end_of_dpowers:
   508     0008                     _PORTDbits	set	8
   509     0006                     _PORTBbits	set	6
   510     001A                     _RCREG	set	26
   511     0018                     _RCSTAbits	set	24
   512     0019                     _TXREG	set	25
   513     000C                     _PIR1bits	set	12
   514     0018                     _RCSTA	set	24
   515     001E                     _ADRESH	set	30
   516     001F                     _ADCON0bits	set	31
   517     001F                     _ADCON0	set	31
   518     0009                     _PORTE	set	9
   519     0007                     _PORTC	set	7
   520     0008                     _PORTD	set	8
   521     0006                     _PORTB	set	6
   522     0005                     _PORTA	set	5
   523     0098                     _TXSTAbits	set	152
   524     009A                     _SPBRGH	set	154
   525     0099                     _SPBRG	set	153
   526     0098                     _TXSTA	set	152
   527     0087                     _TRISCbits	set	135
   528     009F                     _ADCON1	set	159
   529     008F                     _OSCCONbits	set	143
   530     0087                     _TRISC	set	135
   531     0088                     _TRISD	set	136
   532     0086                     _TRISB	set	134
   533     0187                     _BAUDCTLbits	set	391
   534     0187                     _BAUDCTL	set	391
   535     0188                     _ANSELbits	set	392
   536     0189                     _ANSELH	set	393
   537     001D                     STR_3:
   538     001D  3456               	retlw	86	;'V'
   539     001E  3461               	retlw	97	;'a'
   540     001F  346C               	retlw	108	;'l'
   541     0020  346F               	retlw	111	;'o'
   542     0021  3472               	retlw	114	;'r'
   543     0022  3420               	retlw	32	;' '
   544     0023  3441               	retlw	65	;'A'
   545     0024  3444               	retlw	68	;'D'
   546     0025  3443               	retlw	67	;'C'
   547     0026  3431               	retlw	49	;'1'
   548     0027  343A               	retlw	58	;':'
   549     0028  3420               	retlw	32	;' '
   550     0029  3425               	retlw	37	;'%'
   551     002A  3475               	retlw	117	;'u'
   552     002B  3420               	retlw	32	;' '
   553     002C  342C               	retlw	44	;','
   554     002D  3420               	retlw	32	;' '
   555     002E  3456               	retlw	86	;'V'
   556     002F  3461               	retlw	97	;'a'
   557     0030  346C               	retlw	108	;'l'
   558     0031  346F               	retlw	111	;'o'
   559     0032  3472               	retlw	114	;'r'
   560     0033  3420               	retlw	32	;' '
   561     0034  3441               	retlw	65	;'A'
   562     0035  3444               	retlw	68	;'D'
   563     0036  3443               	retlw	67	;'C'
   564     0037  3432               	retlw	50	;'2'
   565     0038  343A               	retlw	58	;':'
   566     0039  3420               	retlw	32	;' '
   567     003A  3425               	retlw	37	;'%'
   568     003B  3475               	retlw	117	;'u'
   569     003C  340D               	retlw	13
   570     003D  340A               	retlw	10
   571     003E  3400               	retlw	0
   572     003F                     STR_2:
   573     003F  3425               	retlw	37	;'%'
   574     0040  3475               	retlw	117	;'u'
   575     0041  342E               	retlw	46	;'.'
   576     0042  3425               	retlw	37	;'%'
   577     0043  3475               	retlw	117	;'u'
   578     0044  3425               	retlw	37	;'%'
   579     0045  3475               	retlw	117	;'u'
   580     0046  3420               	retlw	32	;' '
   581     0047  3420               	retlw	32	;' '
   582     0048  3425               	retlw	37	;'%'
   583     0049  3475               	retlw	117	;'u'
   584     004A  342E               	retlw	46	;'.'
   585     004B  3425               	retlw	37	;'%'
   586     004C  3475               	retlw	117	;'u'
   587     004D  3425               	retlw	37	;'%'
   588     004E  3475               	retlw	117	;'u'
   589     004F  3420               	retlw	32	;' '
   590     0050  3420               	retlw	32	;' '
   591     0051  3420               	retlw	32	;' '
   592     0052  3420               	retlw	32	;' '
   593     0053  3425               	retlw	37	;'%'
   594     0054  3475               	retlw	117	;'u'
   595     0055  3420               	retlw	32	;' '
   596     0056  3420               	retlw	32	;' '
   597     0057  3400               	retlw	0
   598     0058                     STR_1:
   599     0058  3453               	retlw	83	;'S'
   600     0059  3431               	retlw	49	;'1'
   601     005A  343A               	retlw	58	;':'
   602     005B  3420               	retlw	32	;' '
   603     005C  3420               	retlw	32	;' '
   604     005D  3420               	retlw	32	;' '
   605     005E  3420               	retlw	32	;' '
   606     005F  3453               	retlw	83	;'S'
   607     0060  3432               	retlw	50	;'2'
   608     0061  343A               	retlw	58	;':'
   609     0062  3420               	retlw	32	;' '
   610     0063  3463               	retlw	99	;'c'
   611     0064  346F               	retlw	111	;'o'
   612     0065  346E               	retlw	110	;'n'
   613     0066  3474               	retlw	116	;'t'
   614     0067  343A               	retlw	58	;':'
   615     0068  3400               	retlw	0
   616                           
   617                           	psect	cinit
   618     07EB                     start_initialization:	
   619                           ; #config settings
   620                           
   621     07EB                     __initialization:
   622                           
   623                           ; Clear objects allocated to BANK0
   624     07EB  1383               	bcf	3,7	;select IRP bank0
   625     07EC  3056               	movlw	low __pbssBANK0
   626     07ED  0084               	movwf	4
   627     07EE  3062               	movlw	low (__pbssBANK0+12)
   628     07EF  120A  158A  26F0  120A  118A  	fcall	clear_ram0
   629                           
   630                           ; Clear objects allocated to BANK1
   631     07F4  30A0               	movlw	low __pbssBANK1
   632     07F5  0084               	movwf	4
   633     07F6  30DC               	movlw	low (__pbssBANK1+60)
   634     07F7  120A  158A  26F0  120A  118A  	fcall	clear_ram0
   635     07FC                     end_of_initialization:	
   636                           ;End of C runtime variable initialization code
   637                           
   638     07FC                     __end_of__initialization:
   639     07FC  0183               	clrf	3
   640     07FD  120A  118A  28AC   	ljmp	_main	;jump to C main() function
   641                           
   642                           	psect	bssBANK0
   643     0056                     __pbssBANK0:
   644     0056                     _dato_rx:
   645     0056                     	ds	1
   646     0057                     _centesima_V2:
   647     0057                     	ds	1
   648     0058                     _decima_V2:
   649     0058                     	ds	1
   650     0059                     _unidad_V2:
   651     0059                     	ds	1
   652     005A                     _centesima_V1:
   653     005A                     	ds	1
   654     005B                     _decima_V1:
   655     005B                     	ds	1
   656     005C                     _unidad_V1:
   657     005C                     	ds	1
   658     005D                     _voltaje2:
   659     005D                     	ds	1
   660     005E                     _voltaje1:
   661     005E                     	ds	1
   662     005F                     _valor_ch1:
   663     005F                     	ds	1
   664     0060                     _valor_ch0:
   665     0060                     	ds	1
   666     0061                     _contador:
   667     0061                     	ds	1
   668                           
   669                           	psect	bssBANK1
   670     00A0                     __pbssBANK1:
   671     00A0                     _buffer_UART:
   672     00A0                     	ds	30
   673     00BE                     _buffer_LCD:
   674     00BE                     	ds	30
   675                           
   676                           	psect	clrtext
   677     0EF0                     clear_ram0:	
   678                           ;	Called with FSR containing the base address, and
   679                           ;	W with the last address+1
   680                           
   681     0EF0  0064               	clrwdt	;clear the watchdog before getting into this loop
   682     0EF1                     clrloop0:
   683     0EF1  0180               	clrf	0	;clear RAM location pointed to by FSR
   684     0EF2  0A84               	incf	4,f	;increment pointer
   685     0EF3  0604               	xorwf	4,w	;XOR with final address
   686     0EF4  1903               	btfsc	3,2	;have we reached the end yet?
   687     0EF5  3400               	retlw	0	;all done for this memory range, return
   688     0EF6  0604               	xorwf	4,w	;XOR again to restore value
   689     0EF7  2EF1               	goto	clrloop0	;do the next byte
   690                           
   691                           	psect	cstackCOMMON
   692     0070                     __pcstackCOMMON:
   693     0070                     ?_setupINTOSC:
   694     0070                     ??_setupINTOSC:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     ?_ADC_Init:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ??_ADC_Init:	
   701                           ; 1 bytes @ 0x0
   702                           
   703     0070                     ?_Lcd_Init:	
   704                           ; 1 bytes @ 0x0
   705                           
   706     0070                     ?_Lcd_Clear:	
   707                           ; 1 bytes @ 0x0
   708                           
   709     0070                     ?_ADC_CONV_V:	
   710                           ; 1 bytes @ 0x0
   711                           
   712     0070                     ?_VISUAL_LCD:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     ?_TX_RX:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0070                     ?_Uart_Send_String:	
   719                           ; 1 bytes @ 0x0
   720                           
   721     0070                     ?_Uart_Read:	
   722                           ; 1 bytes @ 0x0
   723                           
   724     0070                     ??_Uart_Read:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     ?_main:	
   728                           ; 1 bytes @ 0x0
   729                           
   730     0070                     ?_Uart_Send_Char:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ??_Uart_Send_Char:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_Lcd_Port:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ??_Lcd_Port:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_Lcd_Cmd:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_Lcd_Write_Char:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_ADC_Read:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_Uart_Available:	
   752                           ; 2 bytes @ 0x0
   753                           
   754     0070                     ?___wmul:	
   755                           ; 2 bytes @ 0x0
   756                           
   757     0070                     ?___lwdiv:	
   758                           ; 2 bytes @ 0x0
   759                           
   760     0070                     ?___lmul:	
   761                           ; 2 bytes @ 0x0
   762                           
   763     0070                     ?___lldiv:	
   764                           ; 4 bytes @ 0x0
   765                           
   766     0070                     ADC_Init@p_ang:	
   767                           ; 4 bytes @ 0x0
   768                           
   769     0070                     Uart_Send_Char@txData:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0070                     Lcd_Port@a:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0070                     ___wmul@multiplier:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ___lwdiv@divisor:	
   779                           ; 2 bytes @ 0x0
   780                           
   781     0070                     ___lmul@multiplier:	
   782                           ; 2 bytes @ 0x0
   783                           
   784     0070                     ___lldiv@divisor:	
   785                           ; 4 bytes @ 0x0
   786                           
   787                           
   788                           ; 4 bytes @ 0x0
   789     0070                     	ds	1
   790     0071                     ??_Uart_Send_String:
   791     0071                     ??_Lcd_Cmd:	
   792                           ; 1 bytes @ 0x1
   793                           
   794     0071                     ??_Lcd_Write_Char:	
   795                           ; 1 bytes @ 0x1
   796                           
   797                           
   798                           ; 1 bytes @ 0x1
   799     0071                     	ds	1
   800     0072                     ??_ADC_Read:
   801     0072                     ??_Uart_Available:	
   802                           ; 1 bytes @ 0x2
   803                           
   804     0072                     Uart_Send_String@info:	
   805                           ; 1 bytes @ 0x2
   806                           
   807     0072                     Lcd_Write_Char@a:	
   808                           ; 1 bytes @ 0x2
   809                           
   810     0072                     ___wmul@multiplicand:	
   811                           ; 1 bytes @ 0x2
   812                           
   813     0072                     ___lwdiv@dividend:	
   814                           ; 2 bytes @ 0x2
   815                           
   816                           
   817                           ; 2 bytes @ 0x2
   818     0072                     	ds	1
   819     0073                     ?_Lcd_Write_String:
   820     0073                     Lcd_Cmd@a:	
   821                           ; 1 bytes @ 0x3
   822                           
   823     0073                     Lcd_Write_String@a:	
   824                           ; 1 bytes @ 0x3
   825                           
   826                           
   827                           ; 2 bytes @ 0x3
   828     0073                     	ds	1
   829     0074                     ??_Lcd_Init:
   830     0074                     ??_Lcd_Clear:	
   831                           ; 1 bytes @ 0x4
   832                           
   833     0074                     ?_Lcd_Set_Cursor:	
   834                           ; 1 bytes @ 0x4
   835                           
   836     0074                     ??___wmul:	
   837                           ; 1 bytes @ 0x4
   838                           
   839     0074                     ??___lwdiv:	
   840                           ; 1 bytes @ 0x4
   841                           
   842     0074                     ADC_Read@ch:	
   843                           ; 1 bytes @ 0x4
   844                           
   845     0074                     Lcd_Set_Cursor@b:	
   846                           ; 1 bytes @ 0x4
   847                           
   848     0074                     ___wmul@product:	
   849                           ; 1 bytes @ 0x4
   850                           
   851     0074                     ___lmul@multiplicand:	
   852                           ; 2 bytes @ 0x4
   853                           
   854     0074                     ___lldiv@dividend:	
   855                           ; 4 bytes @ 0x4
   856                           
   857                           
   858                           ; 4 bytes @ 0x4
   859     0074                     	ds	1
   860     0075                     ??_Lcd_Set_Cursor:
   861     0075                     ??_Lcd_Write_String:	
   862                           ; 1 bytes @ 0x5
   863                           
   864     0075                     Lcd_Set_Cursor@a:	
   865                           ; 1 bytes @ 0x5
   866                           
   867     0075                     ___lwdiv@quotient:	
   868                           ; 1 bytes @ 0x5
   869                           
   870                           
   871                           ; 2 bytes @ 0x5
   872     0075                     	ds	1
   873     0076                     ?___awdiv:
   874     0076                     Lcd_Set_Cursor@temp:	
   875                           ; 2 bytes @ 0x6
   876                           
   877     0076                     ___awdiv@divisor:	
   878                           ; 1 bytes @ 0x6
   879                           
   880                           
   881                           ; 2 bytes @ 0x6
   882     0076                     	ds	1
   883     0077                     ___lwdiv@counter:
   884                           
   885                           ; 1 bytes @ 0x7
   886     0077                     	ds	1
   887     0078                     ??___lmul:
   888     0078                     ??___lldiv:	
   889                           ; 1 bytes @ 0x8
   890                           
   891     0078                     ?___lwmod:	
   892                           ; 1 bytes @ 0x8
   893                           
   894     0078                     Lcd_Write_String@i:	
   895                           ; 2 bytes @ 0x8
   896                           
   897     0078                     ___awdiv@dividend:	
   898                           ; 2 bytes @ 0x8
   899                           
   900     0078                     ___lwmod@divisor:	
   901                           ; 2 bytes @ 0x8
   902                           
   903                           
   904                           ; 2 bytes @ 0x8
   905     0078                     	ds	1
   906     0079                     ___lmul@product:
   907     0079                     ___lldiv@quotient:	
   908                           ; 4 bytes @ 0x9
   909                           
   910                           
   911                           ; 4 bytes @ 0x9
   912     0079                     	ds	1
   913     007A                     ??___awdiv:
   914     007A                     ___lwmod@dividend:	
   915                           ; 1 bytes @ 0xA
   916                           
   917                           
   918                           ; 2 bytes @ 0xA
   919     007A                     	ds	1
   920     007B                     ??___awmod:
   921                           
   922                           ; 1 bytes @ 0xB
   923     007B                     	ds	1
   924     007C                     ??___lwmod:
   925     007C                     ___awmod@counter:	
   926                           ; 1 bytes @ 0xC
   927                           
   928                           
   929                           ; 1 bytes @ 0xC
   930     007C                     	ds	1
   931     007D                     ??___aldiv:
   932     007D                     ___lldiv@counter:	
   933                           ; 1 bytes @ 0xD
   934                           
   935     007D                     ___awmod@sign:	
   936                           ; 1 bytes @ 0xD
   937                           
   938     007D                     ___lwmod@counter:	
   939                           ; 1 bytes @ 0xD
   940                           
   941                           
   942                           ; 1 bytes @ 0xD
   943     007D                     	ds	1
   944     007E                     ??_main:
   945                           
   946                           	psect	cstackBANK0
   947     0020                     __pcstackBANK0:	
   948                           ; 1 bytes @ 0xE
   949                           
   950     0020                     ?_Uart_Init:
   951     0020                     ?_sprintf:	
   952                           ; 1 bytes @ 0x0
   953                           
   954     0020                     ?___aldiv:	
   955                           ; 2 bytes @ 0x0
   956                           
   957     0020                     sprintf@f:	
   958                           ; 4 bytes @ 0x0
   959                           
   960     0020                     ___awdiv@counter:	
   961                           ; 1 bytes @ 0x0
   962                           
   963     0020                     Uart_Init@baud:	
   964                           ; 1 bytes @ 0x0
   965                           
   966     0020                     ___aldiv@divisor:	
   967                           ; 4 bytes @ 0x0
   968                           
   969                           
   970                           ; 4 bytes @ 0x0
   971     0020                     	ds	1
   972     0021                     ___awdiv@sign:
   973                           
   974                           ; 1 bytes @ 0x1
   975     0021                     	ds	1
   976     0022                     ___awdiv@quotient:
   977                           
   978                           ; 2 bytes @ 0x2
   979     0022                     	ds	2
   980     0024                     ??_Uart_Init:
   981     0024                     ?___awmod:	
   982                           ; 1 bytes @ 0x4
   983                           
   984     0024                     ___awmod@divisor:	
   985                           ; 2 bytes @ 0x4
   986                           
   987     0024                     ___aldiv@dividend:	
   988                           ; 2 bytes @ 0x4
   989                           
   990                           
   991                           ; 4 bytes @ 0x4
   992     0024                     	ds	2
   993     0026                     ___awmod@dividend:
   994                           
   995                           ; 2 bytes @ 0x6
   996     0026                     	ds	2
   997     0028                     ___aldiv@counter:
   998     0028                     Uart_Init@vx:	
   999                           ; 1 bytes @ 0x8
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x8
  1003     0028                     	ds	1
  1004     0029                     ___aldiv@sign:
  1005                           
  1006                           ; 1 bytes @ 0x9
  1007     0029                     	ds	1
  1008     002A                     ___aldiv@quotient:
  1009                           
  1010                           ; 4 bytes @ 0xA
  1011     002A                     	ds	4
  1012     002E                     ?_map:
  1013     002E                     map@x:	
  1014                           ; 4 bytes @ 0xE
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0xE
  1018     002E                     	ds	1
  1019     002F                     ??_sprintf:
  1020                           
  1021                           ; 1 bytes @ 0xF
  1022     002F                     	ds	3
  1023     0032                     sprintf@flag:
  1024     0032                     map@eMin:	
  1025                           ; 1 bytes @ 0x12
  1026                           
  1027                           
  1028                           ; 4 bytes @ 0x12
  1029     0032                     	ds	1
  1030     0033                     sprintf@ap:
  1031                           
  1032                           ; 1 bytes @ 0x13
  1033     0033                     	ds	1
  1034     0034                     sprintf@val:
  1035                           
  1036                           ; 2 bytes @ 0x14
  1037     0034                     	ds	2
  1038     0036                     sprintf@prec:
  1039     0036                     map@eMax:	
  1040                           ; 1 bytes @ 0x16
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x16
  1044     0036                     	ds	1
  1045     0037                     sprintf@sp:
  1046                           
  1047                           ; 1 bytes @ 0x17
  1048     0037                     	ds	1
  1049     0038                     sprintf@c:
  1050                           
  1051                           ; 1 bytes @ 0x18
  1052     0038                     	ds	1
  1053     0039                     ??_VISUAL_LCD:
  1054     0039                     ??_TX_RX:	
  1055                           ; 1 bytes @ 0x19
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0x19
  1059     0039                     	ds	1
  1060     003A                     map@sMin:
  1061                           
  1062                           ; 4 bytes @ 0x1A
  1063     003A                     	ds	4
  1064     003E                     map@sMax:
  1065                           
  1066                           ; 4 bytes @ 0x1E
  1067     003E                     	ds	4
  1068     0042                     ??_map:
  1069                           
  1070                           ; 1 bytes @ 0x22
  1071     0042                     	ds	16
  1072     0052                     ??_ADC_CONV_V:
  1073                           
  1074                           ; 1 bytes @ 0x32
  1075     0052                     	ds	4
  1076                           
  1077                           	psect	maintext
  1078     00AC                     __pmaintext:	
  1079 ;;
  1080 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1081 ;;
  1082 ;; *************** function _main *****************
  1083 ;; Defined at:
  1084 ;;		line 80 in file "lab02.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : B00/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels required when called: 4
  1104 ;; This function calls:
  1105 ;;		_ADC_CONV_V
  1106 ;;		_ADC_Init
  1107 ;;		_Lcd_Clear
  1108 ;;		_Lcd_Init
  1109 ;;		_TX_RX
  1110 ;;		_Uart_Init
  1111 ;;		_VISUAL_LCD
  1112 ;;		_setupINTOSC
  1113 ;; This function is called by:
  1114 ;;		Startup code after reset
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118     00AC                     _main:	
  1119                           ;psect for function _main
  1120                           
  1121     00AC                     l1837:	
  1122                           ;incstack = 0
  1123                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1124                           
  1125                           
  1126                           ;lab02.c: 82:     setupINTOSC();
  1127     00AC  120A  158A  2793  120A  118A  	fcall	_setupINTOSC
  1128     00B1                     l1839:
  1129                           
  1130                           ;lab02.c: 85:     ADC_Init(0b01000000);
  1131     00B1  3040               	movlw	64
  1132     00B2  120A  118A  2069  120A  118A  	fcall	_ADC_Init
  1133     00B7                     l1841:
  1134                           
  1135                           ;lab02.c: 86:     ADC_Init(0b01000100);
  1136     00B7  3044               	movlw	68
  1137     00B8  120A  118A  2069  120A  118A  	fcall	_ADC_Init
  1138     00BD                     l1843:
  1139                           
  1140                           ;lab02.c: 87:     Uart_Init(9600);
  1141     00BD  3000               	movlw	0
  1142     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1143     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1144     00C0  00A3               	movwf	Uart_Init@baud+3
  1145     00C1  3000               	movlw	0
  1146     00C2  00A2               	movwf	Uart_Init@baud+2
  1147     00C3  3025               	movlw	37
  1148     00C4  00A1               	movwf	Uart_Init@baud+1
  1149     00C5  3080               	movlw	128
  1150     00C6  00A0               	movwf	Uart_Init@baud
  1151     00C7  120A  118A  21F3  120A  118A  	fcall	_Uart_Init
  1152     00CC                     l1845:
  1153                           
  1154                           ;lab02.c: 88:     Lcd_Init();
  1155     00CC  120A  118A  223E  120A  118A  	fcall	_Lcd_Init
  1156     00D1                     l1847:
  1157                           
  1158                           ;lab02.c: 89:     Lcd_Clear();
  1159     00D1  120A  158A  2704  120A  118A  	fcall	_Lcd_Clear
  1160     00D6                     l1849:
  1161                           
  1162                           ;lab02.c: 93:     {;lab02.c: 94:         ADC_CONV_V();
  1163     00D6  120A  118A  2682  120A  118A  	fcall	_ADC_CONV_V
  1164     00DB                     l1851:
  1165                           
  1166                           ;lab02.c: 95:         VISUAL_LCD();
  1167     00DB  120A  118A  2413  120A  118A  	fcall	_VISUAL_LCD
  1168     00E0                     l1853:
  1169                           
  1170                           ;lab02.c: 96:         TX_RX();
  1171     00E0  120A  118A  228F  120A  118A  	fcall	_TX_RX
  1172     00E5  28D6               	goto	l1849
  1173     00E6  120A  118A  2800   	ljmp	start
  1174     00E9                     __end_of_main:
  1175                           
  1176                           	psect	text1
  1177     0F93                     __ptext1:	
  1178 ;; *************** function _setupINTOSC *****************
  1179 ;; Defined at:
  1180 ;;		line 104 in file "lab02.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		status,2
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0
  1197 ;;      Totals:         0       0       0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207     0F93                     _setupINTOSC:	
  1208                           ;psect for function _setupINTOSC
  1209                           
  1210     0F93                     l1247:	
  1211                           ;incstack = 0
  1212                           ; Regs used in _setupINTOSC: [status,2]
  1213                           
  1214                           
  1215                           ;lab02.c: 106:     ANSELH = 0;
  1216     0F93  1683               	bsf	3,5	;RP0=1, select bank3
  1217     0F94  1703               	bsf	3,6	;RP1=1, select bank3
  1218     0F95  0189               	clrf	9	;volatile
  1219     0F96                     l1249:
  1220                           
  1221                           ;lab02.c: 107:     ANSELbits.ANS0 = 1;
  1222     0F96  1408               	bsf	8,0	;volatile
  1223     0F97                     l1251:
  1224                           
  1225                           ;lab02.c: 108:     ANSELbits.ANS1 = 1;
  1226     0F97  1488               	bsf	8,1	;volatile
  1227                           
  1228                           ;lab02.c: 110:     PORTA = 0;
  1229     0F98  1283               	bcf	3,5	;RP0=0, select bank0
  1230     0F99  1303               	bcf	3,6	;RP1=0, select bank0
  1231     0F9A  0185               	clrf	5	;volatile
  1232                           
  1233                           ;lab02.c: 114:     TRISB = 0;
  1234     0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  1235     0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  1236     0F9D  0186               	clrf	6	;volatile
  1237                           
  1238                           ;lab02.c: 115:     PORTB = 0;
  1239     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  1240     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  1241     0FA0  0186               	clrf	6	;volatile
  1242                           
  1243                           ;lab02.c: 117:     TRISD = 0;
  1244     0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  1245     0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  1246     0FA3  0188               	clrf	8	;volatile
  1247                           
  1248                           ;lab02.c: 118:     PORTD = 0;
  1249     0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  1251     0FA6  0188               	clrf	8	;volatile
  1252                           
  1253                           ;lab02.c: 120:     TRISC = 0;
  1254     0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  1255     0FA8  1303               	bcf	3,6	;RP1=0, select bank1
  1256     0FA9  0187               	clrf	7	;volatile
  1257                           
  1258                           ;lab02.c: 121:     PORTC = 0;
  1259     0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  1260     0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  1261     0FAC  0187               	clrf	7	;volatile
  1262     0FAD                     l1253:
  1263                           
  1264                           ;lab02.c: 125:     OSCCONbits.IRCF2 = 1;
  1265     0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  1266     0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  1267     0FAF  170F               	bsf	15,6	;volatile
  1268     0FB0                     l1255:
  1269                           
  1270                           ;lab02.c: 126:     OSCCONbits.IRCF1 = 1;
  1271     0FB0  168F               	bsf	15,5	;volatile
  1272     0FB1                     l1257:
  1273                           
  1274                           ;lab02.c: 127:     OSCCONbits.IRCF0 = 0;
  1275     0FB1  120F               	bcf	15,4	;volatile
  1276     0FB2                     l1259:
  1277                           
  1278                           ;lab02.c: 130:     OSCCONbits.SCS = 1;
  1279     0FB2  140F               	bsf	15,0	;volatile
  1280     0FB3                     l96:
  1281     0FB3  0008               	return
  1282     0FB4                     __end_of_setupINTOSC:
  1283                           
  1284                           	psect	text2
  1285     0413                     __ptext2:	
  1286 ;; *************** function _VISUAL_LCD *****************
  1287 ;; Defined at:
  1288 ;;		line 151 in file "lab02.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1302 ;;      Params:         0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0
  1304 ;;      Temps:          0      14       0       0       0
  1305 ;;      Totals:         0      14       0       0       0
  1306 ;;Total ram usage:       14 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 3
  1309 ;; This function calls:
  1310 ;;		_Lcd_Set_Cursor
  1311 ;;		_Lcd_Write_String
  1312 ;;		_sprintf
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318     0413                     _VISUAL_LCD:	
  1319                           ;psect for function _VISUAL_LCD
  1320                           
  1321     0413                     l1811:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _VISUAL_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1324                           
  1325                           
  1326                           ;lab02.c: 154:  Lcd_Set_Cursor(1,1);
  1327     0413  01F4               	clrf	Lcd_Set_Cursor@b
  1328     0414  0AF4               	incf	Lcd_Set_Cursor@b,f
  1329     0415  3001               	movlw	1
  1330     0416  120A  158A  2773  120A  118A  	fcall	_Lcd_Set_Cursor
  1331     041B                     l1813:
  1332                           
  1333                           ;lab02.c: 155:  Lcd_Write_String( "S1:    S2: cont:");
  1334     041B  3046               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1335     041C  00F3               	movwf	Lcd_Write_String@a
  1336     041D  3080               	movlw	128
  1337     041E  00F4               	movwf	Lcd_Write_String@a+1
  1338     041F  120A  118A  2127  120A  118A  	fcall	_Lcd_Write_String
  1339     0424                     l1815:
  1340                           
  1341                           ;lab02.c: 157:  Lcd_Set_Cursor(2,1);
  1342     0424  01F4               	clrf	Lcd_Set_Cursor@b
  1343     0425  0AF4               	incf	Lcd_Set_Cursor@b,f
  1344     0426  3002               	movlw	2
  1345     0427  120A  158A  2773  120A  118A  	fcall	_Lcd_Set_Cursor
  1346                           
  1347                           ;lab02.c: 158:  sprintf(buffer_LCD, "%u.%u%u  %u.%u%u    %u  ", unidad_V1, decima_V1,
  1348     042C  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1349     042D  1283               	bcf	3,5	;RP0=0, select bank0
  1350     042E  1303               	bcf	3,6	;RP1=0, select bank0
  1351     042F  00A0               	movwf	sprintf@f
  1352     0430  085C               	movf	_unidad_V1,w
  1353     0431  00B9               	movwf	??_VISUAL_LCD
  1354     0432  01BA               	clrf	??_VISUAL_LCD+1
  1355     0433  0839               	movf	??_VISUAL_LCD,w
  1356     0434  00A1               	movwf	?_sprintf+1
  1357     0435  083A               	movf	??_VISUAL_LCD+1,w
  1358     0436  00A2               	movwf	?_sprintf+2
  1359     0437  085B               	movf	_decima_V1,w
  1360     0438  00BB               	movwf	??_VISUAL_LCD+2
  1361     0439  01BC               	clrf	??_VISUAL_LCD+3
  1362     043A  083B               	movf	??_VISUAL_LCD+2,w
  1363     043B  00A3               	movwf	?_sprintf+3
  1364     043C  083C               	movf	??_VISUAL_LCD+3,w
  1365     043D  00A4               	movwf	?_sprintf+4
  1366     043E  085A               	movf	_centesima_V1,w
  1367     043F  00BD               	movwf	??_VISUAL_LCD+4
  1368     0440  01BE               	clrf	??_VISUAL_LCD+5
  1369     0441  083D               	movf	??_VISUAL_LCD+4,w
  1370     0442  00A5               	movwf	?_sprintf+5
  1371     0443  083E               	movf	??_VISUAL_LCD+5,w
  1372     0444  00A6               	movwf	?_sprintf+6
  1373     0445  0859               	movf	_unidad_V2,w
  1374     0446  00BF               	movwf	??_VISUAL_LCD+6
  1375     0447  01C0               	clrf	??_VISUAL_LCD+7
  1376     0448  083F               	movf	??_VISUAL_LCD+6,w
  1377     0449  00A7               	movwf	?_sprintf+7
  1378     044A  0840               	movf	??_VISUAL_LCD+7,w
  1379     044B  00A8               	movwf	?_sprintf+8
  1380     044C  0858               	movf	_decima_V2,w
  1381     044D  00C1               	movwf	??_VISUAL_LCD+8
  1382     044E  01C2               	clrf	??_VISUAL_LCD+9
  1383     044F  0841               	movf	??_VISUAL_LCD+8,w
  1384     0450  00A9               	movwf	?_sprintf+9
  1385     0451  0842               	movf	??_VISUAL_LCD+9,w
  1386     0452  00AA               	movwf	?_sprintf+10
  1387     0453  0857               	movf	_centesima_V2,w
  1388     0454  00C3               	movwf	??_VISUAL_LCD+10
  1389     0455  01C4               	clrf	??_VISUAL_LCD+11
  1390     0456  0843               	movf	??_VISUAL_LCD+10,w
  1391     0457  00AB               	movwf	?_sprintf+11
  1392     0458  0844               	movf	??_VISUAL_LCD+11,w
  1393     0459  00AC               	movwf	?_sprintf+12
  1394     045A  0861               	movf	_contador,w
  1395     045B  00C5               	movwf	??_VISUAL_LCD+12
  1396     045C  01C6               	clrf	??_VISUAL_LCD+13
  1397     045D  0845               	movf	??_VISUAL_LCD+12,w
  1398     045E  00AD               	movwf	?_sprintf+13
  1399     045F  0846               	movf	??_VISUAL_LCD+13,w
  1400     0460  00AE               	movwf	?_sprintf+14
  1401     0461  30BE               	movlw	(low (_buffer_LCD| 0))& (0+255)
  1402     0462  120A  118A  25C1  120A  118A  	fcall	_sprintf
  1403                           
  1404                           ;lab02.c: 160:  Lcd_Write_String(buffer_LCD);
  1405     0467  30BE               	movlw	(low (_buffer_LCD| 0))& (0+255)
  1406     0468  00F3               	movwf	Lcd_Write_String@a
  1407     0469  3000               	movlw	0
  1408     046A  00F4               	movwf	Lcd_Write_String@a+1
  1409     046B  120A  118A  2127  120A  118A  	fcall	_Lcd_Write_String
  1410     0470                     l1817:
  1411                           
  1412                           ;lab02.c: 162:  _delay((unsigned long)((150)*(4000000/4000.0)));
  1413     0470  30C3               	movlw	195
  1414     0471  1283               	bcf	3,5	;RP0=0, select bank0
  1415     0472  1303               	bcf	3,6	;RP1=0, select bank0
  1416     0473  00BA               	movwf	??_VISUAL_LCD+1
  1417     0474  30CC               	movlw	204
  1418     0475  00B9               	movwf	??_VISUAL_LCD
  1419     0476                     u1907:
  1420     0476  0BB9               	decfsz	??_VISUAL_LCD,f
  1421     0477  2C76               	goto	u1907
  1422     0478  0BBA               	decfsz	??_VISUAL_LCD+1,f
  1423     0479  2C76               	goto	u1907
  1424     047A  0000               	nop
  1425     047B                     l102:
  1426     047B  0008               	return
  1427     047C                     __end_of_VISUAL_LCD:
  1428                           
  1429                           	psect	text3
  1430     0127                     __ptext3:	
  1431 ;; *************** function _Lcd_Write_String *****************
  1432 ;; Defined at:
  1433 ;;		line 103 in file "LCD.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  a               2    3[COMMON] PTR unsigned char 
  1436 ;;		 -> buffer_LCD(30), STR_1(17), 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  i               2    8[COMMON] int 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         2       0       0       0       0
  1449 ;;      Locals:         2       0       0       0       0
  1450 ;;      Temps:          3       0       0       0       0
  1451 ;;      Totals:         7       0       0       0       0
  1452 ;;Total ram usage:        7 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 2
  1455 ;; This function calls:
  1456 ;;		_Lcd_Write_Char
  1457 ;; This function is called by:
  1458 ;;		_VISUAL_LCD
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462     0127                     _Lcd_Write_String:	
  1463                           ;psect for function _Lcd_Write_String
  1464                           
  1465     0127                     l1581:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1468                           
  1469                           
  1470                           ;LCD.c: 104:     int i;;LCD.c: 105:     for (i = 0; a[i] != '\0'; i++)
  1471     0127  01F8               	clrf	Lcd_Write_String@i
  1472     0128  01F9               	clrf	Lcd_Write_String@i+1
  1473     0129  294C               	goto	l1587
  1474     012A                     l1583:
  1475                           
  1476                           ;LCD.c: 106:         Lcd_Write_Char(a[i]);
  1477     012A  0878               	movf	Lcd_Write_String@i,w
  1478     012B  0773               	addwf	Lcd_Write_String@a,w
  1479     012C  00F6               	movwf	??_Lcd_Write_String+1
  1480     012D  0874               	movf	Lcd_Write_String@a+1,w
  1481     012E  00F5               	movwf	??_Lcd_Write_String
  1482     012F  1803               	skipnc
  1483     0130  0AF5               	incf	??_Lcd_Write_String,f
  1484     0131  1FF8               	btfss	Lcd_Write_String@i,7
  1485     0132  2934               	goto	u1410
  1486     0133  03F5               	decf	??_Lcd_Write_String,f
  1487     0134                     u1410:
  1488     0134  0875               	movf	??_Lcd_Write_String,w
  1489     0135  00F7               	movwf	??_Lcd_Write_String+2
  1490     0136  0877               	movf	??_Lcd_Write_String+2,w
  1491     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1492     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1493     0139  00FF               	movwf	btemp+1
  1494     013A  0876               	movf	??_Lcd_Write_String+1,w
  1495     013B  0084               	movwf	4
  1496     013C  120A  118A  2003  120A  118A  	fcall	stringtab
  1497     0141  120A  158A  272D  120A  118A  	fcall	_Lcd_Write_Char
  1498     0146                     l1585:
  1499     0146  3001               	movlw	1
  1500     0147  07F8               	addwf	Lcd_Write_String@i,f
  1501     0148  1803               	skipnc
  1502     0149  0AF9               	incf	Lcd_Write_String@i+1,f
  1503     014A  3000               	movlw	0
  1504     014B  07F9               	addwf	Lcd_Write_String@i+1,f
  1505     014C                     l1587:
  1506     014C  0878               	movf	Lcd_Write_String@i,w
  1507     014D  0773               	addwf	Lcd_Write_String@a,w
  1508     014E  00F6               	movwf	??_Lcd_Write_String+1
  1509     014F  0874               	movf	Lcd_Write_String@a+1,w
  1510     0150  00F5               	movwf	??_Lcd_Write_String
  1511     0151  1803               	skipnc
  1512     0152  0AF5               	incf	??_Lcd_Write_String,f
  1513     0153  1FF8               	btfss	Lcd_Write_String@i,7
  1514     0154  2956               	goto	u1420
  1515     0155  03F5               	decf	??_Lcd_Write_String,f
  1516     0156                     u1420:
  1517     0156  0875               	movf	??_Lcd_Write_String,w
  1518     0157  00F7               	movwf	??_Lcd_Write_String+2
  1519     0158  0877               	movf	??_Lcd_Write_String+2,w
  1520     0159  1283               	bcf	3,5	;RP0=0, select bank0
  1521     015A  1303               	bcf	3,6	;RP1=0, select bank0
  1522     015B  00FF               	movwf	btemp+1
  1523     015C  0876               	movf	??_Lcd_Write_String+1,w
  1524     015D  0084               	movwf	4
  1525     015E  120A  118A  2003  120A  118A  	fcall	stringtab
  1526     0163  3A00               	xorlw	0
  1527     0164  1D03               	skipz
  1528     0165  2967               	goto	u1431
  1529     0166  2968               	goto	u1430
  1530     0167                     u1431:
  1531     0167  292A               	goto	l1583
  1532     0168                     u1430:
  1533     0168                     l244:
  1534     0168  0008               	return
  1535     0169                     __end_of_Lcd_Write_String:
  1536                           
  1537                           	psect	text4
  1538     0F2D                     __ptext4:	
  1539 ;; *************** function _Lcd_Write_Char *****************
  1540 ;; Defined at:
  1541 ;;		line 95 in file "LCD.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  a               1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  a               1    2[COMMON] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         0       0       0       0       0
  1556 ;;      Locals:         1       0       0       0       0
  1557 ;;      Temps:          1       0       0       0       0
  1558 ;;      Totals:         2       0       0       0       0
  1559 ;;Total ram usage:        2 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 1
  1562 ;; This function calls:
  1563 ;;		_Lcd_Port
  1564 ;; This function is called by:
  1565 ;;		_Lcd_Write_String
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569     0F2D                     _Lcd_Write_Char:	
  1570                           ;psect for function _Lcd_Write_Char
  1571                           
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1575                           ;Lcd_Write_Char@a stored from wreg
  1576     0F2D  00F2               	movwf	Lcd_Write_Char@a
  1577     0F2E                     l1433:
  1578                           
  1579                           ;LCD.c: 96:     PORTDbits.RD6 = 1;
  1580     0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  1582     0F30  1708               	bsf	8,6	;volatile
  1583     0F31                     l1435:
  1584                           
  1585                           ;LCD.c: 97:     Lcd_Port(a);
  1586     0F31  0872               	movf	Lcd_Write_Char@a,w
  1587     0F32  120A  118A  20E9  120A  158A  	fcall	_Lcd_Port
  1588     0F37                     l1437:
  1589                           
  1590                           ;LCD.c: 98:     PORTDbits.RD7 = 1;
  1591     0F37  1283               	bcf	3,5	;RP0=0, select bank0
  1592     0F38  1303               	bcf	3,6	;RP1=0, select bank0
  1593     0F39  1788               	bsf	8,7	;volatile
  1594     0F3A                     l1439:
  1595                           
  1596                           ;LCD.c: 99:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1597     0F3A  300D               	movlw	13
  1598     0F3B  00F1               	movwf	??_Lcd_Write_Char
  1599     0F3C                     u1917:
  1600     0F3C  0BF1               	decfsz	??_Lcd_Write_Char,f
  1601     0F3D  2F3C               	goto	u1917
  1602     0F3E                     l1441:
  1603                           
  1604                           ;LCD.c: 100:     PORTDbits.RD7 = 0;
  1605     0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  1607     0F40  1388               	bcf	8,7	;volatile
  1608     0F41                     l238:
  1609     0F41  0008               	return
  1610     0F42                     __end_of_Lcd_Write_Char:
  1611                           
  1612                           	psect	text5
  1613     0F73                     __ptext5:	
  1614 ;; *************** function _Lcd_Set_Cursor *****************
  1615 ;; Defined at:
  1616 ;;		line 68 in file "LCD.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  a               1    wreg     unsigned char 
  1619 ;;  b               1    4[COMMON] unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  a               1    5[COMMON] unsigned char 
  1622 ;;  temp            1    6[COMMON] unsigned char 
  1623 ;;  y               1    0        unsigned char 
  1624 ;;  z               1    0        unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         1       0       0       0       0
  1635 ;;      Locals:         2       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0
  1637 ;;      Totals:         3       0       0       0       0
  1638 ;;Total ram usage:        3 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 2
  1641 ;; This function calls:
  1642 ;;		_Lcd_Cmd
  1643 ;; This function is called by:
  1644 ;;		_VISUAL_LCD
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648     0F73                     _Lcd_Set_Cursor:	
  1649                           ;psect for function _Lcd_Set_Cursor
  1650                           
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1654                           ;Lcd_Set_Cursor@a stored from wreg
  1655     0F73  00F5               	movwf	Lcd_Set_Cursor@a
  1656     0F74                     l1569:
  1657                           
  1658                           ;LCD.c: 69:     char temp, z, y;;LCD.c: 70:     if (a == 1) {
  1659     0F74  0375               	decf	Lcd_Set_Cursor@a,w
  1660     0F75  1D03               	btfss	3,2
  1661     0F76  2F78               	goto	u1391
  1662     0F77  2F79               	goto	u1390
  1663     0F78                     u1391:
  1664     0F78  2F83               	goto	l1575
  1665     0F79                     u1390:
  1666     0F79                     l1571:
  1667                           
  1668                           ;LCD.c: 71:         temp = 0x80 + b - 1;
  1669     0F79  0874               	movf	Lcd_Set_Cursor@b,w
  1670     0F7A  3E7F               	addlw	127
  1671     0F7B  00F6               	movwf	Lcd_Set_Cursor@temp
  1672     0F7C                     l1573:
  1673                           
  1674                           ;LCD.c: 72:         Lcd_Cmd(temp);
  1675     0F7C  0876               	movf	Lcd_Set_Cursor@temp,w
  1676     0F7D  120A  158A  2759  120A  158A  	fcall	_Lcd_Cmd
  1677                           
  1678                           ;LCD.c: 73:     } else if (a == 2) {
  1679     0F82  2F92               	goto	l232
  1680     0F83                     l1575:
  1681     0F83  3002               	movlw	2
  1682     0F84  0675               	xorwf	Lcd_Set_Cursor@a,w
  1683     0F85  1D03               	btfss	3,2
  1684     0F86  2F88               	goto	u1401
  1685     0F87  2F89               	goto	u1400
  1686     0F88                     u1401:
  1687     0F88  2F92               	goto	l232
  1688     0F89                     u1400:
  1689     0F89                     l1577:
  1690                           
  1691                           ;LCD.c: 74:         temp = 0xC0 + b - 1;
  1692     0F89  0874               	movf	Lcd_Set_Cursor@b,w
  1693     0F8A  3EBF               	addlw	191
  1694     0F8B  00F6               	movwf	Lcd_Set_Cursor@temp
  1695     0F8C                     l1579:
  1696                           
  1697                           ;LCD.c: 75:         Lcd_Cmd(temp);
  1698     0F8C  0876               	movf	Lcd_Set_Cursor@temp,w
  1699     0F8D  120A  158A  2759  120A  158A  	fcall	_Lcd_Cmd
  1700     0F92                     l232:
  1701     0F92  0008               	return
  1702     0F93                     __end_of_Lcd_Set_Cursor:
  1703                           
  1704                           	psect	text6
  1705     01F3                     __ptext6:	
  1706 ;; *************** function _Uart_Init *****************
  1707 ;; Defined at:
  1708 ;;		line 3 in file "uart.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  baud            4    0[BANK0 ] unsigned long 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  vx              2    8[BANK0 ] unsigned int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       4       0       0       0
  1723 ;;      Locals:         0       2       0       0       0
  1724 ;;      Temps:          0       4       0       0       0
  1725 ;;      Totals:         0      10       0       0       0
  1726 ;;Total ram usage:       10 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 1
  1729 ;; This function calls:
  1730 ;;		___lldiv
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736     01F3                     _Uart_Init:	
  1737                           ;psect for function _Uart_Init
  1738                           
  1739     01F3                     l1781:	
  1740                           ;incstack = 0
  1741                           ; Regs used in _Uart_Init: [wreg+status,2+status,0+pclath+cstack]
  1742                           
  1743                           
  1744                           ;uart.c: 3: void Uart_Init(unsigned long baud);uart.c: 4: {;uart.c: 5:     TRISCbits.TRI
      +                          SC6 = 0;
  1745     01F3  1683               	bsf	3,5	;RP0=1, select bank1
  1746     01F4  1303               	bcf	3,6	;RP1=0, select bank1
  1747     01F5  1307               	bcf	7,6	;volatile
  1748                           
  1749                           ;uart.c: 6:     TRISCbits.TRISC7 = 1;
  1750     01F6  1787               	bsf	7,7	;volatile
  1751     01F7                     l1783:
  1752                           
  1753                           ;uart.c: 7:     TXSTA = 0x24;
  1754     01F7  3024               	movlw	36
  1755     01F8  0098               	movwf	24	;volatile
  1756                           
  1757                           ;uart.c: 8:     RCSTA = 0x90;
  1758     01F9  3090               	movlw	144
  1759     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1760     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1761     01FC  0098               	movwf	24	;volatile
  1762     01FD                     l1785:
  1763                           
  1764                           ;uart.c: 9:     BAUDCTL = 0x00;
  1765     01FD  1683               	bsf	3,5	;RP0=1, select bank3
  1766     01FE  1703               	bsf	3,6	;RP1=1, select bank3
  1767     01FF  0187               	clrf	7	;volatile
  1768     0200                     l1787:
  1769                           
  1770                           ;uart.c: 10:     BAUDCTLbits.BRG16 = 1;
  1771     0200  1587               	bsf	7,3	;volatile
  1772     0201                     l1789:
  1773                           
  1774                           ;uart.c: 11:     unsigned int vx = (4000000/(baud*4))-1;
  1775     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1776     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1777     0203  0820               	movf	Uart_Init@baud,w
  1778     0204  00A4               	movwf	??_Uart_Init
  1779     0205  0821               	movf	Uart_Init@baud+1,w
  1780     0206  00A5               	movwf	??_Uart_Init+1
  1781     0207  0822               	movf	Uart_Init@baud+2,w
  1782     0208  00A6               	movwf	??_Uart_Init+2
  1783     0209  0823               	movf	Uart_Init@baud+3,w
  1784     020A  00A7               	movwf	??_Uart_Init+3
  1785     020B  3002               	movlw	2
  1786     020C                     u1825:
  1787     020C  1003               	clrc
  1788     020D  0DA4               	rlf	??_Uart_Init,f
  1789     020E  0DA5               	rlf	??_Uart_Init+1,f
  1790     020F  0DA6               	rlf	??_Uart_Init+2,f
  1791     0210  0DA7               	rlf	??_Uart_Init+3,f
  1792     0211                     u1820:
  1793     0211  3EFF               	addlw	-1
  1794     0212  1D03               	skipz
  1795     0213  2A0C               	goto	u1825
  1796     0214  0827               	movf	??_Uart_Init+3,w
  1797     0215  00F3               	movwf	___lldiv@divisor+3
  1798     0216  0826               	movf	??_Uart_Init+2,w
  1799     0217  00F2               	movwf	___lldiv@divisor+2
  1800     0218  0825               	movf	??_Uart_Init+1,w
  1801     0219  00F1               	movwf	___lldiv@divisor+1
  1802     021A  0824               	movf	??_Uart_Init,w
  1803     021B  00F0               	movwf	___lldiv@divisor
  1804     021C  3000               	movlw	0
  1805     021D  00F7               	movwf	___lldiv@dividend+3
  1806     021E  303D               	movlw	61
  1807     021F  00F6               	movwf	___lldiv@dividend+2
  1808     0220  3009               	movlw	9
  1809     0221  00F5               	movwf	___lldiv@dividend+1
  1810     0222  3000               	movlw	0
  1811     0223  00F4               	movwf	___lldiv@dividend
  1812     0224  120A  118A  2344  120A  118A  	fcall	___lldiv
  1813     0229  0870               	movf	?___lldiv,w
  1814     022A  3EFF               	addlw	255
  1815     022B  1283               	bcf	3,5	;RP0=0, select bank0
  1816     022C  1303               	bcf	3,6	;RP1=0, select bank0
  1817     022D  00A8               	movwf	Uart_Init@vx
  1818     022E  0871               	movf	?___lldiv+1,w
  1819     022F  1803               	skipnc
  1820     0230  3E01               	addlw	1
  1821     0231  3EFF               	addlw	255
  1822     0232  00A9               	movwf	Uart_Init@vx+1
  1823     0233                     l1791:
  1824                           
  1825                           ;uart.c: 12:     SPBRG = vx & 0x00FF;
  1826     0233  0828               	movf	Uart_Init@vx,w
  1827     0234  1683               	bsf	3,5	;RP0=1, select bank1
  1828     0235  1303               	bcf	3,6	;RP1=0, select bank1
  1829     0236  0099               	movwf	25	;volatile
  1830     0237                     l1793:
  1831                           
  1832                           ;uart.c: 13:     SPBRGH = vx >> 8;
  1833     0237  1283               	bcf	3,5	;RP0=0, select bank0
  1834     0238  1303               	bcf	3,6	;RP1=0, select bank0
  1835     0239  0829               	movf	Uart_Init@vx+1,w
  1836     023A  1683               	bsf	3,5	;RP0=1, select bank1
  1837     023B  1303               	bcf	3,6	;RP1=0, select bank1
  1838     023C  009A               	movwf	26	;volatile
  1839     023D                     l154:
  1840     023D  0008               	return
  1841     023E                     __end_of_Uart_Init:
  1842                           
  1843                           	psect	text7
  1844     0344                     __ptext7:	
  1845 ;; *************** function ___lldiv *****************
  1846 ;; Defined at:
  1847 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  divisor         4    0[COMMON] unsigned long 
  1850 ;;  dividend        4    4[COMMON] unsigned long 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  quotient        4    9[COMMON] unsigned long 
  1853 ;;  counter         1   13[COMMON] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  4    0[COMMON] unsigned long 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         8       0       0       0       0
  1864 ;;      Locals:         5       0       0       0       0
  1865 ;;      Temps:          1       0       0       0       0
  1866 ;;      Totals:        14       0       0       0       0
  1867 ;;Total ram usage:       14 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_Uart_Init
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876     0344                     ___lldiv:	
  1877                           ;psect for function ___lldiv
  1878                           
  1879     0344                     l1675:	
  1880                           ;incstack = 0
  1881                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1882                           
  1883     0344  3000               	movlw	0
  1884     0345  00FC               	movwf	___lldiv@quotient+3
  1885     0346  3000               	movlw	0
  1886     0347  00FB               	movwf	___lldiv@quotient+2
  1887     0348  3000               	movlw	0
  1888     0349  00FA               	movwf	___lldiv@quotient+1
  1889     034A  3000               	movlw	0
  1890     034B  00F9               	movwf	___lldiv@quotient
  1891     034C  0873               	movf	___lldiv@divisor+3,w
  1892     034D  0472               	iorwf	___lldiv@divisor+2,w
  1893     034E  0471               	iorwf	___lldiv@divisor+1,w
  1894     034F  0470               	iorwf	___lldiv@divisor,w
  1895     0350  1903               	skipnz
  1896     0351  2B53               	goto	u1561
  1897     0352  2B54               	goto	u1560
  1898     0353                     u1561:
  1899     0353  2BA1               	goto	l1695
  1900     0354                     u1560:
  1901     0354                     l1677:
  1902     0354  01FD               	clrf	___lldiv@counter
  1903     0355  0AFD               	incf	___lldiv@counter,f
  1904     0356  2B64               	goto	l1681
  1905     0357                     l1679:
  1906     0357  3001               	movlw	1
  1907     0358  00F8               	movwf	??___lldiv
  1908     0359                     u1575:
  1909     0359  1003               	clrc
  1910     035A  0DF0               	rlf	___lldiv@divisor,f
  1911     035B  0DF1               	rlf	___lldiv@divisor+1,f
  1912     035C  0DF2               	rlf	___lldiv@divisor+2,f
  1913     035D  0DF3               	rlf	___lldiv@divisor+3,f
  1914     035E  0BF8               	decfsz	??___lldiv,f
  1915     035F  2B59               	goto	u1575
  1916     0360  3001               	movlw	1
  1917     0361  00F8               	movwf	??___lldiv
  1918     0362  0878               	movf	??___lldiv,w
  1919     0363  07FD               	addwf	___lldiv@counter,f
  1920     0364                     l1681:
  1921     0364  1FF3               	btfss	___lldiv@divisor+3,7
  1922     0365  2B67               	goto	u1581
  1923     0366  2B68               	goto	u1580
  1924     0367                     u1581:
  1925     0367  2B57               	goto	l1679
  1926     0368                     u1580:
  1927     0368                     l1683:
  1928     0368  3001               	movlw	1
  1929     0369  00F8               	movwf	??___lldiv
  1930     036A                     u1595:
  1931     036A  1003               	clrc
  1932     036B  0DF9               	rlf	___lldiv@quotient,f
  1933     036C  0DFA               	rlf	___lldiv@quotient+1,f
  1934     036D  0DFB               	rlf	___lldiv@quotient+2,f
  1935     036E  0DFC               	rlf	___lldiv@quotient+3,f
  1936     036F  0BF8               	decfsz	??___lldiv,f
  1937     0370  2B6A               	goto	u1595
  1938     0371                     l1685:
  1939     0371  0873               	movf	___lldiv@divisor+3,w
  1940     0372  0277               	subwf	___lldiv@dividend+3,w
  1941     0373  1D03               	skipz
  1942     0374  2B7F               	goto	u1605
  1943     0375  0872               	movf	___lldiv@divisor+2,w
  1944     0376  0276               	subwf	___lldiv@dividend+2,w
  1945     0377  1D03               	skipz
  1946     0378  2B7F               	goto	u1605
  1947     0379  0871               	movf	___lldiv@divisor+1,w
  1948     037A  0275               	subwf	___lldiv@dividend+1,w
  1949     037B  1D03               	skipz
  1950     037C  2B7F               	goto	u1605
  1951     037D  0870               	movf	___lldiv@divisor,w
  1952     037E  0274               	subwf	___lldiv@dividend,w
  1953     037F                     u1605:
  1954     037F  1C03               	skipc
  1955     0380  2B82               	goto	u1601
  1956     0381  2B83               	goto	u1600
  1957     0382                     u1601:
  1958     0382  2B92               	goto	l1691
  1959     0383                     u1600:
  1960     0383                     l1687:
  1961     0383  0870               	movf	___lldiv@divisor,w
  1962     0384  02F4               	subwf	___lldiv@dividend,f
  1963     0385  0871               	movf	___lldiv@divisor+1,w
  1964     0386  1C03               	skipc
  1965     0387  0F71               	incfsz	___lldiv@divisor+1,w
  1966     0388  02F5               	subwf	___lldiv@dividend+1,f
  1967     0389  0872               	movf	___lldiv@divisor+2,w
  1968     038A  1C03               	skipc
  1969     038B  0F72               	incfsz	___lldiv@divisor+2,w
  1970     038C  02F6               	subwf	___lldiv@dividend+2,f
  1971     038D  0873               	movf	___lldiv@divisor+3,w
  1972     038E  1C03               	skipc
  1973     038F  0F73               	incfsz	___lldiv@divisor+3,w
  1974     0390  02F7               	subwf	___lldiv@dividend+3,f
  1975     0391                     l1689:
  1976     0391  1479               	bsf	___lldiv@quotient,0
  1977     0392                     l1691:
  1978     0392  3001               	movlw	1
  1979     0393                     u1615:
  1980     0393  1003               	clrc
  1981     0394  0CF3               	rrf	___lldiv@divisor+3,f
  1982     0395  0CF2               	rrf	___lldiv@divisor+2,f
  1983     0396  0CF1               	rrf	___lldiv@divisor+1,f
  1984     0397  0CF0               	rrf	___lldiv@divisor,f
  1985     0398  3EFF               	addlw	-1
  1986     0399  1D03               	skipz
  1987     039A  2B93               	goto	u1615
  1988     039B                     l1693:
  1989     039B  3001               	movlw	1
  1990     039C  02FD               	subwf	___lldiv@counter,f
  1991     039D  1D03               	btfss	3,2
  1992     039E  2BA0               	goto	u1621
  1993     039F  2BA1               	goto	u1620
  1994     03A0                     u1621:
  1995     03A0  2B68               	goto	l1683
  1996     03A1                     u1620:
  1997     03A1                     l1695:
  1998     03A1  087C               	movf	___lldiv@quotient+3,w
  1999     03A2  00F3               	movwf	?___lldiv+3
  2000     03A3  087B               	movf	___lldiv@quotient+2,w
  2001     03A4  00F2               	movwf	?___lldiv+2
  2002     03A5  087A               	movf	___lldiv@quotient+1,w
  2003     03A6  00F1               	movwf	?___lldiv+1
  2004     03A7  0879               	movf	___lldiv@quotient,w
  2005     03A8  00F0               	movwf	?___lldiv
  2006     03A9                     l397:
  2007     03A9  0008               	return
  2008     03AA                     __end_of___lldiv:
  2009                           
  2010                           	psect	text8
  2011     028F                     __ptext8:	
  2012 ;; *************** function _TX_RX *****************
  2013 ;; Defined at:
  2014 ;;		line 165 in file "lab02.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       4       0       0       0
  2031 ;;      Totals:         0       4       0       0       0
  2032 ;;Total ram usage:        4 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 2
  2035 ;; This function calls:
  2036 ;;		_Uart_Available
  2037 ;;		_Uart_Read
  2038 ;;		_Uart_Send_String
  2039 ;;		_sprintf
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045     028F                     _TX_RX:	
  2046                           ;psect for function _TX_RX
  2047                           
  2048     028F                     l1819:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _TX_RX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2051                           
  2052                           
  2053                           ;lab02.c: 167: sprintf(buffer_UART, "Valor ADC1: %u , Valor ADC2: %u\r\n",
  2054     028F  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2055     0290  1283               	bcf	3,5	;RP0=0, select bank0
  2056     0291  1303               	bcf	3,6	;RP1=0, select bank0
  2057     0292  00A0               	movwf	sprintf@f
  2058     0293  0860               	movf	_valor_ch0,w
  2059     0294  00B9               	movwf	??_TX_RX
  2060     0295  01BA               	clrf	??_TX_RX+1
  2061     0296  0839               	movf	??_TX_RX,w
  2062     0297  00A1               	movwf	?_sprintf+1
  2063     0298  083A               	movf	??_TX_RX+1,w
  2064     0299  00A2               	movwf	?_sprintf+2
  2065     029A  085F               	movf	_valor_ch1,w
  2066     029B  00BB               	movwf	??_TX_RX+2
  2067     029C  01BC               	clrf	??_TX_RX+3
  2068     029D  083B               	movf	??_TX_RX+2,w
  2069     029E  00A3               	movwf	?_sprintf+3
  2070     029F  083C               	movf	??_TX_RX+3,w
  2071     02A0  00A4               	movwf	?_sprintf+4
  2072     02A1  30A0               	movlw	(low (_buffer_UART| 0))& (0+255)
  2073     02A2  120A  118A  25C1  120A  118A  	fcall	_sprintf
  2074     02A7                     l1821:
  2075                           
  2076                           ;lab02.c: 169:  Uart_Send_String(buffer_UART);
  2077     02A7  30A0               	movlw	(low (_buffer_UART| 0))& (0+255)
  2078     02A8  120A  158A  2742  120A  118A  	fcall	_Uart_Send_String
  2079     02AD                     l1823:
  2080                           
  2081                           ;lab02.c: 170:  _delay((unsigned long)((150)*(4000000/4000.0)));
  2082     02AD  30C3               	movlw	195
  2083     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2084     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2085     02B0  00BA               	movwf	??_TX_RX+1
  2086     02B1  30CC               	movlw	204
  2087     02B2  00B9               	movwf	??_TX_RX
  2088     02B3                     u1927:
  2089     02B3  0BB9               	decfsz	??_TX_RX,f
  2090     02B4  2AB3               	goto	u1927
  2091     02B5  0BBA               	decfsz	??_TX_RX+1,f
  2092     02B6  2AB3               	goto	u1927
  2093     02B7  0000               	nop
  2094     02B8                     l1825:
  2095                           
  2096                           ;lab02.c: 172:         if(Uart_Available() >0)
  2097     02B8  120A  158A  2711  120A  118A  	fcall	_Uart_Available
  2098     02BD  0871               	movf	?_Uart_Available+1,w
  2099     02BE  3A80               	xorlw	128
  2100     02BF  00FF               	movwf	btemp+1
  2101     02C0  3080               	movlw	128
  2102     02C1  027F               	subwf	btemp+1,w
  2103     02C2  1D03               	skipz
  2104     02C3  2AC6               	goto	u1835
  2105     02C4  3001               	movlw	1
  2106     02C5  0270               	subwf	?_Uart_Available,w
  2107     02C6                     u1835:
  2108     02C6  1C03               	skipc
  2109     02C7  2AC9               	goto	u1831
  2110     02C8  2ACA               	goto	u1830
  2111     02C9                     u1831:
  2112     02C9  2AE4               	goto	l1835
  2113     02CA                     u1830:
  2114     02CA                     l1827:
  2115                           
  2116                           ;lab02.c: 173:         {;lab02.c: 174:             dato_rx = Uart_Read();
  2117     02CA  120A  158A  271E  120A  118A  	fcall	_Uart_Read
  2118     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2119     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2120     02D1  00D6               	movwf	_dato_rx
  2121     02D2                     l1829:
  2122                           
  2123                           ;lab02.c: 175:             if(dato_rx == '+')
  2124     02D2  302B               	movlw	43
  2125     02D3  0656               	xorwf	_dato_rx,w
  2126     02D4  1D03               	btfss	3,2
  2127     02D5  2AD7               	goto	u1841
  2128     02D6  2AD8               	goto	u1840
  2129     02D7                     u1841:
  2130     02D7  2ADB               	goto	l106
  2131     02D8                     u1840:
  2132     02D8                     l1831:
  2133                           
  2134                           ;lab02.c: 176:             {;lab02.c: 177:                 contador = contador + 1;
  2135     02D8  0861               	movf	_contador,w
  2136     02D9  3E01               	addlw	1
  2137     02DA  00E1               	movwf	_contador
  2138     02DB                     l106:	
  2139                           ;lab02.c: 178:             }
  2140                           
  2141                           
  2142                           ;lab02.c: 179:             if(dato_rx == '-')
  2143     02DB  302D               	movlw	45
  2144     02DC  0656               	xorwf	_dato_rx,w
  2145     02DD  1D03               	btfss	3,2
  2146     02DE  2AE0               	goto	u1851
  2147     02DF  2AE1               	goto	u1850
  2148     02E0                     u1851:
  2149     02E0  2AE4               	goto	l1835
  2150     02E1                     u1850:
  2151     02E1                     l1833:
  2152                           
  2153                           ;lab02.c: 180:             {;lab02.c: 181:                 contador = contador - 1;
  2154     02E1  0861               	movf	_contador,w
  2155     02E2  3EFF               	addlw	255
  2156     02E3  00E1               	movwf	_contador
  2157     02E4                     l1835:
  2158                           
  2159                           ;lab02.c: 184:         PORTE = contador;
  2160     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2161     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2162     02E6  0861               	movf	_contador,w
  2163     02E7  0089               	movwf	9	;volatile
  2164     02E8                     l108:
  2165     02E8  0008               	return
  2166     02E9                     __end_of_TX_RX:
  2167                           
  2168                           	psect	text9
  2169     05C1                     __ptext9:	
  2170 ;; *************** function _sprintf *****************
  2171 ;; Defined at:
  2172 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  sp              1    wreg     PTR unsigned char 
  2175 ;;		 -> buffer_UART(30), buffer_LCD(30), 
  2176 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2177 ;;		 -> STR_3(34), STR_2(25), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  2180 ;;		 -> buffer_UART(30), buffer_LCD(30), 
  2181 ;;  tmpval          4    0        struct .
  2182 ;;  val             2   20[BANK0 ] unsigned int 
  2183 ;;  cp              2    0        PTR const unsigned char 
  2184 ;;  len             2    0        unsigned int 
  2185 ;;  c               1   24[BANK0 ] unsigned char 
  2186 ;;  prec            1   22[BANK0 ] char 
  2187 ;;  ap              1   19[BANK0 ] PTR void [1]
  2188 ;;		 -> ?_sprintf(2), 
  2189 ;;  flag            1   18[BANK0 ] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  2    0[BANK0 ] int 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0      15       0       0       0
  2200 ;;      Locals:         0       7       0       0       0
  2201 ;;      Temps:          0       3       0       0       0
  2202 ;;      Totals:         0      25       0       0       0
  2203 ;;Total ram usage:       25 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 1
  2206 ;; This function calls:
  2207 ;;		___lwdiv
  2208 ;;		___lwmod
  2209 ;; This function is called by:
  2210 ;;		_VISUAL_LCD
  2211 ;;		_TX_RX
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215     05C1                     _sprintf:	
  2216                           ;psect for function _sprintf
  2217                           
  2218                           
  2219                           ;incstack = 0
  2220                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2221                           ;sprintf@sp stored from wreg
  2222     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2223     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2224     05C3  00B7               	movwf	sprintf@sp
  2225     05C4                     l1589:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2228     05C4  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2229     05C5  00B3               	movwf	sprintf@ap
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2232     05C6  2E6D               	goto	l1631
  2233     05C7                     l1591:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2236     05C7  3025               	movlw	37
  2237     05C8  0638               	xorwf	sprintf@c,w
  2238     05C9  1903               	btfsc	3,2
  2239     05CA  2DCC               	goto	u1441
  2240     05CB  2DCD               	goto	u1440
  2241     05CC                     u1441:
  2242     05CC  2DD7               	goto	l1597
  2243     05CD                     u1440:
  2244     05CD                     l1593:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2247     05CD  0837               	movf	sprintf@sp,w
  2248     05CE  0084               	movwf	4
  2249     05CF  0838               	movf	sprintf@c,w
  2250     05D0  1383               	bcf	3,7	;select IRP bank0
  2251     05D1  0080               	movwf	0
  2252     05D2                     l1595:
  2253     05D2  3001               	movlw	1
  2254     05D3  00AF               	movwf	??_sprintf
  2255     05D4  082F               	movf	??_sprintf,w
  2256     05D5  07B7               	addwf	sprintf@sp,f
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2259     05D6  2E6D               	goto	l1631
  2260     05D7                     l1597:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2263     05D7  01B2               	clrf	sprintf@flag
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2266     05D8  2DDE               	goto	l1603
  2267     05D9                     l1599:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2270     05D9  30C0               	movlw	192
  2271     05DA  00AF               	movwf	??_sprintf
  2272     05DB  082F               	movf	??_sprintf,w
  2273     05DC  04B2               	iorwf	sprintf@flag,f
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2276     05DD  2DF8               	goto	l1605
  2277     05DE                     l1603:
  2278     05DE  3001               	movlw	1
  2279     05DF  07A0               	addwf	sprintf@f,f
  2280     05E0  30FF               	movlw	-1
  2281     05E1  0720               	addwf	sprintf@f,w
  2282     05E2  0084               	movwf	4
  2283     05E3  120A  118A  200D  120A  118A  	fcall	stringdir
  2284     05E8  00B8               	movwf	sprintf@c
  2285     05E9  00AF               	movwf	??_sprintf
  2286     05EA  01B0               	clrf	??_sprintf+1
  2287                           
  2288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2289                           ; Switch size 1, requested type "simple"
  2290                           ; Number of cases is 1, Range of values is 0 to 0
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte            4     3 (average)
  2294                           ; direct_byte           11     8 (fixed)
  2295                           ; jumptable            260     6 (fixed)
  2296                           ;	Chosen strategy is simple_byte
  2297     05EB  0830               	movf	??_sprintf+1,w
  2298     05EC  3A00               	xorlw	0	; case 0
  2299     05ED  1903               	skipnz
  2300     05EE  2DF0               	goto	l1909
  2301     05EF  2E6D               	goto	l1631
  2302     05F0                     l1909:
  2303                           
  2304                           ; Switch size 1, requested type "simple"
  2305                           ; Number of cases is 2, Range of values is 0 to 117
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte            7     4 (average)
  2309                           ; jumptable            260     6 (fixed)
  2310                           ;	Chosen strategy is simple_byte
  2311     05F0  082F               	movf	??_sprintf,w
  2312     05F1  3A00               	xorlw	0	; case 0
  2313     05F2  1903               	skipnz
  2314     05F3  2E7D               	goto	l1633
  2315     05F4  3A75               	xorlw	117	; case 117
  2316     05F5  1903               	skipnz
  2317     05F6  2DD9               	goto	l1599
  2318     05F7  2E6D               	goto	l1631
  2319     05F8                     l1605:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2322     05F8  0833               	movf	sprintf@ap,w
  2323     05F9  0084               	movwf	4
  2324     05FA  1383               	bcf	3,7	;select IRP bank0
  2325     05FB  0800               	movf	0,w
  2326     05FC  00B4               	movwf	sprintf@val
  2327     05FD  0A84               	incf	4,f
  2328     05FE  0800               	movf	0,w
  2329     05FF  00B5               	movwf	sprintf@val+1
  2330     0600                     l1607:
  2331     0600  3002               	movlw	2
  2332     0601  00AF               	movwf	??_sprintf
  2333     0602  082F               	movf	??_sprintf,w
  2334     0603  07B3               	addwf	sprintf@ap,f
  2335     0604                     l1609:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2338     0604  01B8               	clrf	sprintf@c
  2339     0605  0AB8               	incf	sprintf@c,f
  2340     0606                     l1615:
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2343     0606  0838               	movf	sprintf@c,w
  2344     0607  00AF               	movwf	??_sprintf
  2345     0608  072F               	addwf	??_sprintf,w
  2346     0609  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2347     060A  0084               	movwf	4
  2348     060B  120A  118A  200D  120A  118A  	fcall	stringdir
  2349     0610  00B0               	movwf	??_sprintf+1
  2350     0611  120A  118A  200D  120A  118A  	fcall	stringdir
  2351     0616  00B1               	movwf	??_sprintf+2
  2352     0617  0831               	movf	??_sprintf+2,w
  2353     0618  0235               	subwf	sprintf@val+1,w
  2354     0619  1D03               	skipz
  2355     061A  2E1D               	goto	u1455
  2356     061B  0830               	movf	??_sprintf+1,w
  2357     061C  0234               	subwf	sprintf@val,w
  2358     061D                     u1455:
  2359     061D  1803               	skipnc
  2360     061E  2E20               	goto	u1451
  2361     061F  2E21               	goto	u1450
  2362     0620                     u1451:
  2363     0620  2E22               	goto	l1619
  2364     0621                     u1450:
  2365     0621  2E2C               	goto	l1621
  2366     0622                     l1619:
  2367     0622  3001               	movlw	1
  2368     0623  00AF               	movwf	??_sprintf
  2369     0624  082F               	movf	??_sprintf,w
  2370     0625  07B8               	addwf	sprintf@c,f
  2371     0626  3005               	movlw	5
  2372     0627  0638               	xorwf	sprintf@c,w
  2373     0628  1D03               	btfss	3,2
  2374     0629  2E2B               	goto	u1461
  2375     062A  2E2C               	goto	u1460
  2376     062B                     u1461:
  2377     062B  2E06               	goto	l1615
  2378     062C                     u1460:
  2379     062C                     l1621:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2382     062C  0838               	movf	sprintf@c,w
  2383     062D  00B6               	movwf	sprintf@prec
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2386     062E  2E64               	goto	l1629
  2387     062F                     l1623:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2390     062F  300A               	movlw	10
  2391     0630  00F8               	movwf	___lwmod@divisor
  2392     0631  3000               	movlw	0
  2393     0632  00F9               	movwf	___lwmod@divisor+1
  2394     0633  0836               	movf	sprintf@prec,w
  2395     0634  00AF               	movwf	??_sprintf
  2396     0635  072F               	addwf	??_sprintf,w
  2397     0636  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2398     0637  0084               	movwf	4
  2399     0638  120A  118A  200D  120A  118A  	fcall	stringdir
  2400     063D  00F0               	movwf	___lwdiv@divisor
  2401     063E  120A  118A  200D  120A  118A  	fcall	stringdir
  2402     0643  00F1               	movwf	___lwdiv@divisor+1
  2403     0644  0835               	movf	sprintf@val+1,w
  2404     0645  00F3               	movwf	___lwdiv@dividend+1
  2405     0646  0834               	movf	sprintf@val,w
  2406     0647  00F2               	movwf	___lwdiv@dividend
  2407     0648  120A  118A  2169  120A  118A  	fcall	___lwdiv
  2408     064D  0871               	movf	?___lwdiv+1,w
  2409     064E  00FB               	movwf	___lwmod@dividend+1
  2410     064F  0870               	movf	?___lwdiv,w
  2411     0650  00FA               	movwf	___lwmod@dividend
  2412     0651  120A  118A  2072  120A  118A  	fcall	___lwmod
  2413     0656  0878               	movf	?___lwmod,w
  2414     0657  3E30               	addlw	48
  2415     0658  1283               	bcf	3,5	;RP0=0, select bank0
  2416     0659  1303               	bcf	3,6	;RP1=0, select bank0
  2417     065A  00B8               	movwf	sprintf@c
  2418     065B                     l1625:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2421     065B  0837               	movf	sprintf@sp,w
  2422     065C  0084               	movwf	4
  2423     065D  0838               	movf	sprintf@c,w
  2424     065E  1383               	bcf	3,7	;select IRP bank0
  2425     065F  0080               	movwf	0
  2426     0660                     l1627:
  2427     0660  3001               	movlw	1
  2428     0661  00AF               	movwf	??_sprintf
  2429     0662  082F               	movf	??_sprintf,w
  2430     0663  07B7               	addwf	sprintf@sp,f
  2431     0664                     l1629:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2434     0664  30FF               	movlw	255
  2435     0665  00AF               	movwf	??_sprintf
  2436     0666  082F               	movf	??_sprintf,w
  2437     0667  07B6               	addwf	sprintf@prec,f
  2438     0668  0A36               	incf	sprintf@prec,w
  2439     0669  1D03               	btfss	3,2
  2440     066A  2E6C               	goto	u1471
  2441     066B  2E6D               	goto	u1470
  2442     066C                     u1471:
  2443     066C  2E2F               	goto	l1623
  2444     066D                     u1470:
  2445     066D                     l1631:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2448     066D  3001               	movlw	1
  2449     066E  07A0               	addwf	sprintf@f,f
  2450     066F  30FF               	movlw	-1
  2451     0670  0720               	addwf	sprintf@f,w
  2452     0671  0084               	movwf	4
  2453     0672  120A  118A  200D  120A  118A  	fcall	stringdir
  2454     0677  00B8               	movwf	sprintf@c
  2455     0678  0838               	movf	sprintf@c,w
  2456     0679  1D03               	btfss	3,2
  2457     067A  2E7C               	goto	u1481
  2458     067B  2E7D               	goto	u1480
  2459     067C                     u1481:
  2460     067C  2DC7               	goto	l1591
  2461     067D                     u1480:
  2462     067D                     l1633:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2465     067D  0837               	movf	sprintf@sp,w
  2466     067E  0084               	movwf	4
  2467     067F  1383               	bcf	3,7	;select IRP bank0
  2468     0680  0180               	clrf	0
  2469     0681                     l357:
  2470     0681  0008               	return
  2471     0682                     __end_of_sprintf:
  2472                           
  2473                           	psect	text10
  2474     0072                     __ptext10:	
  2475 ;; *************** function ___lwmod *****************
  2476 ;; Defined at:
  2477 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  divisor         2    8[COMMON] unsigned int 
  2480 ;;  dividend        2   10[COMMON] unsigned int 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  counter         1   13[COMMON] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  2    8[COMMON] unsigned int 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         4       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0
  2494 ;;      Temps:          1       0       0       0       0
  2495 ;;      Totals:         6       0       0       0       0
  2496 ;;Total ram usage:        6 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_sprintf
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505     0072                     ___lwmod:	
  2506                           ;psect for function ___lwmod
  2507                           
  2508     0072                     l1523:	
  2509                           ;incstack = 0
  2510                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2511                           
  2512     0072  0878               	movf	___lwmod@divisor,w
  2513     0073  0479               	iorwf	___lwmod@divisor+1,w
  2514     0074  1903               	btfsc	3,2
  2515     0075  2877               	goto	u1271
  2516     0076  2878               	goto	u1270
  2517     0077                     u1271:
  2518     0077  28A7               	goto	l1541
  2519     0078                     u1270:
  2520     0078                     l1525:
  2521     0078  01FD               	clrf	___lwmod@counter
  2522     0079  0AFD               	incf	___lwmod@counter,f
  2523     007A  2886               	goto	l1531
  2524     007B                     l1527:
  2525     007B  3001               	movlw	1
  2526     007C                     u1285:
  2527     007C  1003               	clrc
  2528     007D  0DF8               	rlf	___lwmod@divisor,f
  2529     007E  0DF9               	rlf	___lwmod@divisor+1,f
  2530     007F  3EFF               	addlw	-1
  2531     0080  1D03               	skipz
  2532     0081  287C               	goto	u1285
  2533     0082                     l1529:
  2534     0082  3001               	movlw	1
  2535     0083  00FC               	movwf	??___lwmod
  2536     0084  087C               	movf	??___lwmod,w
  2537     0085  07FD               	addwf	___lwmod@counter,f
  2538     0086                     l1531:
  2539     0086  1FF9               	btfss	___lwmod@divisor+1,7
  2540     0087  2889               	goto	u1291
  2541     0088  288A               	goto	u1290
  2542     0089                     u1291:
  2543     0089  287B               	goto	l1527
  2544     008A                     u1290:
  2545     008A                     l1533:
  2546     008A  0879               	movf	___lwmod@divisor+1,w
  2547     008B  027B               	subwf	___lwmod@dividend+1,w
  2548     008C  1D03               	skipz
  2549     008D  2890               	goto	u1305
  2550     008E  0878               	movf	___lwmod@divisor,w
  2551     008F  027A               	subwf	___lwmod@dividend,w
  2552     0090                     u1305:
  2553     0090  1C03               	skipc
  2554     0091  2893               	goto	u1301
  2555     0092  2894               	goto	u1300
  2556     0093                     u1301:
  2557     0093  289A               	goto	l1537
  2558     0094                     u1300:
  2559     0094                     l1535:
  2560     0094  0878               	movf	___lwmod@divisor,w
  2561     0095  02FA               	subwf	___lwmod@dividend,f
  2562     0096  0879               	movf	___lwmod@divisor+1,w
  2563     0097  1C03               	skipc
  2564     0098  03FB               	decf	___lwmod@dividend+1,f
  2565     0099  02FB               	subwf	___lwmod@dividend+1,f
  2566     009A                     l1537:
  2567     009A  3001               	movlw	1
  2568     009B                     u1315:
  2569     009B  1003               	clrc
  2570     009C  0CF9               	rrf	___lwmod@divisor+1,f
  2571     009D  0CF8               	rrf	___lwmod@divisor,f
  2572     009E  3EFF               	addlw	-1
  2573     009F  1D03               	skipz
  2574     00A0  289B               	goto	u1315
  2575     00A1                     l1539:
  2576     00A1  3001               	movlw	1
  2577     00A2  02FD               	subwf	___lwmod@counter,f
  2578     00A3  1D03               	btfss	3,2
  2579     00A4  28A6               	goto	u1321
  2580     00A5  28A7               	goto	u1320
  2581     00A6                     u1321:
  2582     00A6  288A               	goto	l1533
  2583     00A7                     u1320:
  2584     00A7                     l1541:
  2585     00A7  087B               	movf	___lwmod@dividend+1,w
  2586     00A8  00F9               	movwf	?___lwmod+1
  2587     00A9  087A               	movf	___lwmod@dividend,w
  2588     00AA  00F8               	movwf	?___lwmod
  2589     00AB                     l643:
  2590     00AB  0008               	return
  2591     00AC                     __end_of___lwmod:
  2592                           
  2593                           	psect	text11
  2594     0169                     __ptext11:	
  2595 ;; *************** function ___lwdiv *****************
  2596 ;; Defined at:
  2597 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  divisor         2    0[COMMON] unsigned int 
  2600 ;;  dividend        2    2[COMMON] unsigned int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  quotient        2    5[COMMON] unsigned int 
  2603 ;;  counter         1    7[COMMON] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2    0[COMMON] unsigned int 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         4       0       0       0       0
  2614 ;;      Locals:         3       0       0       0       0
  2615 ;;      Temps:          1       0       0       0       0
  2616 ;;      Totals:         8       0       0       0       0
  2617 ;;Total ram usage:        8 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_sprintf
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626     0169                     ___lwdiv:	
  2627                           ;psect for function ___lwdiv
  2628                           
  2629     0169                     l1497:	
  2630                           ;incstack = 0
  2631                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2632                           
  2633     0169  01F5               	clrf	___lwdiv@quotient
  2634     016A  01F6               	clrf	___lwdiv@quotient+1
  2635     016B                     l1499:
  2636     016B  0870               	movf	___lwdiv@divisor,w
  2637     016C  0471               	iorwf	___lwdiv@divisor+1,w
  2638     016D  1903               	btfsc	3,2
  2639     016E  2970               	goto	u1201
  2640     016F  2971               	goto	u1200
  2641     0170                     u1201:
  2642     0170  29A8               	goto	l1519
  2643     0171                     u1200:
  2644     0171                     l1501:
  2645     0171  01F7               	clrf	___lwdiv@counter
  2646     0172  0AF7               	incf	___lwdiv@counter,f
  2647     0173  297F               	goto	l1507
  2648     0174                     l1503:
  2649     0174  3001               	movlw	1
  2650     0175                     u1215:
  2651     0175  1003               	clrc
  2652     0176  0DF0               	rlf	___lwdiv@divisor,f
  2653     0177  0DF1               	rlf	___lwdiv@divisor+1,f
  2654     0178  3EFF               	addlw	-1
  2655     0179  1D03               	skipz
  2656     017A  2975               	goto	u1215
  2657     017B                     l1505:
  2658     017B  3001               	movlw	1
  2659     017C  00F4               	movwf	??___lwdiv
  2660     017D  0874               	movf	??___lwdiv,w
  2661     017E  07F7               	addwf	___lwdiv@counter,f
  2662     017F                     l1507:
  2663     017F  1FF1               	btfss	___lwdiv@divisor+1,7
  2664     0180  2982               	goto	u1221
  2665     0181  2983               	goto	u1220
  2666     0182                     u1221:
  2667     0182  2974               	goto	l1503
  2668     0183                     u1220:
  2669     0183                     l1509:
  2670     0183  3001               	movlw	1
  2671     0184                     u1235:
  2672     0184  1003               	clrc
  2673     0185  0DF5               	rlf	___lwdiv@quotient,f
  2674     0186  0DF6               	rlf	___lwdiv@quotient+1,f
  2675     0187  3EFF               	addlw	-1
  2676     0188  1D03               	skipz
  2677     0189  2984               	goto	u1235
  2678     018A  0871               	movf	___lwdiv@divisor+1,w
  2679     018B  0273               	subwf	___lwdiv@dividend+1,w
  2680     018C  1D03               	skipz
  2681     018D  2990               	goto	u1245
  2682     018E  0870               	movf	___lwdiv@divisor,w
  2683     018F  0272               	subwf	___lwdiv@dividend,w
  2684     0190                     u1245:
  2685     0190  1C03               	skipc
  2686     0191  2993               	goto	u1241
  2687     0192  2994               	goto	u1240
  2688     0193                     u1241:
  2689     0193  299B               	goto	l1515
  2690     0194                     u1240:
  2691     0194                     l1511:
  2692     0194  0870               	movf	___lwdiv@divisor,w
  2693     0195  02F2               	subwf	___lwdiv@dividend,f
  2694     0196  0871               	movf	___lwdiv@divisor+1,w
  2695     0197  1C03               	skipc
  2696     0198  03F3               	decf	___lwdiv@dividend+1,f
  2697     0199  02F3               	subwf	___lwdiv@dividend+1,f
  2698     019A                     l1513:
  2699     019A  1475               	bsf	___lwdiv@quotient,0
  2700     019B                     l1515:
  2701     019B  3001               	movlw	1
  2702     019C                     u1255:
  2703     019C  1003               	clrc
  2704     019D  0CF1               	rrf	___lwdiv@divisor+1,f
  2705     019E  0CF0               	rrf	___lwdiv@divisor,f
  2706     019F  3EFF               	addlw	-1
  2707     01A0  1D03               	skipz
  2708     01A1  299C               	goto	u1255
  2709     01A2                     l1517:
  2710     01A2  3001               	movlw	1
  2711     01A3  02F7               	subwf	___lwdiv@counter,f
  2712     01A4  1D03               	btfss	3,2
  2713     01A5  29A7               	goto	u1261
  2714     01A6  29A8               	goto	u1260
  2715     01A7                     u1261:
  2716     01A7  2983               	goto	l1509
  2717     01A8                     u1260:
  2718     01A8                     l1519:
  2719     01A8  0876               	movf	___lwdiv@quotient+1,w
  2720     01A9  00F1               	movwf	?___lwdiv+1
  2721     01AA  0875               	movf	___lwdiv@quotient,w
  2722     01AB  00F0               	movwf	?___lwdiv
  2723     01AC                     l633:
  2724     01AC  0008               	return
  2725     01AD                     __end_of___lwdiv:
  2726                           
  2727                           	psect	text12
  2728     0F42                     __ptext12:	
  2729 ;; *************** function _Uart_Send_String *****************
  2730 ;; Defined at:
  2731 ;;		line 27 in file "uart.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  info            1    wreg     PTR unsigned char 
  2734 ;;		 -> buffer_UART(30), 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  info            1    2[COMMON] PTR unsigned char 
  2737 ;;		 -> buffer_UART(30), 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         0       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0
  2749 ;;      Temps:          1       0       0       0       0
  2750 ;;      Totals:         2       0       0       0       0
  2751 ;;Total ram usage:        2 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 1
  2754 ;; This function calls:
  2755 ;;		_Uart_Send_Char
  2756 ;; This function is called by:
  2757 ;;		_TX_RX
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761     0F42                     _Uart_Send_String:	
  2762                           ;psect for function _Uart_Send_String
  2763                           
  2764                           
  2765                           ;incstack = 0
  2766                           ; Regs used in _Uart_Send_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2767                           ;Uart_Send_String@info stored from wreg
  2768     0F42  00F2               	movwf	Uart_Send_String@info
  2769     0F43                     l1641:
  2770                           
  2771                           ;uart.c: 27: void Uart_Send_String(char *info);uart.c: 28: {;uart.c: 29:     while(*info
      +                          )
  2772     0F43  2F50               	goto	l1647
  2773     0F44                     l1643:
  2774                           
  2775                           ;uart.c: 30:     {;uart.c: 31:         Uart_Send_Char(*info++);
  2776     0F44  0872               	movf	Uart_Send_String@info,w
  2777     0F45  0084               	movwf	4
  2778     0F46  0800               	movf	0,w
  2779     0F47  120A  158A  26F8  120A  158A  	fcall	_Uart_Send_Char
  2780     0F4C                     l1645:
  2781     0F4C  3001               	movlw	1
  2782     0F4D  00F1               	movwf	??_Uart_Send_String
  2783     0F4E  0871               	movf	??_Uart_Send_String,w
  2784     0F4F  07F2               	addwf	Uart_Send_String@info,f
  2785     0F50                     l1647:
  2786                           
  2787                           ;uart.c: 29:     while(*info)
  2788     0F50  0872               	movf	Uart_Send_String@info,w
  2789     0F51  0084               	movwf	4
  2790     0F52  1383               	bcf	3,7	;select IRP bank0
  2791     0F53  0800               	movf	0,w
  2792     0F54  1D03               	btfss	3,2
  2793     0F55  2F57               	goto	u1491
  2794     0F56  2F58               	goto	u1490
  2795     0F57                     u1491:
  2796     0F57  2F44               	goto	l1643
  2797     0F58                     u1490:
  2798     0F58                     l169:
  2799     0F58  0008               	return
  2800     0F59                     __end_of_Uart_Send_String:
  2801                           
  2802                           	psect	text13
  2803     0EF8                     __ptext13:	
  2804 ;; *************** function _Uart_Send_Char *****************
  2805 ;; Defined at:
  2806 ;;		line 21 in file "uart.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  txData          1    wreg     unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  txData          1    0[COMMON] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         1       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0
  2823 ;;      Totals:         1       0       0       0       0
  2824 ;;Total ram usage:        1 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_Uart_Send_String
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833     0EF8                     _Uart_Send_Char:	
  2834                           ;psect for function _Uart_Send_Char
  2835                           
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _Uart_Send_Char: [wreg]
  2839                           ;Uart_Send_Char@txData stored from wreg
  2840     0EF8  00F0               	movwf	Uart_Send_Char@txData
  2841     0EF9                     l1419:
  2842     0EF9                     l160:	
  2843                           ;uart.c: 21: void Uart_Send_Char(char txData);uart.c: 22: {;uart.c: 23:     while(TXSTAb
      +                          its.TRMT == 0);
  2844                           
  2845     0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  2846     0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  2847     0EFB  1C98               	btfss	24,1	;volatile
  2848     0EFC  2EFE               	goto	u1041
  2849     0EFD  2EFF               	goto	u1040
  2850     0EFE                     u1041:
  2851     0EFE  2EF9               	goto	l160
  2852     0EFF                     u1040:
  2853     0EFF                     l1421:
  2854                           
  2855                           ;uart.c: 24:     TXREG = txData;
  2856     0EFF  0870               	movf	Uart_Send_Char@txData,w
  2857     0F00  1283               	bcf	3,5	;RP0=0, select bank0
  2858     0F01  1303               	bcf	3,6	;RP1=0, select bank0
  2859     0F02  0099               	movwf	25	;volatile
  2860     0F03                     l163:
  2861     0F03  0008               	return
  2862     0F04                     __end_of_Uart_Send_Char:
  2863                           
  2864                           	psect	text14
  2865     0F1E                     __ptext14:	
  2866 ;; *************** function _Uart_Read *****************
  2867 ;; Defined at:
  2868 ;;		line 35 in file "uart.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      unsigned char 
  2875 ;; Registers used:
  2876 ;;		wreg
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0
  2885 ;;      Totals:         0       0       0       0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_TX_RX
  2892 ;;		_Uart_Read_String
  2893 ;;		_Uart_Read_StringUntil
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897     0F1E                     _Uart_Read:	
  2898                           ;psect for function _Uart_Read
  2899                           
  2900     0F1E                     l1653:	
  2901                           ;incstack = 0
  2902                           ; Regs used in _Uart_Read: [wreg]
  2903                           
  2904     0F1E                     l172:	
  2905                           ;uart.c: 37:     while(PIR1bits.RCIF == 0);
  2906                           
  2907     0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  2908     0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  2909     0F20  1E8C               	btfss	12,5	;volatile
  2910     0F21  2F23               	goto	u1501
  2911     0F22  2F24               	goto	u1500
  2912     0F23                     u1501:
  2913     0F23  2F1E               	goto	l172
  2914     0F24                     u1500:
  2915     0F24                     l174:
  2916                           
  2917                           ;uart.c: 38:     if(RCSTAbits.OERR == 1)
  2918     0F24  1C98               	btfss	24,1	;volatile
  2919     0F25  2F27               	goto	u1511
  2920     0F26  2F28               	goto	u1510
  2921     0F27                     u1511:
  2922     0F27  2F2A               	goto	l175
  2923     0F28                     u1510:
  2924     0F28                     l1655:
  2925                           
  2926                           ;uart.c: 39:     {;uart.c: 40:         RCSTAbits.CREN = 0;
  2927     0F28  1218               	bcf	24,4	;volatile
  2928                           
  2929                           ;uart.c: 41:         RCSTAbits.CREN = 1;
  2930     0F29  1618               	bsf	24,4	;volatile
  2931     0F2A                     l175:	
  2932                           ;uart.c: 42:     }
  2933                           
  2934                           
  2935                           ;uart.c: 43:     PIR1bits.RCIF = 0;
  2936     0F2A  128C               	bcf	12,5	;volatile
  2937     0F2B                     l1657:
  2938                           
  2939                           ;uart.c: 44:     return RCREG;
  2940     0F2B  081A               	movf	26,w	;volatile
  2941     0F2C                     l176:
  2942     0F2C  0008               	return
  2943     0F2D                     __end_of_Uart_Read:
  2944                           
  2945                           	psect	text15
  2946     0F11                     __ptext15:	
  2947 ;; *************** function _Uart_Available *****************
  2948 ;; Defined at:
  2949 ;;		line 16 in file "uart.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2    0[COMMON] short 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         2       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0
  2965 ;;      Temps:          3       0       0       0       0
  2966 ;;      Totals:         5       0       0       0       0
  2967 ;;Total ram usage:        5 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_TX_RX
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976     0F11                     _Uart_Available:	
  2977                           ;psect for function _Uart_Available
  2978                           
  2979     0F11                     l1649:	
  2980                           ;incstack = 0
  2981                           ; Regs used in _Uart_Available: [wreg+status,2+status,0]
  2982                           
  2983                           
  2984                           ;uart.c: 18:     return PIR1bits.RCIF ? 1 : 0;
  2985     0F11  1283               	bcf	3,5	;RP0=0, select bank0
  2986     0F12  1303               	bcf	3,6	;RP1=0, select bank0
  2987     0F13  0E0C               	swapf	12,w	;volatile
  2988     0F14  00F2               	movwf	??_Uart_Available
  2989     0F15  0C72               	rrf	??_Uart_Available,w
  2990     0F16  3901               	andlw	1
  2991     0F17  00F3               	movwf	??_Uart_Available+1
  2992     0F18  01F4               	clrf	??_Uart_Available+2
  2993     0F19  0873               	movf	??_Uart_Available+1,w
  2994     0F1A  00F0               	movwf	?_Uart_Available
  2995     0F1B  0874               	movf	??_Uart_Available+2,w
  2996     0F1C  00F1               	movwf	?_Uart_Available+1
  2997     0F1D                     l157:
  2998     0F1D  0008               	return
  2999     0F1E                     __end_of_Uart_Available:
  3000                           
  3001                           	psect	text16
  3002     023E                     __ptext16:	
  3003 ;; *************** function _Lcd_Init *****************
  3004 ;; Defined at:
  3005 ;;		line 79 in file "LCD.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0
  3021 ;;      Temps:          2       0       0       0       0
  3022 ;;      Totals:         2       0       0       0       0
  3023 ;;Total ram usage:        2 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 2
  3026 ;; This function calls:
  3027 ;;		_Lcd_Cmd
  3028 ;;		_Lcd_Port
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034     023E                     _Lcd_Init:	
  3035                           ;psect for function _Lcd_Init
  3036                           
  3037     023E                     l1795:	
  3038                           ;incstack = 0
  3039                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3040                           
  3041                           
  3042                           ;LCD.c: 80:     Lcd_Port(0x00);
  3043     023E  3000               	movlw	0
  3044     023F  120A  118A  20E9  120A  118A  	fcall	_Lcd_Port
  3045     0244                     l1797:
  3046                           
  3047                           ;LCD.c: 81:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3048     0244  301A               	movlw	26
  3049     0245  00F5               	movwf	??_Lcd_Init+1
  3050     0246  30F8               	movlw	248
  3051     0247  00F4               	movwf	??_Lcd_Init
  3052     0248                     u1937:
  3053     0248  0BF4               	decfsz	??_Lcd_Init,f
  3054     0249  2A48               	goto	u1937
  3055     024A  0BF5               	decfsz	??_Lcd_Init+1,f
  3056     024B  2A48               	goto	u1937
  3057     024C  0000               	nop
  3058     024D                     l1799:
  3059                           
  3060                           ;LCD.c: 82:     Lcd_Cmd(0x030);
  3061     024D  3030               	movlw	48
  3062     024E  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3063                           
  3064                           ;LCD.c: 83:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3065     0253  3007               	movlw	7
  3066     0254  00F5               	movwf	??_Lcd_Init+1
  3067     0255  307D               	movlw	125
  3068     0256  00F4               	movwf	??_Lcd_Init
  3069     0257                     u1947:
  3070     0257  0BF4               	decfsz	??_Lcd_Init,f
  3071     0258  2A57               	goto	u1947
  3072     0259  0BF5               	decfsz	??_Lcd_Init+1,f
  3073     025A  2A57               	goto	u1947
  3074     025B                     l1801:
  3075                           
  3076                           ;LCD.c: 84:     Lcd_Cmd(0x030);
  3077     025B  3030               	movlw	48
  3078     025C  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3079     0261                     l1803:
  3080                           
  3081                           ;LCD.c: 85:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  3082     0261  3042               	movlw	66
  3083     0262  00F4               	movwf	??_Lcd_Init
  3084     0263                     u1957:
  3085     0263  0BF4               	decfsz	??_Lcd_Init,f
  3086     0264  2A63               	goto	u1957
  3087     0265  0000               	nop
  3088                           
  3089                           ;LCD.c: 86:     Lcd_Cmd(0x030);
  3090     0266  3030               	movlw	48
  3091     0267  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3092                           
  3093                           ;LCD.c: 87:     Lcd_Cmd(0x38);
  3094     026C  3038               	movlw	56
  3095     026D  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3096                           
  3097                           ;LCD.c: 88:     Lcd_Cmd(0x08);
  3098     0272  3008               	movlw	8
  3099     0273  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3100                           
  3101                           ;LCD.c: 89:     Lcd_Cmd(0x01);
  3102     0278  3001               	movlw	1
  3103     0279  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3104                           
  3105                           ;LCD.c: 90:     Lcd_Cmd(0x06);
  3106     027E  3006               	movlw	6
  3107     027F  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3108                           
  3109                           ;LCD.c: 91:     Lcd_Cmd(0x0C);
  3110     0284  300C               	movlw	12
  3111     0285  120A  158A  2759  120A  118A  	fcall	_Lcd_Cmd
  3112     028A                     l1805:
  3113                           
  3114                           ;LCD.c: 92:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  3115     028A  3021               	movlw	33
  3116     028B  00F4               	movwf	??_Lcd_Init
  3117     028C                     u1967:
  3118     028C  0BF4               	decfsz	??_Lcd_Init,f
  3119     028D  2A8C               	goto	u1967
  3120     028E                     l235:
  3121     028E  0008               	return
  3122     028F                     __end_of_Lcd_Init:
  3123                           
  3124                           	psect	text17
  3125     0F04                     __ptext17:	
  3126 ;; *************** function _Lcd_Clear *****************
  3127 ;; Defined at:
  3128 ;;		line 63 in file "LCD.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0, pclath, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used: 1
  3148 ;; Hardware stack levels required when called: 2
  3149 ;; This function calls:
  3150 ;;		_Lcd_Cmd
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156     0F04                     _Lcd_Clear:	
  3157                           ;psect for function _Lcd_Clear
  3158                           
  3159     0F04                     l1807:	
  3160                           ;incstack = 0
  3161                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3162                           
  3163                           
  3164                           ;LCD.c: 64:     Lcd_Cmd(0);
  3165     0F04  3000               	movlw	0
  3166     0F05  120A  158A  2759  120A  158A  	fcall	_Lcd_Cmd
  3167                           
  3168                           ;LCD.c: 65:     Lcd_Cmd(1);
  3169     0F0A  3001               	movlw	1
  3170     0F0B  120A  158A  2759  120A  158A  	fcall	_Lcd_Cmd
  3171     0F10                     l226:
  3172     0F10  0008               	return
  3173     0F11                     __end_of_Lcd_Clear:
  3174                           
  3175                           	psect	text18
  3176     0F59                     __ptext18:	
  3177 ;; *************** function _Lcd_Cmd *****************
  3178 ;; Defined at:
  3179 ;;		line 55 in file "LCD.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  a               1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  a               1    3[COMMON] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       0       0       0       0
  3194 ;;      Locals:         1       0       0       0       0
  3195 ;;      Temps:          2       0       0       0       0
  3196 ;;      Totals:         3       0       0       0       0
  3197 ;;Total ram usage:        3 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 1
  3200 ;; This function calls:
  3201 ;;		_Lcd_Port
  3202 ;; This function is called by:
  3203 ;;		_Lcd_Clear
  3204 ;;		_Lcd_Set_Cursor
  3205 ;;		_Lcd_Init
  3206 ;;		_Lcd_Shift_Right
  3207 ;;		_Lcd_Shift_Left
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211     0F59                     _Lcd_Cmd:	
  3212                           ;psect for function _Lcd_Cmd
  3213                           
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3217                           ;Lcd_Cmd@a stored from wreg
  3218     0F59  00F3               	movwf	Lcd_Cmd@a
  3219     0F5A                     l1423:
  3220                           
  3221                           ;LCD.c: 56:     PORTDbits.RD6 = 0;
  3222     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3223     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3224     0F5C  1308               	bcf	8,6	;volatile
  3225     0F5D                     l1425:
  3226                           
  3227                           ;LCD.c: 57:     Lcd_Port(a);
  3228     0F5D  0873               	movf	Lcd_Cmd@a,w
  3229     0F5E  120A  118A  20E9  120A  158A  	fcall	_Lcd_Port
  3230     0F63                     l1427:
  3231                           
  3232                           ;LCD.c: 58:     PORTDbits.RD7 = 1;
  3233     0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3234     0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3235     0F65  1788               	bsf	8,7	;volatile
  3236     0F66                     l1429:
  3237                           
  3238                           ;LCD.c: 59:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3239     0F66  3006               	movlw	6
  3240     0F67  00F2               	movwf	??_Lcd_Cmd+1
  3241     0F68  3030               	movlw	48
  3242     0F69  00F1               	movwf	??_Lcd_Cmd
  3243     0F6A                     u1977:
  3244     0F6A  0BF1               	decfsz	??_Lcd_Cmd,f
  3245     0F6B  2F6A               	goto	u1977
  3246     0F6C  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3247     0F6D  2F6A               	goto	u1977
  3248     0F6E  0000               	nop
  3249     0F6F                     l1431:
  3250                           
  3251                           ;LCD.c: 60:     PORTDbits.RD7 = 0;
  3252     0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3253     0F70  1303               	bcf	3,6	;RP1=0, select bank0
  3254     0F71  1388               	bcf	8,7	;volatile
  3255     0F72                     l223:
  3256     0F72  0008               	return
  3257     0F73                     __end_of_Lcd_Cmd:
  3258                           
  3259                           	psect	text19
  3260     00E9                     __ptext19:	
  3261 ;; *************** function _Lcd_Port *****************
  3262 ;; Defined at:
  3263 ;;		line 13 in file "LCD.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  a               1    wreg     unsigned char 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  a               1    0[COMMON] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3277 ;;      Params:         0       0       0       0       0
  3278 ;;      Locals:         1       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0
  3280 ;;      Totals:         1       0       0       0       0
  3281 ;;Total ram usage:        1 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_Lcd_Cmd
  3287 ;;		_Lcd_Init
  3288 ;;		_Lcd_Write_Char
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292     00E9                     _Lcd_Port:	
  3293                           ;psect for function _Lcd_Port
  3294                           
  3295                           
  3296                           ;incstack = 0
  3297                           ; Regs used in _Lcd_Port: [wreg]
  3298                           ;Lcd_Port@a stored from wreg
  3299     00E9  00F0               	movwf	Lcd_Port@a
  3300     00EA                     l1401:
  3301                           
  3302                           ;LCD.c: 14:     if (a & 1)
  3303     00EA  1C70               	btfss	Lcd_Port@a,0
  3304     00EB  28ED               	goto	u961
  3305     00EC  28EE               	goto	u960
  3306     00ED                     u961:
  3307     00ED  28F2               	goto	l204
  3308     00EE                     u960:
  3309     00EE                     l1403:
  3310                           
  3311                           ;LCD.c: 15:         PORTBbits.RB0 = 1;
  3312     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  3313     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  3314     00F0  1406               	bsf	6,0	;volatile
  3315     00F1  28F5               	goto	l205
  3316     00F2                     l204:	
  3317                           ;LCD.c: 16:     else
  3318                           
  3319                           
  3320                           ;LCD.c: 17:         PORTBbits.RB0 = 0;
  3321     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  3322     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  3323     00F4  1006               	bcf	6,0	;volatile
  3324     00F5                     l205:
  3325                           
  3326                           ;LCD.c: 19:     if (a & 2)
  3327     00F5  1CF0               	btfss	Lcd_Port@a,1
  3328     00F6  28F8               	goto	u971
  3329     00F7  28F9               	goto	u970
  3330     00F8                     u971:
  3331     00F8  28FB               	goto	l206
  3332     00F9                     u970:
  3333     00F9                     l1405:
  3334                           
  3335                           ;LCD.c: 20:         PORTBbits.RB1 = 1;
  3336     00F9  1486               	bsf	6,1	;volatile
  3337     00FA  28FC               	goto	l207
  3338     00FB                     l206:	
  3339                           ;LCD.c: 21:     else
  3340                           
  3341                           
  3342                           ;LCD.c: 22:         PORTBbits.RB1 = 0;
  3343     00FB  1086               	bcf	6,1	;volatile
  3344     00FC                     l207:
  3345                           
  3346                           ;LCD.c: 24:     if (a & 4)
  3347     00FC  1D70               	btfss	Lcd_Port@a,2
  3348     00FD  28FF               	goto	u981
  3349     00FE  2900               	goto	u980
  3350     00FF                     u981:
  3351     00FF  2902               	goto	l208
  3352     0100                     u980:
  3353     0100                     l1407:
  3354                           
  3355                           ;LCD.c: 25:         PORTBbits.RB2 = 1;
  3356     0100  1506               	bsf	6,2	;volatile
  3357     0101  2903               	goto	l209
  3358     0102                     l208:	
  3359                           ;LCD.c: 26:     else
  3360                           
  3361                           
  3362                           ;LCD.c: 27:         PORTBbits.RB2 = 0;
  3363     0102  1106               	bcf	6,2	;volatile
  3364     0103                     l209:
  3365                           
  3366                           ;LCD.c: 29:     if (a & 8)
  3367     0103  1DF0               	btfss	Lcd_Port@a,3
  3368     0104  2906               	goto	u991
  3369     0105  2907               	goto	u990
  3370     0106                     u991:
  3371     0106  2909               	goto	l210
  3372     0107                     u990:
  3373     0107                     l1409:
  3374                           
  3375                           ;LCD.c: 30:         PORTBbits.RB3 = 1;
  3376     0107  1586               	bsf	6,3	;volatile
  3377     0108  290A               	goto	l211
  3378     0109                     l210:	
  3379                           ;LCD.c: 31:     else
  3380                           
  3381                           
  3382                           ;LCD.c: 32:         PORTBbits.RB3 = 0;
  3383     0109  1186               	bcf	6,3	;volatile
  3384     010A                     l211:
  3385                           
  3386                           ;LCD.c: 34:     if (a & 16)
  3387     010A  1E70               	btfss	Lcd_Port@a,4
  3388     010B  290D               	goto	u1001
  3389     010C  290E               	goto	u1000
  3390     010D                     u1001:
  3391     010D  2910               	goto	l212
  3392     010E                     u1000:
  3393     010E                     l1411:
  3394                           
  3395                           ;LCD.c: 35:         PORTBbits.RB4 = 1;
  3396     010E  1606               	bsf	6,4	;volatile
  3397     010F  2911               	goto	l213
  3398     0110                     l212:	
  3399                           ;LCD.c: 36:     else
  3400                           
  3401                           
  3402                           ;LCD.c: 37:         PORTBbits.RB4 = 0;
  3403     0110  1206               	bcf	6,4	;volatile
  3404     0111                     l213:
  3405                           
  3406                           ;LCD.c: 39:     if (a & 32)
  3407     0111  1EF0               	btfss	Lcd_Port@a,5
  3408     0112  2914               	goto	u1011
  3409     0113  2915               	goto	u1010
  3410     0114                     u1011:
  3411     0114  2917               	goto	l214
  3412     0115                     u1010:
  3413     0115                     l1413:
  3414                           
  3415                           ;LCD.c: 40:         PORTBbits.RB5 = 1;
  3416     0115  1686               	bsf	6,5	;volatile
  3417     0116  2918               	goto	l215
  3418     0117                     l214:	
  3419                           ;LCD.c: 41:     else
  3420                           
  3421                           
  3422                           ;LCD.c: 42:         PORTBbits.RB5 = 0;
  3423     0117  1286               	bcf	6,5	;volatile
  3424     0118                     l215:
  3425                           
  3426                           ;LCD.c: 44:     if (a & 64)
  3427     0118  1F70               	btfss	Lcd_Port@a,6
  3428     0119  291B               	goto	u1021
  3429     011A  291C               	goto	u1020
  3430     011B                     u1021:
  3431     011B  291E               	goto	l216
  3432     011C                     u1020:
  3433     011C                     l1415:
  3434                           
  3435                           ;LCD.c: 45:         PORTBbits.RB6 = 1;
  3436     011C  1706               	bsf	6,6	;volatile
  3437     011D  291F               	goto	l217
  3438     011E                     l216:	
  3439                           ;LCD.c: 46:     else
  3440                           
  3441                           
  3442                           ;LCD.c: 47:         PORTBbits.RB6 = 0;
  3443     011E  1306               	bcf	6,6	;volatile
  3444     011F                     l217:
  3445                           
  3446                           ;LCD.c: 49:     if (a & 128)
  3447     011F  1FF0               	btfss	Lcd_Port@a,7
  3448     0120  2922               	goto	u1031
  3449     0121  2923               	goto	u1030
  3450     0122                     u1031:
  3451     0122  2925               	goto	l218
  3452     0123                     u1030:
  3453     0123                     l1417:
  3454                           
  3455                           ;LCD.c: 50:         PORTBbits.RB7 = 1;
  3456     0123  1786               	bsf	6,7	;volatile
  3457     0124  2926               	goto	l220
  3458     0125                     l218:	
  3459                           ;LCD.c: 51:     else
  3460                           
  3461                           
  3462                           ;LCD.c: 52:         PORTBbits.RB7 = 0;
  3463     0125  1386               	bcf	6,7	;volatile
  3464     0126                     l220:
  3465     0126  0008               	return
  3466     0127                     __end_of_Lcd_Port:
  3467                           
  3468                           	psect	text20
  3469     0069                     __ptext20:	
  3470 ;; *************** function _ADC_Init *****************
  3471 ;; Defined at:
  3472 ;;		line 3 in file "adc.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  p_ang           1    wreg     unsigned char 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  p_ang           1    0[COMMON] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3486 ;;      Params:         0       0       0       0       0
  3487 ;;      Locals:         1       0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0
  3489 ;;      Totals:         1       0       0       0       0
  3490 ;;Total ram usage:        1 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499     0069                     _ADC_Init:	
  3500                           ;psect for function _ADC_Init
  3501                           
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _ADC_Init: [wreg+status,2]
  3505                           ;ADC_Init@p_ang stored from wreg
  3506     0069  00F0               	movwf	ADC_Init@p_ang
  3507     006A                     l1261:
  3508                           
  3509                           ;adc.c: 3: void ADC_Init(unsigned char p_ang);adc.c: 4: {;adc.c: 5:     ADCON1 = 0x00;
  3510     006A  1683               	bsf	3,5	;RP0=1, select bank1
  3511     006B  1303               	bcf	3,6	;RP1=0, select bank1
  3512     006C  019F               	clrf	31	;volatile
  3513     006D                     l1263:
  3514                           
  3515                           ;adc.c: 6:     ADCON0 = p_ang;
  3516     006D  0870               	movf	ADC_Init@p_ang,w
  3517     006E  1283               	bcf	3,5	;RP0=0, select bank0
  3518     006F  1303               	bcf	3,6	;RP1=0, select bank0
  3519     0070  009F               	movwf	31	;volatile
  3520     0071                     l119:
  3521     0071  0008               	return
  3522     0072                     __end_of_ADC_Init:
  3523                           
  3524                           	psect	text21
  3525     0682                     __ptext21:	
  3526 ;; *************** function _ADC_CONV_V *****************
  3527 ;; Defined at:
  3528 ;;		line 133 in file "lab02.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0
  3544 ;;      Temps:          0       4       0       0       0
  3545 ;;      Totals:         0       4       0       0       0
  3546 ;;Total ram usage:        4 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 2
  3549 ;; This function calls:
  3550 ;;		_ADC_Read
  3551 ;;		___awdiv
  3552 ;;		___awmod
  3553 ;;		___wmul
  3554 ;;		_map
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     0682                     _ADC_CONV_V:	
  3561                           ;psect for function _ADC_CONV_V
  3562                           
  3563     0682                     l1809:	
  3564                           ;incstack = 0
  3565                           ; Regs used in _ADC_CONV_V: [wreg+status,2+status,0+pclath+cstack]
  3566                           
  3567                           
  3568                           ;lab02.c: 135:   valor_ch0 = ADC_Read(0);
  3569     0682  3000               	movlw	0
  3570     0683  120A  158A  27D9  120A  118A  	fcall	_ADC_Read
  3571     0688  0870               	movf	?_ADC_Read,w
  3572     0689  1283               	bcf	3,5	;RP0=0, select bank0
  3573     068A  1303               	bcf	3,6	;RP1=0, select bank0
  3574     068B  00E0               	movwf	_valor_ch0
  3575                           
  3576                           ;lab02.c: 136:   valor_ch1 = ADC_Read(1);
  3577     068C  3001               	movlw	1
  3578     068D  120A  158A  27D9  120A  118A  	fcall	_ADC_Read
  3579     0692  0870               	movf	?_ADC_Read,w
  3580     0693  1283               	bcf	3,5	;RP0=0, select bank0
  3581     0694  1303               	bcf	3,6	;RP1=0, select bank0
  3582     0695  00DF               	movwf	_valor_ch1
  3583                           
  3584                           ;lab02.c: 137:   voltaje1 = map(valor_ch0, 0, 255, 0, 100);
  3585     0696  0860               	movf	_valor_ch0,w
  3586     0697  00D2               	movwf	??_ADC_CONV_V
  3587     0698  01D3               	clrf	??_ADC_CONV_V+1
  3588     0699  01D4               	clrf	??_ADC_CONV_V+2
  3589     069A  01D5               	clrf	??_ADC_CONV_V+3
  3590     069B  0855               	movf	??_ADC_CONV_V+3,w
  3591     069C  00B1               	movwf	map@x+3
  3592     069D  0854               	movf	??_ADC_CONV_V+2,w
  3593     069E  00B0               	movwf	map@x+2
  3594     069F  0853               	movf	??_ADC_CONV_V+1,w
  3595     06A0  00AF               	movwf	map@x+1
  3596     06A1  0852               	movf	??_ADC_CONV_V,w
  3597     06A2  00AE               	movwf	map@x
  3598     06A3  3000               	movlw	0
  3599     06A4  00B5               	movwf	map@eMin+3
  3600     06A5  3000               	movlw	0
  3601     06A6  00B4               	movwf	map@eMin+2
  3602     06A7  3000               	movlw	0
  3603     06A8  00B3               	movwf	map@eMin+1
  3604     06A9  3000               	movlw	0
  3605     06AA  00B2               	movwf	map@eMin
  3606     06AB  3000               	movlw	0
  3607     06AC  00B9               	movwf	map@eMax+3
  3608     06AD  3000               	movlw	0
  3609     06AE  00B8               	movwf	map@eMax+2
  3610     06AF  3000               	movlw	0
  3611     06B0  00B7               	movwf	map@eMax+1
  3612     06B1  30FF               	movlw	255
  3613     06B2  00B6               	movwf	map@eMax
  3614     06B3  3000               	movlw	0
  3615     06B4  00BD               	movwf	map@sMin+3
  3616     06B5  3000               	movlw	0
  3617     06B6  00BC               	movwf	map@sMin+2
  3618     06B7  3000               	movlw	0
  3619     06B8  00BB               	movwf	map@sMin+1
  3620     06B9  3000               	movlw	0
  3621     06BA  00BA               	movwf	map@sMin
  3622     06BB  3000               	movlw	0
  3623     06BC  00C1               	movwf	map@sMax+3
  3624     06BD  3000               	movlw	0
  3625     06BE  00C0               	movwf	map@sMax+2
  3626     06BF  3000               	movlw	0
  3627     06C0  00BF               	movwf	map@sMax+1
  3628     06C1  3064               	movlw	100
  3629     06C2  00BE               	movwf	map@sMax
  3630     06C3  120A  118A  2519  120A  118A  	fcall	_map
  3631     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3632     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3633     06CA  082E               	movf	?_map,w
  3634     06CB  00DE               	movwf	_voltaje1
  3635                           
  3636                           ;lab02.c: 138:   voltaje2 = map(valor_ch1, 0, 255, 0, 100);
  3637     06CC  085F               	movf	_valor_ch1,w
  3638     06CD  00D2               	movwf	??_ADC_CONV_V
  3639     06CE  01D3               	clrf	??_ADC_CONV_V+1
  3640     06CF  01D4               	clrf	??_ADC_CONV_V+2
  3641     06D0  01D5               	clrf	??_ADC_CONV_V+3
  3642     06D1  0855               	movf	??_ADC_CONV_V+3,w
  3643     06D2  00B1               	movwf	map@x+3
  3644     06D3  0854               	movf	??_ADC_CONV_V+2,w
  3645     06D4  00B0               	movwf	map@x+2
  3646     06D5  0853               	movf	??_ADC_CONV_V+1,w
  3647     06D6  00AF               	movwf	map@x+1
  3648     06D7  0852               	movf	??_ADC_CONV_V,w
  3649     06D8  00AE               	movwf	map@x
  3650     06D9  3000               	movlw	0
  3651     06DA  00B5               	movwf	map@eMin+3
  3652     06DB  3000               	movlw	0
  3653     06DC  00B4               	movwf	map@eMin+2
  3654     06DD  3000               	movlw	0
  3655     06DE  00B3               	movwf	map@eMin+1
  3656     06DF  3000               	movlw	0
  3657     06E0  00B2               	movwf	map@eMin
  3658     06E1  3000               	movlw	0
  3659     06E2  00B9               	movwf	map@eMax+3
  3660     06E3  3000               	movlw	0
  3661     06E4  00B8               	movwf	map@eMax+2
  3662     06E5  3000               	movlw	0
  3663     06E6  00B7               	movwf	map@eMax+1
  3664     06E7  30FF               	movlw	255
  3665     06E8  00B6               	movwf	map@eMax
  3666     06E9  3000               	movlw	0
  3667     06EA  00BD               	movwf	map@sMin+3
  3668     06EB  3000               	movlw	0
  3669     06EC  00BC               	movwf	map@sMin+2
  3670     06ED  3000               	movlw	0
  3671     06EE  00BB               	movwf	map@sMin+1
  3672     06EF  3000               	movlw	0
  3673     06F0  00BA               	movwf	map@sMin
  3674     06F1  3000               	movlw	0
  3675     06F2  00C1               	movwf	map@sMax+3
  3676     06F3  3000               	movlw	0
  3677     06F4  00C0               	movwf	map@sMax+2
  3678     06F5  3000               	movlw	0
  3679     06F6  00BF               	movwf	map@sMax+1
  3680     06F7  3064               	movlw	100
  3681     06F8  00BE               	movwf	map@sMax
  3682     06F9  120A  118A  2519  120A  118A  	fcall	_map
  3683     06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3684     06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3685     0700  082E               	movf	?_map,w
  3686     0701  00DD               	movwf	_voltaje2
  3687                           
  3688                           ;lab02.c: 141:   unidad_V1 = (voltaje1*5)/100;
  3689     0702  3064               	movlw	100
  3690     0703  00F6               	movwf	___awdiv@divisor
  3691     0704  3000               	movlw	0
  3692     0705  00F7               	movwf	___awdiv@divisor+1
  3693     0706  085E               	movf	_voltaje1,w
  3694     0707  00D2               	movwf	??_ADC_CONV_V
  3695     0708  01D3               	clrf	??_ADC_CONV_V+1
  3696     0709  0852               	movf	??_ADC_CONV_V,w
  3697     070A  00F0               	movwf	___wmul@multiplier
  3698     070B  0853               	movf	??_ADC_CONV_V+1,w
  3699     070C  00F1               	movwf	___wmul@multiplier+1
  3700     070D  3005               	movlw	5
  3701     070E  00F2               	movwf	___wmul@multiplicand
  3702     070F  3000               	movlw	0
  3703     0710  00F3               	movwf	___wmul@multiplicand+1
  3704     0711  120A  158A  27B4  120A  118A  	fcall	___wmul
  3705     0716  0871               	movf	?___wmul+1,w
  3706     0717  00F9               	movwf	___awdiv@dividend+1
  3707     0718  0870               	movf	?___wmul,w
  3708     0719  00F8               	movwf	___awdiv@dividend
  3709     071A  120A  118A  23AA  120A  118A  	fcall	___awdiv
  3710     071F  0876               	movf	?___awdiv,w
  3711     0720  1283               	bcf	3,5	;RP0=0, select bank0
  3712     0721  1303               	bcf	3,6	;RP1=0, select bank0
  3713     0722  00DC               	movwf	_unidad_V1
  3714                           
  3715                           ;lab02.c: 142:   decima_V1 = ((voltaje1*5)/10)%10;
  3716     0723  300A               	movlw	10
  3717     0724  00A4               	movwf	___awmod@divisor
  3718     0725  3000               	movlw	0
  3719     0726  00A5               	movwf	___awmod@divisor+1
  3720     0727  300A               	movlw	10
  3721     0728  00F6               	movwf	___awdiv@divisor
  3722     0729  3000               	movlw	0
  3723     072A  00F7               	movwf	___awdiv@divisor+1
  3724     072B  085E               	movf	_voltaje1,w
  3725     072C  00D2               	movwf	??_ADC_CONV_V
  3726     072D  01D3               	clrf	??_ADC_CONV_V+1
  3727     072E  0852               	movf	??_ADC_CONV_V,w
  3728     072F  00F0               	movwf	___wmul@multiplier
  3729     0730  0853               	movf	??_ADC_CONV_V+1,w
  3730     0731  00F1               	movwf	___wmul@multiplier+1
  3731     0732  3005               	movlw	5
  3732     0733  00F2               	movwf	___wmul@multiplicand
  3733     0734  3000               	movlw	0
  3734     0735  00F3               	movwf	___wmul@multiplicand+1
  3735     0736  120A  158A  27B4  120A  118A  	fcall	___wmul
  3736     073B  0871               	movf	?___wmul+1,w
  3737     073C  00F9               	movwf	___awdiv@dividend+1
  3738     073D  0870               	movf	?___wmul,w
  3739     073E  00F8               	movwf	___awdiv@dividend
  3740     073F  120A  118A  23AA  120A  118A  	fcall	___awdiv
  3741     0744  0877               	movf	?___awdiv+1,w
  3742     0745  1283               	bcf	3,5	;RP0=0, select bank0
  3743     0746  1303               	bcf	3,6	;RP1=0, select bank0
  3744     0747  00A7               	movwf	___awmod@dividend+1
  3745     0748  0876               	movf	?___awdiv,w
  3746     0749  00A6               	movwf	___awmod@dividend
  3747     074A  120A  118A  22E9  120A  118A  	fcall	___awmod
  3748     074F  1283               	bcf	3,5	;RP0=0, select bank0
  3749     0750  1303               	bcf	3,6	;RP1=0, select bank0
  3750     0751  0824               	movf	?___awmod,w
  3751     0752  00DB               	movwf	_decima_V1
  3752                           
  3753                           ;lab02.c: 143:   centesima_V1 = (voltaje1*5)%10;
  3754     0753  300A               	movlw	10
  3755     0754  00A4               	movwf	___awmod@divisor
  3756     0755  3000               	movlw	0
  3757     0756  00A5               	movwf	___awmod@divisor+1
  3758     0757  085E               	movf	_voltaje1,w
  3759     0758  00D2               	movwf	??_ADC_CONV_V
  3760     0759  01D3               	clrf	??_ADC_CONV_V+1
  3761     075A  0852               	movf	??_ADC_CONV_V,w
  3762     075B  00F0               	movwf	___wmul@multiplier
  3763     075C  0853               	movf	??_ADC_CONV_V+1,w
  3764     075D  00F1               	movwf	___wmul@multiplier+1
  3765     075E  3005               	movlw	5
  3766     075F  00F2               	movwf	___wmul@multiplicand
  3767     0760  3000               	movlw	0
  3768     0761  00F3               	movwf	___wmul@multiplicand+1
  3769     0762  120A  158A  27B4  120A  118A  	fcall	___wmul
  3770     0767  0871               	movf	?___wmul+1,w
  3771     0768  1283               	bcf	3,5	;RP0=0, select bank0
  3772     0769  1303               	bcf	3,6	;RP1=0, select bank0
  3773     076A  00A7               	movwf	___awmod@dividend+1
  3774     076B  0870               	movf	?___wmul,w
  3775     076C  00A6               	movwf	___awmod@dividend
  3776     076D  120A  118A  22E9  120A  118A  	fcall	___awmod
  3777     0772  1283               	bcf	3,5	;RP0=0, select bank0
  3778     0773  1303               	bcf	3,6	;RP1=0, select bank0
  3779     0774  0824               	movf	?___awmod,w
  3780     0775  00DA               	movwf	_centesima_V1
  3781                           
  3782                           ;lab02.c: 146:   unidad_V2 = (voltaje2*5)/100;
  3783     0776  3064               	movlw	100
  3784     0777  00F6               	movwf	___awdiv@divisor
  3785     0778  3000               	movlw	0
  3786     0779  00F7               	movwf	___awdiv@divisor+1
  3787     077A  085D               	movf	_voltaje2,w
  3788     077B  00D2               	movwf	??_ADC_CONV_V
  3789     077C  01D3               	clrf	??_ADC_CONV_V+1
  3790     077D  0852               	movf	??_ADC_CONV_V,w
  3791     077E  00F0               	movwf	___wmul@multiplier
  3792     077F  0853               	movf	??_ADC_CONV_V+1,w
  3793     0780  00F1               	movwf	___wmul@multiplier+1
  3794     0781  3005               	movlw	5
  3795     0782  00F2               	movwf	___wmul@multiplicand
  3796     0783  3000               	movlw	0
  3797     0784  00F3               	movwf	___wmul@multiplicand+1
  3798     0785  120A  158A  27B4  120A  118A  	fcall	___wmul
  3799     078A  0871               	movf	?___wmul+1,w
  3800     078B  00F9               	movwf	___awdiv@dividend+1
  3801     078C  0870               	movf	?___wmul,w
  3802     078D  00F8               	movwf	___awdiv@dividend
  3803     078E  120A  118A  23AA  120A  118A  	fcall	___awdiv
  3804     0793  0876               	movf	?___awdiv,w
  3805     0794  1283               	bcf	3,5	;RP0=0, select bank0
  3806     0795  1303               	bcf	3,6	;RP1=0, select bank0
  3807     0796  00D9               	movwf	_unidad_V2
  3808                           
  3809                           ;lab02.c: 147:   decima_V2 = ((voltaje2*5)/10)%10;
  3810     0797  300A               	movlw	10
  3811     0798  00A4               	movwf	___awmod@divisor
  3812     0799  3000               	movlw	0
  3813     079A  00A5               	movwf	___awmod@divisor+1
  3814     079B  300A               	movlw	10
  3815     079C  00F6               	movwf	___awdiv@divisor
  3816     079D  3000               	movlw	0
  3817     079E  00F7               	movwf	___awdiv@divisor+1
  3818     079F  085D               	movf	_voltaje2,w
  3819     07A0  00D2               	movwf	??_ADC_CONV_V
  3820     07A1  01D3               	clrf	??_ADC_CONV_V+1
  3821     07A2  0852               	movf	??_ADC_CONV_V,w
  3822     07A3  00F0               	movwf	___wmul@multiplier
  3823     07A4  0853               	movf	??_ADC_CONV_V+1,w
  3824     07A5  00F1               	movwf	___wmul@multiplier+1
  3825     07A6  3005               	movlw	5
  3826     07A7  00F2               	movwf	___wmul@multiplicand
  3827     07A8  3000               	movlw	0
  3828     07A9  00F3               	movwf	___wmul@multiplicand+1
  3829     07AA  120A  158A  27B4  120A  118A  	fcall	___wmul
  3830     07AF  0871               	movf	?___wmul+1,w
  3831     07B0  00F9               	movwf	___awdiv@dividend+1
  3832     07B1  0870               	movf	?___wmul,w
  3833     07B2  00F8               	movwf	___awdiv@dividend
  3834     07B3  120A  118A  23AA  120A  118A  	fcall	___awdiv
  3835     07B8  0877               	movf	?___awdiv+1,w
  3836     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3837     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3838     07BB  00A7               	movwf	___awmod@dividend+1
  3839     07BC  0876               	movf	?___awdiv,w
  3840     07BD  00A6               	movwf	___awmod@dividend
  3841     07BE  120A  118A  22E9  120A  118A  	fcall	___awmod
  3842     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3843     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3844     07C5  0824               	movf	?___awmod,w
  3845     07C6  00D8               	movwf	_decima_V2
  3846                           
  3847                           ;lab02.c: 148:   centesima_V2 = (voltaje2*5)%10;
  3848     07C7  300A               	movlw	10
  3849     07C8  00A4               	movwf	___awmod@divisor
  3850     07C9  3000               	movlw	0
  3851     07CA  00A5               	movwf	___awmod@divisor+1
  3852     07CB  085D               	movf	_voltaje2,w
  3853     07CC  00D2               	movwf	??_ADC_CONV_V
  3854     07CD  01D3               	clrf	??_ADC_CONV_V+1
  3855     07CE  0852               	movf	??_ADC_CONV_V,w
  3856     07CF  00F0               	movwf	___wmul@multiplier
  3857     07D0  0853               	movf	??_ADC_CONV_V+1,w
  3858     07D1  00F1               	movwf	___wmul@multiplier+1
  3859     07D2  3005               	movlw	5
  3860     07D3  00F2               	movwf	___wmul@multiplicand
  3861     07D4  3000               	movlw	0
  3862     07D5  00F3               	movwf	___wmul@multiplicand+1
  3863     07D6  120A  158A  27B4  120A  118A  	fcall	___wmul
  3864     07DB  0871               	movf	?___wmul+1,w
  3865     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  3866     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  3867     07DE  00A7               	movwf	___awmod@dividend+1
  3868     07DF  0870               	movf	?___wmul,w
  3869     07E0  00A6               	movwf	___awmod@dividend
  3870     07E1  120A  118A  22E9  120A  118A  	fcall	___awmod
  3871     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  3872     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  3873     07E8  0824               	movf	?___awmod,w
  3874     07E9  00D7               	movwf	_centesima_V2
  3875     07EA                     l99:
  3876     07EA  0008               	return
  3877     07EB                     __end_of_ADC_CONV_V:
  3878                           
  3879                           	psect	text22
  3880     0519                     __ptext22:	
  3881 ;; *************** function _map *****************
  3882 ;; Defined at:
  3883 ;;		line 3 in file "./map_function.h"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  x               4   14[BANK0 ] long 
  3886 ;;  eMin            4   18[BANK0 ] long 
  3887 ;;  eMax            4   22[BANK0 ] long 
  3888 ;;  sMin            4   26[BANK0 ] long 
  3889 ;;  sMax            4   30[BANK0 ] long 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  4   14[BANK0 ] long 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0      20       0       0       0
  3902 ;;      Locals:         0       0       0       0       0
  3903 ;;      Temps:          0      16       0       0       0
  3904 ;;      Totals:         0      36       0       0       0
  3905 ;;Total ram usage:       36 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 1
  3908 ;; This function calls:
  3909 ;;		___aldiv
  3910 ;;		___lmul
  3911 ;; This function is called by:
  3912 ;;		_ADC_CONV_V
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916     0519                     _map:	
  3917                           ;psect for function _map
  3918                           
  3919     0519                     l1545:	
  3920                           ;incstack = 0
  3921                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3922                           
  3923                           
  3924                           ;./map_function.h: 3: long map(long x, long eMin, long eMax, long sMin, long sMax);./map
      +                          _function.h: 4: {;./map_function.h: 5:   return(x -eMin)*(sMax-sMin)/(eMax-eMin)+sMin;
  3925     0519  1283               	bcf	3,5	;RP0=0, select bank0
  3926     051A  1303               	bcf	3,6	;RP1=0, select bank0
  3927     051B  0836               	movf	map@eMax,w
  3928     051C  00C2               	movwf	??_map
  3929     051D  0837               	movf	map@eMax+1,w
  3930     051E  00C3               	movwf	??_map+1
  3931     051F  0838               	movf	map@eMax+2,w
  3932     0520  00C4               	movwf	??_map+2
  3933     0521  0839               	movf	map@eMax+3,w
  3934     0522  00C5               	movwf	??_map+3
  3935     0523  0832               	movf	map@eMin,w
  3936     0524  02C2               	subwf	??_map,f
  3937     0525  0833               	movf	map@eMin+1,w
  3938     0526  1C03               	skipc
  3939     0527  0F33               	incfsz	map@eMin+1,w
  3940     0528  2D2A               	goto	u1331
  3941     0529  2D2B               	goto	u1332
  3942     052A                     u1331:
  3943     052A  02C3               	subwf	??_map+1,f
  3944     052B                     u1332:
  3945     052B  0834               	movf	map@eMin+2,w
  3946     052C  1C03               	skipc
  3947     052D  0F34               	incfsz	map@eMin+2,w
  3948     052E  2D30               	goto	u1333
  3949     052F  2D31               	goto	u1334
  3950     0530                     u1333:
  3951     0530  02C4               	subwf	??_map+2,f
  3952     0531                     u1334:
  3953     0531  0835               	movf	map@eMin+3,w
  3954     0532  1C03               	skipc
  3955     0533  0F35               	incfsz	map@eMin+3,w
  3956     0534  2D36               	goto	u1335
  3957     0535  2D37               	goto	u1336
  3958     0536                     u1335:
  3959     0536  02C5               	subwf	??_map+3,f
  3960     0537                     u1336:
  3961     0537  0845               	movf	??_map+3,w
  3962     0538  00A3               	movwf	___aldiv@divisor+3
  3963     0539  0844               	movf	??_map+2,w
  3964     053A  00A2               	movwf	___aldiv@divisor+2
  3965     053B  0843               	movf	??_map+1,w
  3966     053C  00A1               	movwf	___aldiv@divisor+1
  3967     053D  0842               	movf	??_map,w
  3968     053E  00A0               	movwf	___aldiv@divisor
  3969     053F  082E               	movf	map@x,w
  3970     0540  00C6               	movwf	??_map+4
  3971     0541  082F               	movf	map@x+1,w
  3972     0542  00C7               	movwf	??_map+5
  3973     0543  0830               	movf	map@x+2,w
  3974     0544  00C8               	movwf	??_map+6
  3975     0545  0831               	movf	map@x+3,w
  3976     0546  00C9               	movwf	??_map+7
  3977     0547  0832               	movf	map@eMin,w
  3978     0548  02C6               	subwf	??_map+4,f
  3979     0549  0833               	movf	map@eMin+1,w
  3980     054A  1C03               	skipc
  3981     054B  0F33               	incfsz	map@eMin+1,w
  3982     054C  2D4E               	goto	u1341
  3983     054D  2D4F               	goto	u1342
  3984     054E                     u1341:
  3985     054E  02C7               	subwf	??_map+5,f
  3986     054F                     u1342:
  3987     054F  0834               	movf	map@eMin+2,w
  3988     0550  1C03               	skipc
  3989     0551  0F34               	incfsz	map@eMin+2,w
  3990     0552  2D54               	goto	u1343
  3991     0553  2D55               	goto	u1344
  3992     0554                     u1343:
  3993     0554  02C8               	subwf	??_map+6,f
  3994     0555                     u1344:
  3995     0555  0835               	movf	map@eMin+3,w
  3996     0556  1C03               	skipc
  3997     0557  0F35               	incfsz	map@eMin+3,w
  3998     0558  2D5A               	goto	u1345
  3999     0559  2D5B               	goto	u1346
  4000     055A                     u1345:
  4001     055A  02C9               	subwf	??_map+7,f
  4002     055B                     u1346:
  4003     055B  0849               	movf	??_map+7,w
  4004     055C  00F3               	movwf	___lmul@multiplier+3
  4005     055D  0848               	movf	??_map+6,w
  4006     055E  00F2               	movwf	___lmul@multiplier+2
  4007     055F  0847               	movf	??_map+5,w
  4008     0560  00F1               	movwf	___lmul@multiplier+1
  4009     0561  0846               	movf	??_map+4,w
  4010     0562  00F0               	movwf	___lmul@multiplier
  4011     0563  083E               	movf	map@sMax,w
  4012     0564  00CA               	movwf	??_map+8
  4013     0565  083F               	movf	map@sMax+1,w
  4014     0566  00CB               	movwf	??_map+9
  4015     0567  0840               	movf	map@sMax+2,w
  4016     0568  00CC               	movwf	??_map+10
  4017     0569  0841               	movf	map@sMax+3,w
  4018     056A  00CD               	movwf	??_map+11
  4019     056B  083A               	movf	map@sMin,w
  4020     056C  02CA               	subwf	??_map+8,f
  4021     056D  083B               	movf	map@sMin+1,w
  4022     056E  1C03               	skipc
  4023     056F  0F3B               	incfsz	map@sMin+1,w
  4024     0570  2D72               	goto	u1351
  4025     0571  2D73               	goto	u1352
  4026     0572                     u1351:
  4027     0572  02CB               	subwf	??_map+9,f
  4028     0573                     u1352:
  4029     0573  083C               	movf	map@sMin+2,w
  4030     0574  1C03               	skipc
  4031     0575  0F3C               	incfsz	map@sMin+2,w
  4032     0576  2D78               	goto	u1353
  4033     0577  2D79               	goto	u1354
  4034     0578                     u1353:
  4035     0578  02CC               	subwf	??_map+10,f
  4036     0579                     u1354:
  4037     0579  083D               	movf	map@sMin+3,w
  4038     057A  1C03               	skipc
  4039     057B  0F3D               	incfsz	map@sMin+3,w
  4040     057C  2D7E               	goto	u1355
  4041     057D  2D7F               	goto	u1356
  4042     057E                     u1355:
  4043     057E  02CD               	subwf	??_map+11,f
  4044     057F                     u1356:
  4045     057F  084D               	movf	??_map+11,w
  4046     0580  00F7               	movwf	___lmul@multiplicand+3
  4047     0581  084C               	movf	??_map+10,w
  4048     0582  00F6               	movwf	___lmul@multiplicand+2
  4049     0583  084B               	movf	??_map+9,w
  4050     0584  00F5               	movwf	___lmul@multiplicand+1
  4051     0585  084A               	movf	??_map+8,w
  4052     0586  00F4               	movwf	___lmul@multiplicand
  4053     0587  120A  118A  21AD  120A  118A  	fcall	___lmul
  4054     058C  0873               	movf	?___lmul+3,w
  4055     058D  1283               	bcf	3,5	;RP0=0, select bank0
  4056     058E  1303               	bcf	3,6	;RP1=0, select bank0
  4057     058F  00A7               	movwf	___aldiv@dividend+3
  4058     0590  0872               	movf	?___lmul+2,w
  4059     0591  00A6               	movwf	___aldiv@dividend+2
  4060     0592  0871               	movf	?___lmul+1,w
  4061     0593  00A5               	movwf	___aldiv@dividend+1
  4062     0594  0870               	movf	?___lmul,w
  4063     0595  00A4               	movwf	___aldiv@dividend
  4064     0596  120A  118A  247C  120A  118A  	fcall	___aldiv
  4065     059B  1283               	bcf	3,5	;RP0=0, select bank0
  4066     059C  1303               	bcf	3,6	;RP1=0, select bank0
  4067     059D  0820               	movf	?___aldiv,w
  4068     059E  073A               	addwf	map@sMin,w
  4069     059F  00CE               	movwf	??_map+12
  4070     05A0  3000               	movlw	0
  4071     05A1  1803               	skipnc
  4072     05A2  3001               	movlw	1
  4073     05A3  0721               	addwf	?___aldiv+1,w
  4074     05A4  01D0               	clrf	??_map+14
  4075     05A5  1803               	skipnc
  4076     05A6  0AD0               	incf	??_map+14,f
  4077     05A7  073B               	addwf	map@sMin+1,w
  4078     05A8  00CF               	movwf	??_map+13
  4079     05A9  1803               	skipnc
  4080     05AA  0AD0               	incf	??_map+14,f
  4081     05AB  0822               	movf	?___aldiv+2,w
  4082     05AC  0750               	addwf	??_map+14,w
  4083     05AD  01D1               	clrf	??_map+15
  4084     05AE  1803               	skipnc
  4085     05AF  0AD1               	incf	??_map+15,f
  4086     05B0  073C               	addwf	map@sMin+2,w
  4087     05B1  00D0               	movwf	??_map+14
  4088     05B2  1803               	skipnc
  4089     05B3  0AD1               	incf	??_map+15,f
  4090     05B4  0823               	movf	?___aldiv+3,w
  4091     05B5  0751               	addwf	??_map+15,w
  4092     05B6  073D               	addwf	map@sMin+3,w
  4093     05B7  00D1               	movwf	??_map+15
  4094     05B8  0851               	movf	??_map+15,w
  4095     05B9  00B1               	movwf	?_map+3
  4096     05BA  0850               	movf	??_map+14,w
  4097     05BB  00B0               	movwf	?_map+2
  4098     05BC  084F               	movf	??_map+13,w
  4099     05BD  00AF               	movwf	?_map+1
  4100     05BE  084E               	movf	??_map+12,w
  4101     05BF  00AE               	movwf	?_map
  4102     05C0                     l57:
  4103     05C0  0008               	return
  4104     05C1                     __end_of_map:
  4105                           
  4106                           	psect	text23
  4107     01AD                     __ptext23:	
  4108 ;; *************** function ___lmul *****************
  4109 ;; Defined at:
  4110 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  multiplier      4    0[COMMON] unsigned long 
  4113 ;;  multiplicand    4    4[COMMON] unsigned long 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  product         4    9[COMMON] unsigned long 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  4    0[COMMON] unsigned long 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         8       0       0       0       0
  4126 ;;      Locals:         4       0       0       0       0
  4127 ;;      Temps:          1       0       0       0       0
  4128 ;;      Totals:        13       0       0       0       0
  4129 ;;Total ram usage:       13 bytes
  4130 ;; Hardware stack levels used: 1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_map
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138     01AD                     ___lmul:	
  4139                           ;psect for function ___lmul
  4140                           
  4141     01AD                     l1443:	
  4142                           ;incstack = 0
  4143                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4144                           
  4145     01AD  3000               	movlw	0
  4146     01AE  00FC               	movwf	___lmul@product+3
  4147     01AF  3000               	movlw	0
  4148     01B0  00FB               	movwf	___lmul@product+2
  4149     01B1  3000               	movlw	0
  4150     01B2  00FA               	movwf	___lmul@product+1
  4151     01B3  3000               	movlw	0
  4152     01B4  00F9               	movwf	___lmul@product
  4153     01B5                     l1445:
  4154     01B5  1C70               	btfss	___lmul@multiplier,0
  4155     01B6  29B8               	goto	u1051
  4156     01B7  29B9               	goto	u1050
  4157     01B8                     u1051:
  4158     01B8  29D0               	goto	l1449
  4159     01B9                     u1050:
  4160     01B9                     l1447:
  4161     01B9  0874               	movf	___lmul@multiplicand,w
  4162     01BA  07F9               	addwf	___lmul@product,f
  4163     01BB  0875               	movf	___lmul@multiplicand+1,w
  4164     01BC  1103               	clrz
  4165     01BD  1803               	skipnc
  4166     01BE  3E01               	addlw	1
  4167     01BF  1903               	skipnz
  4168     01C0  29C2               	goto	u1061
  4169     01C1  07FA               	addwf	___lmul@product+1,f
  4170     01C2                     u1061:
  4171     01C2  0876               	movf	___lmul@multiplicand+2,w
  4172     01C3  1103               	clrz
  4173     01C4  1803               	skipnc
  4174     01C5  3E01               	addlw	1
  4175     01C6  1903               	skipnz
  4176     01C7  29C9               	goto	u1062
  4177     01C8  07FB               	addwf	___lmul@product+2,f
  4178     01C9                     u1062:
  4179     01C9  0877               	movf	___lmul@multiplicand+3,w
  4180     01CA  1103               	clrz
  4181     01CB  1803               	skipnc
  4182     01CC  3E01               	addlw	1
  4183     01CD  1903               	skipnz
  4184     01CE  29D0               	goto	u1063
  4185     01CF  07FC               	addwf	___lmul@product+3,f
  4186     01D0                     u1063:
  4187     01D0                     l1449:
  4188     01D0  3001               	movlw	1
  4189     01D1  00F8               	movwf	??___lmul
  4190     01D2                     u1075:
  4191     01D2  1003               	clrc
  4192     01D3  0DF4               	rlf	___lmul@multiplicand,f
  4193     01D4  0DF5               	rlf	___lmul@multiplicand+1,f
  4194     01D5  0DF6               	rlf	___lmul@multiplicand+2,f
  4195     01D6  0DF7               	rlf	___lmul@multiplicand+3,f
  4196     01D7  0BF8               	decfsz	??___lmul,f
  4197     01D8  29D2               	goto	u1075
  4198     01D9                     l1451:
  4199     01D9  3001               	movlw	1
  4200     01DA                     u1085:
  4201     01DA  1003               	clrc
  4202     01DB  0CF3               	rrf	___lmul@multiplier+3,f
  4203     01DC  0CF2               	rrf	___lmul@multiplier+2,f
  4204     01DD  0CF1               	rrf	___lmul@multiplier+1,f
  4205     01DE  0CF0               	rrf	___lmul@multiplier,f
  4206     01DF  3EFF               	addlw	-1
  4207     01E0  1D03               	skipz
  4208     01E1  29DA               	goto	u1085
  4209     01E2  0873               	movf	___lmul@multiplier+3,w
  4210     01E3  0472               	iorwf	___lmul@multiplier+2,w
  4211     01E4  0471               	iorwf	___lmul@multiplier+1,w
  4212     01E5  0470               	iorwf	___lmul@multiplier,w
  4213     01E6  1D03               	skipz
  4214     01E7  29E9               	goto	u1091
  4215     01E8  29EA               	goto	u1090
  4216     01E9                     u1091:
  4217     01E9  29B5               	goto	l1445
  4218     01EA                     u1090:
  4219     01EA                     l1453:
  4220     01EA  087C               	movf	___lmul@product+3,w
  4221     01EB  00F3               	movwf	?___lmul+3
  4222     01EC  087B               	movf	___lmul@product+2,w
  4223     01ED  00F2               	movwf	?___lmul+2
  4224     01EE  087A               	movf	___lmul@product+1,w
  4225     01EF  00F1               	movwf	?___lmul+1
  4226     01F0  0879               	movf	___lmul@product,w
  4227     01F1  00F0               	movwf	?___lmul
  4228     01F2                     l375:
  4229     01F2  0008               	return
  4230     01F3                     __end_of___lmul:
  4231                           
  4232                           	psect	text24
  4233     047C                     __ptext24:	
  4234 ;; *************** function ___aldiv *****************
  4235 ;; Defined at:
  4236 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  divisor         4    0[BANK0 ] long 
  4239 ;;  dividend        4    4[BANK0 ] long 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  quotient        4   10[BANK0 ] long 
  4242 ;;  sign            1    9[BANK0 ] unsigned char 
  4243 ;;  counter         1    8[BANK0 ] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  4    0[BANK0 ] long 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         0       8       0       0       0
  4254 ;;      Locals:         0       6       0       0       0
  4255 ;;      Temps:          1       0       0       0       0
  4256 ;;      Totals:         1      14       0       0       0
  4257 ;;Total ram usage:       15 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_map
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266     047C                     ___aldiv:	
  4267                           ;psect for function ___aldiv
  4268                           
  4269     047C                     l1457:	
  4270                           ;incstack = 0
  4271                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4272                           
  4273     047C  1283               	bcf	3,5	;RP0=0, select bank0
  4274     047D  1303               	bcf	3,6	;RP1=0, select bank0
  4275     047E  01A9               	clrf	___aldiv@sign
  4276     047F                     l1459:
  4277     047F  1FA3               	btfss	___aldiv@divisor+3,7
  4278     0480  2C82               	goto	u1101
  4279     0481  2C83               	goto	u1100
  4280     0482                     u1101:
  4281     0482  2C90               	goto	l426
  4282     0483                     u1100:
  4283     0483                     l1461:
  4284     0483  09A0               	comf	___aldiv@divisor,f
  4285     0484  09A1               	comf	___aldiv@divisor+1,f
  4286     0485  09A2               	comf	___aldiv@divisor+2,f
  4287     0486  09A3               	comf	___aldiv@divisor+3,f
  4288     0487  0AA0               	incf	___aldiv@divisor,f
  4289     0488  1903               	skipnz
  4290     0489  0AA1               	incf	___aldiv@divisor+1,f
  4291     048A  1903               	skipnz
  4292     048B  0AA2               	incf	___aldiv@divisor+2,f
  4293     048C  1903               	skipnz
  4294     048D  0AA3               	incf	___aldiv@divisor+3,f
  4295     048E  01A9               	clrf	___aldiv@sign
  4296     048F  0AA9               	incf	___aldiv@sign,f
  4297     0490                     l426:
  4298     0490  1FA7               	btfss	___aldiv@dividend+3,7
  4299     0491  2C93               	goto	u1111
  4300     0492  2C94               	goto	u1110
  4301     0493                     u1111:
  4302     0493  2CA3               	goto	l1467
  4303     0494                     u1110:
  4304     0494                     l1463:
  4305     0494  09A4               	comf	___aldiv@dividend,f
  4306     0495  09A5               	comf	___aldiv@dividend+1,f
  4307     0496  09A6               	comf	___aldiv@dividend+2,f
  4308     0497  09A7               	comf	___aldiv@dividend+3,f
  4309     0498  0AA4               	incf	___aldiv@dividend,f
  4310     0499  1903               	skipnz
  4311     049A  0AA5               	incf	___aldiv@dividend+1,f
  4312     049B  1903               	skipnz
  4313     049C  0AA6               	incf	___aldiv@dividend+2,f
  4314     049D  1903               	skipnz
  4315     049E  0AA7               	incf	___aldiv@dividend+3,f
  4316     049F                     l1465:
  4317     049F  3001               	movlw	1
  4318     04A0  00FD               	movwf	??___aldiv
  4319     04A1  087D               	movf	??___aldiv,w
  4320     04A2  06A9               	xorwf	___aldiv@sign,f
  4321     04A3                     l1467:
  4322     04A3  3000               	movlw	0
  4323     04A4  00AD               	movwf	___aldiv@quotient+3
  4324     04A5  3000               	movlw	0
  4325     04A6  00AC               	movwf	___aldiv@quotient+2
  4326     04A7  3000               	movlw	0
  4327     04A8  00AB               	movwf	___aldiv@quotient+1
  4328     04A9  3000               	movlw	0
  4329     04AA  00AA               	movwf	___aldiv@quotient
  4330     04AB                     l1469:
  4331     04AB  0823               	movf	___aldiv@divisor+3,w
  4332     04AC  0422               	iorwf	___aldiv@divisor+2,w
  4333     04AD  0421               	iorwf	___aldiv@divisor+1,w
  4334     04AE  0420               	iorwf	___aldiv@divisor,w
  4335     04AF  1903               	skipnz
  4336     04B0  2CB2               	goto	u1121
  4337     04B1  2CB3               	goto	u1120
  4338     04B2                     u1121:
  4339     04B2  2D00               	goto	l1489
  4340     04B3                     u1120:
  4341     04B3                     l1471:
  4342     04B3  01A8               	clrf	___aldiv@counter
  4343     04B4  0AA8               	incf	___aldiv@counter,f
  4344     04B5  2CC3               	goto	l1475
  4345     04B6                     l1473:
  4346     04B6  3001               	movlw	1
  4347     04B7  00FD               	movwf	??___aldiv
  4348     04B8                     u1135:
  4349     04B8  1003               	clrc
  4350     04B9  0DA0               	rlf	___aldiv@divisor,f
  4351     04BA  0DA1               	rlf	___aldiv@divisor+1,f
  4352     04BB  0DA2               	rlf	___aldiv@divisor+2,f
  4353     04BC  0DA3               	rlf	___aldiv@divisor+3,f
  4354     04BD  0BFD               	decfsz	??___aldiv,f
  4355     04BE  2CB8               	goto	u1135
  4356     04BF  3001               	movlw	1
  4357     04C0  00FD               	movwf	??___aldiv
  4358     04C1  087D               	movf	??___aldiv,w
  4359     04C2  07A8               	addwf	___aldiv@counter,f
  4360     04C3                     l1475:
  4361     04C3  1FA3               	btfss	___aldiv@divisor+3,7
  4362     04C4  2CC6               	goto	u1141
  4363     04C5  2CC7               	goto	u1140
  4364     04C6                     u1141:
  4365     04C6  2CB6               	goto	l1473
  4366     04C7                     u1140:
  4367     04C7                     l1477:
  4368     04C7  3001               	movlw	1
  4369     04C8  00FD               	movwf	??___aldiv
  4370     04C9                     u1155:
  4371     04C9  1003               	clrc
  4372     04CA  0DAA               	rlf	___aldiv@quotient,f
  4373     04CB  0DAB               	rlf	___aldiv@quotient+1,f
  4374     04CC  0DAC               	rlf	___aldiv@quotient+2,f
  4375     04CD  0DAD               	rlf	___aldiv@quotient+3,f
  4376     04CE  0BFD               	decfsz	??___aldiv,f
  4377     04CF  2CC9               	goto	u1155
  4378     04D0                     l1479:
  4379     04D0  0823               	movf	___aldiv@divisor+3,w
  4380     04D1  0227               	subwf	___aldiv@dividend+3,w
  4381     04D2  1D03               	skipz
  4382     04D3  2CDE               	goto	u1165
  4383     04D4  0822               	movf	___aldiv@divisor+2,w
  4384     04D5  0226               	subwf	___aldiv@dividend+2,w
  4385     04D6  1D03               	skipz
  4386     04D7  2CDE               	goto	u1165
  4387     04D8  0821               	movf	___aldiv@divisor+1,w
  4388     04D9  0225               	subwf	___aldiv@dividend+1,w
  4389     04DA  1D03               	skipz
  4390     04DB  2CDE               	goto	u1165
  4391     04DC  0820               	movf	___aldiv@divisor,w
  4392     04DD  0224               	subwf	___aldiv@dividend,w
  4393     04DE                     u1165:
  4394     04DE  1C03               	skipc
  4395     04DF  2CE1               	goto	u1161
  4396     04E0  2CE2               	goto	u1160
  4397     04E1                     u1161:
  4398     04E1  2CF1               	goto	l1485
  4399     04E2                     u1160:
  4400     04E2                     l1481:
  4401     04E2  0820               	movf	___aldiv@divisor,w
  4402     04E3  02A4               	subwf	___aldiv@dividend,f
  4403     04E4  0821               	movf	___aldiv@divisor+1,w
  4404     04E5  1C03               	skipc
  4405     04E6  0F21               	incfsz	___aldiv@divisor+1,w
  4406     04E7  02A5               	subwf	___aldiv@dividend+1,f
  4407     04E8  0822               	movf	___aldiv@divisor+2,w
  4408     04E9  1C03               	skipc
  4409     04EA  0F22               	incfsz	___aldiv@divisor+2,w
  4410     04EB  02A6               	subwf	___aldiv@dividend+2,f
  4411     04EC  0823               	movf	___aldiv@divisor+3,w
  4412     04ED  1C03               	skipc
  4413     04EE  0F23               	incfsz	___aldiv@divisor+3,w
  4414     04EF  02A7               	subwf	___aldiv@dividend+3,f
  4415     04F0                     l1483:
  4416     04F0  142A               	bsf	___aldiv@quotient,0
  4417     04F1                     l1485:
  4418     04F1  3001               	movlw	1
  4419     04F2                     u1175:
  4420     04F2  1003               	clrc
  4421     04F3  0CA3               	rrf	___aldiv@divisor+3,f
  4422     04F4  0CA2               	rrf	___aldiv@divisor+2,f
  4423     04F5  0CA1               	rrf	___aldiv@divisor+1,f
  4424     04F6  0CA0               	rrf	___aldiv@divisor,f
  4425     04F7  3EFF               	addlw	-1
  4426     04F8  1D03               	skipz
  4427     04F9  2CF2               	goto	u1175
  4428     04FA                     l1487:
  4429     04FA  3001               	movlw	1
  4430     04FB  02A8               	subwf	___aldiv@counter,f
  4431     04FC  1D03               	btfss	3,2
  4432     04FD  2CFF               	goto	u1181
  4433     04FE  2D00               	goto	u1180
  4434     04FF                     u1181:
  4435     04FF  2CC7               	goto	l1477
  4436     0500                     u1180:
  4437     0500                     l1489:
  4438     0500  0829               	movf	___aldiv@sign,w
  4439     0501  1903               	btfsc	3,2
  4440     0502  2D04               	goto	u1191
  4441     0503  2D05               	goto	u1190
  4442     0504                     u1191:
  4443     0504  2D10               	goto	l1493
  4444     0505                     u1190:
  4445     0505                     l1491:
  4446     0505  09AA               	comf	___aldiv@quotient,f
  4447     0506  09AB               	comf	___aldiv@quotient+1,f
  4448     0507  09AC               	comf	___aldiv@quotient+2,f
  4449     0508  09AD               	comf	___aldiv@quotient+3,f
  4450     0509  0AAA               	incf	___aldiv@quotient,f
  4451     050A  1903               	skipnz
  4452     050B  0AAB               	incf	___aldiv@quotient+1,f
  4453     050C  1903               	skipnz
  4454     050D  0AAC               	incf	___aldiv@quotient+2,f
  4455     050E  1903               	skipnz
  4456     050F  0AAD               	incf	___aldiv@quotient+3,f
  4457     0510                     l1493:
  4458     0510  082D               	movf	___aldiv@quotient+3,w
  4459     0511  00A3               	movwf	?___aldiv+3
  4460     0512  082C               	movf	___aldiv@quotient+2,w
  4461     0513  00A2               	movwf	?___aldiv+2
  4462     0514  082B               	movf	___aldiv@quotient+1,w
  4463     0515  00A1               	movwf	?___aldiv+1
  4464     0516  082A               	movf	___aldiv@quotient,w
  4465     0517  00A0               	movwf	?___aldiv
  4466     0518                     l436:
  4467     0518  0008               	return
  4468     0519                     __end_of___aldiv:
  4469                           
  4470                           	psect	text25
  4471     0FB4                     __ptext25:	
  4472 ;; *************** function ___wmul *****************
  4473 ;; Defined at:
  4474 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  multiplier      2    0[COMMON] unsigned int 
  4477 ;;  multiplicand    2    2[COMMON] unsigned int 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  product         2    4[COMMON] unsigned int 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  2    0[COMMON] unsigned int 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         4       0       0       0       0
  4490 ;;      Locals:         2       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0
  4492 ;;      Totals:         6       0       0       0       0
  4493 ;;Total ram usage:        6 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_ADC_CONV_V
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502     0FB4                     ___wmul:	
  4503                           ;psect for function ___wmul
  4504                           
  4505     0FB4                     l1661:	
  4506                           ;incstack = 0
  4507                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4508                           
  4509     0FB4  01F4               	clrf	___wmul@product
  4510     0FB5  01F5               	clrf	___wmul@product+1
  4511     0FB6                     l1663:
  4512     0FB6  1C70               	btfss	___wmul@multiplier,0
  4513     0FB7  2FB9               	goto	u1521
  4514     0FB8  2FBA               	goto	u1520
  4515     0FB9                     u1521:
  4516     0FB9  2FC0               	goto	l361
  4517     0FBA                     u1520:
  4518     0FBA                     l1665:
  4519     0FBA  0872               	movf	___wmul@multiplicand,w
  4520     0FBB  07F4               	addwf	___wmul@product,f
  4521     0FBC  1803               	skipnc
  4522     0FBD  0AF5               	incf	___wmul@product+1,f
  4523     0FBE  0873               	movf	___wmul@multiplicand+1,w
  4524     0FBF  07F5               	addwf	___wmul@product+1,f
  4525     0FC0                     l361:
  4526     0FC0  3001               	movlw	1
  4527     0FC1                     u1535:
  4528     0FC1  1003               	clrc
  4529     0FC2  0DF2               	rlf	___wmul@multiplicand,f
  4530     0FC3  0DF3               	rlf	___wmul@multiplicand+1,f
  4531     0FC4  3EFF               	addlw	-1
  4532     0FC5  1D03               	skipz
  4533     0FC6  2FC1               	goto	u1535
  4534     0FC7                     l1667:
  4535     0FC7  3001               	movlw	1
  4536     0FC8                     u1545:
  4537     0FC8  1003               	clrc
  4538     0FC9  0CF1               	rrf	___wmul@multiplier+1,f
  4539     0FCA  0CF0               	rrf	___wmul@multiplier,f
  4540     0FCB  3EFF               	addlw	-1
  4541     0FCC  1D03               	skipz
  4542     0FCD  2FC8               	goto	u1545
  4543     0FCE                     l1669:
  4544     0FCE  0870               	movf	___wmul@multiplier,w
  4545     0FCF  0471               	iorwf	___wmul@multiplier+1,w
  4546     0FD0  1D03               	btfss	3,2
  4547     0FD1  2FD3               	goto	u1551
  4548     0FD2  2FD4               	goto	u1550
  4549     0FD3                     u1551:
  4550     0FD3  2FB6               	goto	l1663
  4551     0FD4                     u1550:
  4552     0FD4                     l1671:
  4553     0FD4  0875               	movf	___wmul@product+1,w
  4554     0FD5  00F1               	movwf	?___wmul+1
  4555     0FD6  0874               	movf	___wmul@product,w
  4556     0FD7  00F0               	movwf	?___wmul
  4557     0FD8                     l363:
  4558     0FD8  0008               	return
  4559     0FD9                     __end_of___wmul:
  4560                           
  4561                           	psect	text26
  4562     02E9                     __ptext26:	
  4563 ;; *************** function ___awmod *****************
  4564 ;; Defined at:
  4565 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  divisor         2    4[BANK0 ] int 
  4568 ;;  dividend        2    6[BANK0 ] int 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  sign            1   13[COMMON] unsigned char 
  4571 ;;  counter         1   12[COMMON] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  2    4[BANK0 ] int 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4581 ;;      Params:         0       4       0       0       0
  4582 ;;      Locals:         2       0       0       0       0
  4583 ;;      Temps:          1       0       0       0       0
  4584 ;;      Totals:         3       4       0       0       0
  4585 ;;Total ram usage:        7 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_ADC_CONV_V
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594     02E9                     ___awmod:	
  4595                           ;psect for function ___awmod
  4596                           
  4597     02E9                     l1743:	
  4598                           ;incstack = 0
  4599                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4600                           
  4601     02E9  01FD               	clrf	___awmod@sign
  4602     02EA                     l1745:
  4603     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  4604     02EB  1303               	bcf	3,6	;RP1=0, select bank0
  4605     02EC  1FA7               	btfss	___awmod@dividend+1,7
  4606     02ED  2AEF               	goto	u1731
  4607     02EE  2AF0               	goto	u1730
  4608     02EF                     u1731:
  4609     02EF  2AF7               	goto	l1751
  4610     02F0                     u1730:
  4611     02F0                     l1747:
  4612     02F0  09A6               	comf	___awmod@dividend,f
  4613     02F1  09A7               	comf	___awmod@dividend+1,f
  4614     02F2  0AA6               	incf	___awmod@dividend,f
  4615     02F3  1903               	skipnz
  4616     02F4  0AA7               	incf	___awmod@dividend+1,f
  4617     02F5                     l1749:
  4618     02F5  01FD               	clrf	___awmod@sign
  4619     02F6  0AFD               	incf	___awmod@sign,f
  4620     02F7                     l1751:
  4621     02F7  1FA5               	btfss	___awmod@divisor+1,7
  4622     02F8  2AFA               	goto	u1741
  4623     02F9  2AFB               	goto	u1740
  4624     02FA                     u1741:
  4625     02FA  2B00               	goto	l1755
  4626     02FB                     u1740:
  4627     02FB                     l1753:
  4628     02FB  09A4               	comf	___awmod@divisor,f
  4629     02FC  09A5               	comf	___awmod@divisor+1,f
  4630     02FD  0AA4               	incf	___awmod@divisor,f
  4631     02FE  1903               	skipnz
  4632     02FF  0AA5               	incf	___awmod@divisor+1,f
  4633     0300                     l1755:
  4634     0300  0824               	movf	___awmod@divisor,w
  4635     0301  0425               	iorwf	___awmod@divisor+1,w
  4636     0302  1903               	btfsc	3,2
  4637     0303  2B05               	goto	u1751
  4638     0304  2B06               	goto	u1750
  4639     0305                     u1751:
  4640     0305  2B35               	goto	l1773
  4641     0306                     u1750:
  4642     0306                     l1757:
  4643     0306  01FC               	clrf	___awmod@counter
  4644     0307  0AFC               	incf	___awmod@counter,f
  4645     0308  2B14               	goto	l1763
  4646     0309                     l1759:
  4647     0309  3001               	movlw	1
  4648     030A                     u1765:
  4649     030A  1003               	clrc
  4650     030B  0DA4               	rlf	___awmod@divisor,f
  4651     030C  0DA5               	rlf	___awmod@divisor+1,f
  4652     030D  3EFF               	addlw	-1
  4653     030E  1D03               	skipz
  4654     030F  2B0A               	goto	u1765
  4655     0310                     l1761:
  4656     0310  3001               	movlw	1
  4657     0311  00FB               	movwf	??___awmod
  4658     0312  087B               	movf	??___awmod,w
  4659     0313  07FC               	addwf	___awmod@counter,f
  4660     0314                     l1763:
  4661     0314  1FA5               	btfss	___awmod@divisor+1,7
  4662     0315  2B17               	goto	u1771
  4663     0316  2B18               	goto	u1770
  4664     0317                     u1771:
  4665     0317  2B09               	goto	l1759
  4666     0318                     u1770:
  4667     0318                     l1765:
  4668     0318  0825               	movf	___awmod@divisor+1,w
  4669     0319  0227               	subwf	___awmod@dividend+1,w
  4670     031A  1D03               	skipz
  4671     031B  2B1E               	goto	u1785
  4672     031C  0824               	movf	___awmod@divisor,w
  4673     031D  0226               	subwf	___awmod@dividend,w
  4674     031E                     u1785:
  4675     031E  1C03               	skipc
  4676     031F  2B21               	goto	u1781
  4677     0320  2B22               	goto	u1780
  4678     0321                     u1781:
  4679     0321  2B28               	goto	l1769
  4680     0322                     u1780:
  4681     0322                     l1767:
  4682     0322  0824               	movf	___awmod@divisor,w
  4683     0323  02A6               	subwf	___awmod@dividend,f
  4684     0324  0825               	movf	___awmod@divisor+1,w
  4685     0325  1C03               	skipc
  4686     0326  03A7               	decf	___awmod@dividend+1,f
  4687     0327  02A7               	subwf	___awmod@dividend+1,f
  4688     0328                     l1769:
  4689     0328  3001               	movlw	1
  4690     0329                     u1795:
  4691     0329  1003               	clrc
  4692     032A  0CA5               	rrf	___awmod@divisor+1,f
  4693     032B  0CA4               	rrf	___awmod@divisor,f
  4694     032C  3EFF               	addlw	-1
  4695     032D  1D03               	skipz
  4696     032E  2B29               	goto	u1795
  4697     032F                     l1771:
  4698     032F  3001               	movlw	1
  4699     0330  02FC               	subwf	___awmod@counter,f
  4700     0331  1D03               	btfss	3,2
  4701     0332  2B34               	goto	u1801
  4702     0333  2B35               	goto	u1800
  4703     0334                     u1801:
  4704     0334  2B18               	goto	l1765
  4705     0335                     u1800:
  4706     0335                     l1773:
  4707     0335  087D               	movf	___awmod@sign,w
  4708     0336  1903               	btfsc	3,2
  4709     0337  2B39               	goto	u1811
  4710     0338  2B3A               	goto	u1810
  4711     0339                     u1811:
  4712     0339  2B3F               	goto	l1777
  4713     033A                     u1810:
  4714     033A                     l1775:
  4715     033A  09A6               	comf	___awmod@dividend,f
  4716     033B  09A7               	comf	___awmod@dividend+1,f
  4717     033C  0AA6               	incf	___awmod@dividend,f
  4718     033D  1903               	skipnz
  4719     033E  0AA7               	incf	___awmod@dividend+1,f
  4720     033F                     l1777:
  4721     033F  0827               	movf	___awmod@dividend+1,w
  4722     0340  00A5               	movwf	?___awmod+1
  4723     0341  0826               	movf	___awmod@dividend,w
  4724     0342  00A4               	movwf	?___awmod
  4725     0343                     l527:
  4726     0343  0008               	return
  4727     0344                     __end_of___awmod:
  4728                           
  4729                           	psect	text27
  4730     03AA                     __ptext27:	
  4731 ;; *************** function ___awdiv *****************
  4732 ;; Defined at:
  4733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  divisor         2    6[COMMON] int 
  4736 ;;  dividend        2    8[COMMON] int 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  quotient        2    2[BANK0 ] int 
  4739 ;;  sign            1    1[BANK0 ] unsigned char 
  4740 ;;  counter         1    0[BANK0 ] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  2    6[COMMON] int 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4750 ;;      Params:         4       0       0       0       0
  4751 ;;      Locals:         0       4       0       0       0
  4752 ;;      Temps:          1       0       0       0       0
  4753 ;;      Totals:         5       4       0       0       0
  4754 ;;Total ram usage:        9 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_ADC_CONV_V
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763     03AA                     ___awdiv:	
  4764                           ;psect for function ___awdiv
  4765                           
  4766     03AA                     l1699:	
  4767                           ;incstack = 0
  4768                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4769                           
  4770     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  4771     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  4772     03AC  01A1               	clrf	___awdiv@sign
  4773     03AD                     l1701:
  4774     03AD  1FF7               	btfss	___awdiv@divisor+1,7
  4775     03AE  2BB0               	goto	u1631
  4776     03AF  2BB1               	goto	u1630
  4777     03B0                     u1631:
  4778     03B0  2BB8               	goto	l1707
  4779     03B1                     u1630:
  4780     03B1                     l1703:
  4781     03B1  09F6               	comf	___awdiv@divisor,f
  4782     03B2  09F7               	comf	___awdiv@divisor+1,f
  4783     03B3  0AF6               	incf	___awdiv@divisor,f
  4784     03B4  1903               	skipnz
  4785     03B5  0AF7               	incf	___awdiv@divisor+1,f
  4786     03B6                     l1705:
  4787     03B6  01A1               	clrf	___awdiv@sign
  4788     03B7  0AA1               	incf	___awdiv@sign,f
  4789     03B8                     l1707:
  4790     03B8  1FF9               	btfss	___awdiv@dividend+1,7
  4791     03B9  2BBB               	goto	u1641
  4792     03BA  2BBC               	goto	u1640
  4793     03BB                     u1641:
  4794     03BB  2BC5               	goto	l1713
  4795     03BC                     u1640:
  4796     03BC                     l1709:
  4797     03BC  09F8               	comf	___awdiv@dividend,f
  4798     03BD  09F9               	comf	___awdiv@dividend+1,f
  4799     03BE  0AF8               	incf	___awdiv@dividend,f
  4800     03BF  1903               	skipnz
  4801     03C0  0AF9               	incf	___awdiv@dividend+1,f
  4802     03C1                     l1711:
  4803     03C1  3001               	movlw	1
  4804     03C2  00FA               	movwf	??___awdiv
  4805     03C3  087A               	movf	??___awdiv,w
  4806     03C4  06A1               	xorwf	___awdiv@sign,f
  4807     03C5                     l1713:
  4808     03C5  01A2               	clrf	___awdiv@quotient
  4809     03C6  01A3               	clrf	___awdiv@quotient+1
  4810     03C7                     l1715:
  4811     03C7  0876               	movf	___awdiv@divisor,w
  4812     03C8  0477               	iorwf	___awdiv@divisor+1,w
  4813     03C9  1903               	btfsc	3,2
  4814     03CA  2BCC               	goto	u1651
  4815     03CB  2BCD               	goto	u1650
  4816     03CC                     u1651:
  4817     03CC  2C04               	goto	l1735
  4818     03CD                     u1650:
  4819     03CD                     l1717:
  4820     03CD  01A0               	clrf	___awdiv@counter
  4821     03CE  0AA0               	incf	___awdiv@counter,f
  4822     03CF  2BDB               	goto	l1723
  4823     03D0                     l1719:
  4824     03D0  3001               	movlw	1
  4825     03D1                     u1665:
  4826     03D1  1003               	clrc
  4827     03D2  0DF6               	rlf	___awdiv@divisor,f
  4828     03D3  0DF7               	rlf	___awdiv@divisor+1,f
  4829     03D4  3EFF               	addlw	-1
  4830     03D5  1D03               	skipz
  4831     03D6  2BD1               	goto	u1665
  4832     03D7                     l1721:
  4833     03D7  3001               	movlw	1
  4834     03D8  00FA               	movwf	??___awdiv
  4835     03D9  087A               	movf	??___awdiv,w
  4836     03DA  07A0               	addwf	___awdiv@counter,f
  4837     03DB                     l1723:
  4838     03DB  1FF7               	btfss	___awdiv@divisor+1,7
  4839     03DC  2BDE               	goto	u1671
  4840     03DD  2BDF               	goto	u1670
  4841     03DE                     u1671:
  4842     03DE  2BD0               	goto	l1719
  4843     03DF                     u1670:
  4844     03DF                     l1725:
  4845     03DF  3001               	movlw	1
  4846     03E0                     u1685:
  4847     03E0  1003               	clrc
  4848     03E1  0DA2               	rlf	___awdiv@quotient,f
  4849     03E2  0DA3               	rlf	___awdiv@quotient+1,f
  4850     03E3  3EFF               	addlw	-1
  4851     03E4  1D03               	skipz
  4852     03E5  2BE0               	goto	u1685
  4853     03E6  0877               	movf	___awdiv@divisor+1,w
  4854     03E7  0279               	subwf	___awdiv@dividend+1,w
  4855     03E8  1D03               	skipz
  4856     03E9  2BEC               	goto	u1695
  4857     03EA  0876               	movf	___awdiv@divisor,w
  4858     03EB  0278               	subwf	___awdiv@dividend,w
  4859     03EC                     u1695:
  4860     03EC  1C03               	skipc
  4861     03ED  2BEF               	goto	u1691
  4862     03EE  2BF0               	goto	u1690
  4863     03EF                     u1691:
  4864     03EF  2BF7               	goto	l1731
  4865     03F0                     u1690:
  4866     03F0                     l1727:
  4867     03F0  0876               	movf	___awdiv@divisor,w
  4868     03F1  02F8               	subwf	___awdiv@dividend,f
  4869     03F2  0877               	movf	___awdiv@divisor+1,w
  4870     03F3  1C03               	skipc
  4871     03F4  03F9               	decf	___awdiv@dividend+1,f
  4872     03F5  02F9               	subwf	___awdiv@dividend+1,f
  4873     03F6                     l1729:
  4874     03F6  1422               	bsf	___awdiv@quotient,0
  4875     03F7                     l1731:
  4876     03F7  3001               	movlw	1
  4877     03F8                     u1705:
  4878     03F8  1003               	clrc
  4879     03F9  0CF7               	rrf	___awdiv@divisor+1,f
  4880     03FA  0CF6               	rrf	___awdiv@divisor,f
  4881     03FB  3EFF               	addlw	-1
  4882     03FC  1D03               	skipz
  4883     03FD  2BF8               	goto	u1705
  4884     03FE                     l1733:
  4885     03FE  3001               	movlw	1
  4886     03FF  02A0               	subwf	___awdiv@counter,f
  4887     0400  1D03               	btfss	3,2
  4888     0401  2C03               	goto	u1711
  4889     0402  2C04               	goto	u1710
  4890     0403                     u1711:
  4891     0403  2BDF               	goto	l1725
  4892     0404                     u1710:
  4893     0404                     l1735:
  4894     0404  0821               	movf	___awdiv@sign,w
  4895     0405  1903               	btfsc	3,2
  4896     0406  2C08               	goto	u1721
  4897     0407  2C09               	goto	u1720
  4898     0408                     u1721:
  4899     0408  2C0E               	goto	l1739
  4900     0409                     u1720:
  4901     0409                     l1737:
  4902     0409  09A2               	comf	___awdiv@quotient,f
  4903     040A  09A3               	comf	___awdiv@quotient+1,f
  4904     040B  0AA2               	incf	___awdiv@quotient,f
  4905     040C  1903               	skipnz
  4906     040D  0AA3               	incf	___awdiv@quotient+1,f
  4907     040E                     l1739:
  4908     040E  0823               	movf	___awdiv@quotient+1,w
  4909     040F  00F7               	movwf	?___awdiv+1
  4910     0410  0822               	movf	___awdiv@quotient,w
  4911     0411  00F6               	movwf	?___awdiv
  4912     0412                     l514:
  4913     0412  0008               	return
  4914     0413                     __end_of___awdiv:
  4915                           
  4916                           	psect	text28
  4917     0FD9                     __ptext28:	
  4918 ;; *************** function _ADC_Read *****************
  4919 ;; Defined at:
  4920 ;;		line 10 in file "adc.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  ch              1    wreg     unsigned char 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  ch              1    4[COMMON] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  2    0[COMMON] unsigned int 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         2       0       0       0       0
  4935 ;;      Locals:         1       0       0       0       0
  4936 ;;      Temps:          2       0       0       0       0
  4937 ;;      Totals:         5       0       0       0       0
  4938 ;;Total ram usage:        5 bytes
  4939 ;; Hardware stack levels used: 1
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_ADC_CONV_V
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947     0FD9                     _ADC_Read:	
  4948                           ;psect for function _ADC_Read
  4949                           
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  4953                           ;ADC_Read@ch stored from wreg
  4954     0FD9  00F4               	movwf	ADC_Read@ch
  4955     0FDA                     l1549:
  4956                           
  4957                           ;adc.c: 10: unsigned int ADC_Read(unsigned char ch);adc.c: 11: {;adc.c: 12:     if(ch > 
      +                          13){
  4958     0FDA  300E               	movlw	14
  4959     0FDB  0274               	subwf	ADC_Read@ch,w
  4960     0FDC  1C03               	skipc
  4961     0FDD  2FDF               	goto	u1361
  4962     0FDE  2FE0               	goto	u1360
  4963     0FDF                     u1361:
  4964     0FDF  2FE3               	goto	l1557
  4965     0FE0                     u1360:
  4966     0FE0                     l1551:
  4967                           
  4968                           ;adc.c: 13:         return 0;
  4969     0FE0  01F0               	clrf	?_ADC_Read
  4970     0FE1  01F1               	clrf	?_ADC_Read+1
  4971     0FE2  2FFF               	goto	l123
  4972     0FE3                     l1557:
  4973                           
  4974                           ;adc.c: 15:         ADCON0 = 0b01000000;
  4975     0FE3  3040               	movlw	64
  4976     0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  4977     0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  4978     0FE6  009F               	movwf	31	;volatile
  4979     0FE7                     l1559:
  4980                           
  4981                           ;adc.c: 16:         ADCON0 = (ch << 2);
  4982     0FE7  0874               	movf	ADC_Read@ch,w
  4983     0FE8  00F2               	movwf	??_ADC_Read
  4984     0FE9  3001               	movlw	1
  4985     0FEA                     u1375:
  4986     0FEA  1003               	clrc
  4987     0FEB  0DF2               	rlf	??_ADC_Read,f
  4988     0FEC  3EFF               	addlw	-1
  4989     0FED  1D03               	skipz
  4990     0FEE  2FEA               	goto	u1375
  4991     0FEF  1003               	clrc
  4992     0FF0  0D72               	rlf	??_ADC_Read,w
  4993     0FF1  009F               	movwf	31	;volatile
  4994     0FF2                     l1561:
  4995                           
  4996                           ;adc.c: 17:         ADCON0bits.ADON = 1;
  4997     0FF2  141F               	bsf	31,0	;volatile
  4998     0FF3                     l1563:
  4999                           
  5000                           ;adc.c: 18:         ADCON0bits.GO_DONE = 1;
  5001     0FF3  149F               	bsf	31,1	;volatile
  5002     0FF4                     l125:	
  5003                           ;adc.c: 19:         while(ADCON0bits.GO_DONE == 1);
  5004                           
  5005     0FF4  189F               	btfsc	31,1	;volatile
  5006     0FF5  2FF7               	goto	u1381
  5007     0FF6  2FF8               	goto	u1380
  5008     0FF7                     u1381:
  5009     0FF7  2FF4               	goto	l125
  5010     0FF8                     u1380:
  5011     0FF8                     l1565:
  5012                           
  5013                           ;adc.c: 20:         return ADRESH;
  5014     0FF8  081E               	movf	30,w	;volatile
  5015     0FF9  00F2               	movwf	??_ADC_Read
  5016     0FFA  01F3               	clrf	??_ADC_Read+1
  5017     0FFB  0872               	movf	??_ADC_Read,w
  5018     0FFC  00F0               	movwf	?_ADC_Read
  5019     0FFD  0873               	movf	??_ADC_Read+1,w
  5020     0FFE  00F1               	movwf	?_ADC_Read+1
  5021     0FFF                     l123:
  5022     0FFF  0008               	return
  5023     1000                     __end_of_ADC_Read:
  5024     007E                     btemp	set	126	;btemp
  5025     007E                     wtemp0	set	126
  5026                           
  5027                           	psect	idloc
  5028                           
  5029                           ;Config register IDLOC0 @ 0x2000
  5030                           ;	unspecified, using default values
  5031     2000                     	org	8192
  5032     2000  3FFF               	dw	16383
  5033                           
  5034                           ;Config register IDLOC1 @ 0x2001
  5035                           ;	unspecified, using default values
  5036     2001                     	org	8193
  5037     2001  3FFF               	dw	16383
  5038                           
  5039                           ;Config register IDLOC2 @ 0x2002
  5040                           ;	unspecified, using default values
  5041     2002                     	org	8194
  5042     2002  3FFF               	dw	16383
  5043                           
  5044                           ;Config register IDLOC3 @ 0x2003
  5045                           ;	unspecified, using default values
  5046     2003                     	org	8195
  5047     2003  3FFF               	dw	16383
  5048                           
  5049                           	psect	config
  5050                           
  5051                           ;Config register CONFIG1 @ 0x2007
  5052                           ;	Oscillator Selection bits
  5053                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5054                           ;	Watchdog Timer Enable bit
  5055                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5056                           ;	Power-up Timer Enable bit
  5057                           ;	PWRTE = OFF, PWRT disabled
  5058                           ;	RE3/MCLR pin function select bit
  5059                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5060                           ;	Code Protection bit
  5061                           ;	CP = OFF, Program memory code protection is disabled
  5062                           ;	Data Code Protection bit
  5063                           ;	CPD = OFF, Data memory code protection is disabled
  5064                           ;	Brown Out Reset Selection bits
  5065                           ;	BOREN = OFF, BOR disabled
  5066                           ;	Internal External Switchover bit
  5067                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5068                           ;	Fail-Safe Clock Monitor Enabled bit
  5069                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5070                           ;	Low Voltage Programming Enable bit
  5071                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5072                           ;	In-Circuit Debugger Mode bit
  5073                           ;	DEBUG = 0x1, unprogramme  5074     2007                     	org	8199
  5075     2007  20D4               	dw	8404
  5076                           
  5077                           ;Config register CONFIG2 @ 0x2008
  5078                           ;	Brown-out Reset Selection bit
  5079                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5080                           ;	Flash Program Memory Self Write Enable bits
  5081                           ;	WRT = OFF, Write protection off
  5082     2008                     	org	8200
  5083     2008  3FFF               	dw	16383

Data Sizes:
    Strings     76
    Constant    10
    Data        0
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      66
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_3(CODE[34]), STR_2(CODE[25]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> buffer_UART(BANK1[30]), buffer_LCD(BANK1[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 30
		 -> buffer_LCD(BANK1[30]), STR_1(CODE[17]), 

    Uart_Send_String@info	PTR unsigned char  size(1) Largest target is 30
		 -> buffer_UART(BANK1[30]), 


Critical Paths under _main in COMMON

    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Uart_Init->___lldiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Uart_Send_String->_Uart_Send_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_CONV_V->___awmod
    _map->___aldiv
    ___aldiv->___lmul
    ___awmod->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_ADC_CONV_V
    _VISUAL_LCD->_sprintf
    _TX_RX->_sprintf
    _ADC_CONV_V->_map
    _map->___aldiv
    ___awmod->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8998
                         _ADC_CONV_V
                           _ADC_Init
                          _Lcd_Clear
                           _Lcd_Init
                              _TX_RX
                          _Uart_Init
                         _VISUAL_LCD
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VISUAL_LCD                                          14    14      0    2154
                                             25 BANK0     14    14      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     484
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                           10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TX_RX                                                4     4      0    1330
                                             25 BANK0      4     4      0
                     _Uart_Available
                          _Uart_Read
                   _Uart_Send_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    18     15    1230
                                              0 BANK0     25    10     15
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Uart_Send_String                                     2     2      0     100
                                              1 COMMON     2     2      0
                     _Uart_Send_Char
 ---------------------------------------------------------------------------------
 (3) _Uart_Send_Char                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Uart_Available                                       5     3      2       0
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONV_V                                           4     4      0    4470
                                             50 BANK0      4     4      0
                           _ADC_Read
                            ___awdiv
                            ___awmod
                             ___wmul
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 36    16     20    1610
                                             14 BANK0     36    16     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                             11 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONV_V
     _ADC_Read
     ___awdiv
       ___wmul (ARG)
     ___awmod
       ___awdiv (ARG)
       ___wmul (ARG)
     ___wmul
     _map
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _ADC_Init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _TX_RX
     _Uart_Available
     _Uart_Read
     _Uart_Send_String
       _Uart_Send_Char
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Uart_Init
     ___lldiv
   _VISUAL_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
   _setupINTOSC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 01 21:57:07 2023

                       pc 0002                        l57 05C0                        l96 0FB3  
                      l99 07EA              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072                       l102 047B                       l210 0109  
                     l106 02DB                       l123 0FFF                       l211 010A  
                     l220 0126                       l212 0110                       l204 00F2  
                     l108 02E8                       l125 0FF4                       l213 0111  
                     l205 00F5                       l214 0117                       l206 00FB  
                     l119 0071                       l215 0118                       l207 00FC  
                     l223 0F72                       l216 011E                       l208 0102  
                     l160 0EF9                       l232 0F92                       l217 011F  
                     l209 0103                       l218 0125                       l226 0F10  
                     l154 023D                       l235 028E                       l163 0F03  
                     l172 0F1E                       l244 0168                       l157 0F1D  
                     l174 0F24                       l238 0F41                       l175 0F2A  
                     l176 0F2C                       l361 0FC0                       l169 0F58  
                     l514 0412                       l426 0490                       l363 0FD8  
                     l436 0518                       l357 0681                       l527 0343  
                     l375 01F2                       l633 01AC                       l643 00AB  
                     l397 03A9                       u960 00EE                       u961 00ED  
                     u970 00F9                       u971 00F8                       u980 0100  
                     u981 00FF                       u990 0107                       u991 0106  
                     _map 0519                       fsr0 0004                       indf 0000  
            ___awmod@sign 007D                      l1401 00EA                      l1411 010E  
                    l1403 00EE                      l1251 0F97                      l1261 006A  
                    l1413 0115                      l1405 00F9                      l1421 0EFF  
                    l1501 0171                      l1253 0FAD                      l1263 006D  
                    l1415 011C                      l1407 0100                      l1431 0F6F  
                    l1423 0F5A                      l1511 0194                      l1503 0174  
                    l1255 0FB0                      l1247 0F93                      l1417 0123  
                    l1409 0107                      l1425 0F5D                      l1513 019A  
                    l1505 017B                      l1441 0F3E                      l1433 0F2E  
                    l1257 0FB1                      l1249 0F96                      l1451 01D9  
                    l1443 01AD                      l1427 0F63                      l1419 0EF9  
                    l1515 019B                      l1507 017F                      l1531 0086  
                    l1523 0072                      l1603 05DE                      l1435 0F31  
                    l1259 0FB2                      l1701 03AD                      l1461 0483  
                    l1453 01EA                      l1445 01B5                      l1429 0F66  
                    l1517 01A2                      l1509 0183                      l1533 008A  
                    l1525 0078                      l1541 00A7                      l1621 062C  
                    l1605 05F8                      l1437 0F37                      l1551 0FE0  
                    l1711 03C1                      l1703 03B1                      l1471 04B3  
                    l1463 0494                      l1447 01B9                      l1519 01A8  
                    l1535 0094                      l1527 007B                      l1623 062F  
                    l1615 0606                      l1607 0600                      l1631 066D  
                    l1439 0F3A                      l1561 0FF2                      l1721 03D7  
                    l1713 03C5                      l1705 03B6                      l1481 04E2  
                    l1473 04B6                      l1465 049F                      l1457 047C  
                    l1449 01D0                      l1545 0519                      l1801 025B  
                    l1641 0F43                      l1537 009A                      l1529 0082  
                    l1625 065B                      l1609 0604                      l1633 067D  
                    l1563 0FF3                      l1731 03F7                      l1723 03DB  
                    l1715 03C7                      l1707 03B8                      l1491 0505  
                    l1483 04F0                      l1475 04C3                      l1467 04A3  
                    l1459 047F                      l1803 0261                      l1643 0F44  
                    l1539 00A1                      l1627 0660                      l1619 0622  
                    l1571 0F79                      l1811 0413                      l1565 0FF8  
                    l1557 0FE3                      l1549 0FDA                      l1733 03FE  
                    l1725 03DF                      l1717 03CD                      l1709 03BC  
                    l1661 0FB4                      l1493 0510                      l1485 04F1  
                    l1477 04C7                      l1469 04AB                      l1805 028A  
                    l1653 0F1E                      l1645 0F4C                      l1629 0664  
                    l1821 02A7                      l1573 0F7C                      l1581 0127  
                    l1813 041B                      l1559 0FE7                      l1727 03F0  
                    l1719 03D0                      l1735 0404                      l1751 02F7  
                    l1743 02E9                      l1671 0FD4                      l1663 0FB6  
                    l1487 04FA                      l1479 04D0                      l1807 0F04  
                    l1655 0F28                      l1647 0F50                      l1591 05C7  
                    l1831 02D8                      l1823 02AD                      l1575 0F83  
                    l1583 012A                      l1815 0424                      l1737 0409  
                    l1729 03F6                      l1761 0310                      l1753 02FB  
                    l1745 02EA                      l1665 0FBA                      l1489 0500  
                    l1809 0682                      l1649 0F11                      l1657 0F2B  
                    l1497 0169                      l1593 05CD                      l1833 02E1  
                    l1825 02B8                      l1681 0364                      l1577 0F89  
                    l1569 0F74                      l1585 0146                      l1817 0470  
                    l1841 00B7                      l1739 040E                      l1771 032F  
                    l1763 0314                      l1755 0300                      l1747 02F0  
                    l1667 0FC7                      l1499 016B                      l1595 05D2  
                    l1827 02CA                      l1835 02E4                      l1819 028F  
                    l1691 0392                      l1683 0368                      l1675 0344  
                    l1579 0F8C                      l1587 014C                      l1851 00DB  
                    l1843 00BD                      l1765 0318                      l1757 0306  
                    l1773 0335                      l1749 02F5                      l1669 0FCE  
                    l1909 05F0                      l1597 05D7                      l1589 05C4  
                    l1829 02D2                      l1693 039B                      l1685 0371  
                    l1677 0354                      l1781 01F3                      l1853 00E0  
                    l1845 00CC                      l1837 00AC                      l1775 033A  
                    l1767 0322                      l1759 0309                      l1599 05D9  
                    l1687 0383                      l1679 0357                      l1695 03A1  
                    l1791 0233                      l1783 01F7                      l1847 00D1  
                    l1839 00B1                      l1777 033F                      l1769 0328  
                    l1689 0391                      l1793 0237                      l1785 01FD  
                    l1849 00D6                      l1699 03AA                      l1795 023E  
                    l1787 0200                      l1797 0244                      l1789 0201  
                    ?_map 002E                      l1799 024D                      STR_1 0058  
                    STR_2 003F                      STR_3 001D                      u1000 010E  
                    u1001 010D                      u1010 0115                      u1011 0114  
                    u1100 0483                      u1020 011C                      u1101 0482  
                    u1021 011B                      u1110 0494                      u1030 0123  
                    u1111 0493                      u1031 0122                      u1120 04B3  
                    u1040 0EFF                      u1200 0171                      u1121 04B2  
                    u1041 0EFE                      u1201 0170                      u1050 01B9  
                    u1051 01B8                      u1140 04C7                      u1220 0183  
                    u1300 0094                      u1141 04C6                      u1061 01C2  
                    u1221 0182                      u1301 0093                      u1062 01C9  
                    u1135 04B8                      u1063 01D0                      u1215 0175  
                    u1160 04E2                      u1240 0194                      u1320 00A7  
                    u1400 0F89                      u1161 04E1                      u1241 0193  
                    u1321 00A6                      u1305 0090                      u1401 0F88  
                    u1090 01EA                      u1410 0134                      u1155 04C9  
                    u1091 01E9                      u1075 01D2                      u1331 052A  
                    u1235 0184                      u1315 009B                      u1180 0500  
                    u1332 052B                      u1500 0F24                      u1260 01A8  
                    u1420 0156                      u1181 04FF                      u1165 04DE  
                    u1085 01DA                      u1341 054E                      u1333 0530  
                    u1501 0F23                      u1261 01A7                      u1245 0190  
                    u1190 0505                      u1342 054F                      u1334 0531  
                    u1510 0F28                      u1270 0078                      u1430 0168  
                    u1191 0504                      u1175 04F2                      u1351 0572  
                    u1343 0554                      u1335 0536                      u1511 0F27  
                    u1255 019C                      u1271 0077                      u1431 0167  
                    u1360 0FE0                      u1520 0FBA                      u1352 0573  
                    u1344 0555                      u1336 0537                      u1440 05CD  
                    u1600 0383                      u1361 0FDF                      u1521 0FB9  
                    u1353 0578                      u1345 055A                      u1441 05CC  
                    u1601 0382                      u1354 0579                      u1346 055B  
                    u1290 008A                      u1450 0621                      u1355 057E  
                    u1291 0089                      u1451 0620                      u1380 0FF8  
                    u1356 057F                      u1460 062C                      u1620 03A1  
                    u1381 0FF7                      u1285 007C                      u1461 062B  
                    u1621 03A0                      u1605 037F                      u1710 0404  
                    u1630 03B1                      u1550 0FD4                      u1470 066D  
                    u1390 0F79                      u1375 0FEA                      u1711 0403  
                    u1631 03B0                      u1551 0FD3                      u1535 0FC1  
                    u1471 066C                      u1455 061D                      u1615 0393  
                    u1391 0F78                      u1720 0409                      u1640 03BC  
                    u1800 0335                      u1480 067D                      u1560 0354  
                    u1721 0408                      u1705 03F8                      u1641 03BB  
                    u1801 0334                      u1545 0FC8                      u1481 067C  
                    u1561 0353                      u1650 03CD                      u1810 033A  
                    u1730 02F0                      u1490 0F58                      u1651 03CC  
                    u1811 0339                      u1731 02EF                      u1491 0F57  
                    u1740 02FB                      u1580 0368                      u1820 0211  
                    u1741 02FA                      u1581 0367                      u1670 03DF  
                    u1750 0306                      u1830 02CA                      u1671 03DE  
                    u1751 0305                      u1831 02C9                      u1575 0359  
                    u1840 02D8                      u1665 03D1                      u1841 02D7  
                    u1825 020C                      u1690 03F0                      u1770 0318  
                    u1850 02E1                      u1691 03EF                      u1771 0317  
                    u1851 02E0                      u1835 02C6                      u1595 036A  
                    u1907 0476                      u1780 0322                      u1685 03E0  
                    u1781 0321                      u1765 030A                      u1917 0F3C  
                    u1695 03EC                      u1927 02B3                      u1785 031E  
                    u1937 0248                      u1795 0329                      u1947 0257  
                    u1957 0263                      u1967 028C                      u1977 0F6A  
       ?_Lcd_Write_String 0073                      _main 00AC                      map@x 002E  
                    btemp 007E          __end_of_ADC_Init 0072          __end_of_ADC_Read 1000  
                    start 0000        ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 0F73  
                   ??_map 0042           __end_of___aldiv 0519                     ?_main 0070  
         __end_of___awdiv 0413           __end_of___awmod 0344           __end_of___lldiv 03AA  
         ___awdiv@divisor 0076           __end_of___lwdiv 01AD           __end_of___lwmod 00AC  
         ___awdiv@counter 0020                     _RCREG 001A                     _RCSTA 0018  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019                     _TXSTA 0098                     _TX_RX 028F  
     ___lmul@multiplicand 0074           __end_of_dpowers 001D                     pclath 000A  
__end_of_Uart_Send_String 0F59                     status 0003                     wtemp0 007E  
             ?_VISUAL_LCD 0070           __end_of_sprintf 0682          __end_of_Lcd_Init 028F  
        __end_of_Lcd_Port 0127           __initialization 07EB              __end_of_main 00E9  
                  ??_main 007E                    ?_TX_RX 0070              ??_ADC_CONV_V 0052  
                  _ADCON0 001F                    _ADCON1 009F            _Uart_Available 0F11  
                  _ADRESH 001E          ___awdiv@dividend 0078                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _SPBRGH 009A                    ___lmul 01AD  
               ??___aldiv 007D                    ___wmul 0FB4                 ??___awdiv 007A  
               ??___awmod 007B        __end_of_ADC_CONV_V 07EB                 ??___lldiv 0078  
               ??___lwdiv 0074                 ??___lwmod 007C          ___awdiv@quotient 0022  
         ___awmod@divisor 0024            _Uart_Send_Char 0EF8           ___awmod@counter 007C  
            ?_setupINTOSC 0070                 ?_ADC_Init 0070                 ?_ADC_Read 0070  
  __end_of_Uart_Available 0F1E                 ??_sprintf 002F           Lcd_Set_Cursor@a 0075  
         Lcd_Set_Cursor@b 0074   __end_of__initialization 07FC         __end_of_Lcd_Clear 0F11  
           __end_of_TX_RX 02E9            __pcstackCOMMON 0070    __end_of_Uart_Send_Char 0F04  
          _Lcd_Set_Cursor 0F73                ??_ADC_Init 0070                ??_ADC_Read 0072  
                 ??_TX_RX 0039           ?_Uart_Available 0070                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                __pbssBANK0 0056                __pbssBANK1 00A0  
       __end_of_Uart_Init 023E         __end_of_Uart_Read 0F2D                __pmaintext 00AC  
                 ?___lmul 0070                   ?___wmul 0070           ?_Uart_Send_Char 0070  
                 _BAUDCTL 0187            ___lmul@product 0079    __end_of_Lcd_Set_Cursor 0F93  
              ADC_Read@ch 0074              _centesima_V1 005A              _centesima_V2 0057  
              _buffer_LCD 00BE               Uart_Init@vx 0028                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                __stringtab 0003            _Lcd_Write_Char 0F2D  
                 _Lcd_Cmd 0F59              ??_VISUAL_LCD 0039         ?_Uart_Send_String 0070  
    Uart_Send_Char@txData 0070        ??_Uart_Send_String 0071                   ___aldiv 047C  
                 ___awdiv 03AA                   ___awmod 02E9                   ___lldiv 0344  
                 ___lwdiv 0169                   ___lwmod 0072                 _ANSELbits 0188  
         ?_Lcd_Set_Cursor 0074                   _dato_rx 0056                   __ptext1 0F93  
                 __ptext2 0413                   __ptext3 0127                   __ptext4 0F2D  
                 __ptext5 0F73                   __ptext6 01F3                   __ptext7 0344  
                 __ptext8 028F                   __ptext9 05C1                   _dpowers 0013  
      __end_of_VISUAL_LCD 047C          ___awmod@dividend 0026          ___aldiv@dividend 0024  
                 map@eMax 0036                   map@eMin 0032                   map@sMax 003E  
                 map@sMin 003A                   _sprintf 05C1                   clrloop0 0EF1  
  __end_of_Lcd_Write_Char 0F42      end_of_initialization 07FC           ___lldiv@divisor 0070  
           Uart_Init@baud 0020           ___lldiv@counter 007D                 _RCSTAbits 0018  
        ___aldiv@quotient 002A                 Lcd_Port@a 0070                 _PORTBbits 0006  
               _PORTDbits 0008                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0073         Lcd_Write_String@i 0078                 _TXSTAbits 0098  
               _Lcd_Clear 0F04            __end_of___lmul 01F3            __end_of___wmul 0FD9  
        _Lcd_Write_String 0127               _BAUDCTLbits 0187          ??_Uart_Available 0072  
     start_initialization 07EB               __end_of_map 05C1          ??_Uart_Send_Char 0070  
               _Uart_Init 01F3                 _Uart_Read 0F1E                ?_Lcd_Clear 0070  
                ??___lmul 0078                  ??___wmul 0074           Lcd_Write_Char@a 0072  
               ___latbits 0002             __pcstackBANK0 0020                  ?_Lcd_Cmd 0070  
             sprintf@flag 0032               sprintf@prec 0036                 _decima_V1 005B  
               _decima_V2 0058          ___lwdiv@dividend 0072                ?_Uart_Init 0020  
              ?_Uart_Read 0070          ??_Lcd_Set_Cursor 0075                  ?___aldiv 0020  
                ?___awdiv 0076                  ?___awmod 0024                  ?___lldiv 0070  
                ?___lwdiv 0070                  ?___lwmod 0078                 __pstrings 0003  
                _ADC_Init 0069                  _ADC_Read 0FD9          ___lwdiv@quotient 0075  
                ?_sprintf 0020           ___aldiv@divisor 0020           ___aldiv@counter 0028  
          ___wmul@product 0074                 clear_ram0 0EF0               _buffer_UART 00A0  
                Lcd_Cmd@a 0073                  _PIR1bits 000C               ??_Lcd_Clear 0074  
               _valor_ch0 0060                 _valor_ch1 005F                 _unidad_V1 005C  
               _unidad_V2 0059                _ADCON0bits 001F               __stringbase 0012  
           ??_setupINTOSC 0070         ___wmul@multiplier 0070          ??_Lcd_Write_Char 0071  
              _ADC_CONV_V 0682                  _Lcd_Init 023E                  _Lcd_Port 00E9  
       ___lmul@multiplier 0070  __end_of_Lcd_Write_String 0169               ??_Uart_Init 0024  
             ??_Uart_Read 0070             ADC_Init@p_ang 0070        __end_of__stringtab 0013  
              sprintf@val 0034           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 0072                  __ptext11 0169                  __ptext20 0069  
                __ptext12 0F42                  __ptext21 0682                  __ptext13 0EF8  
                __ptext22 0519                  __ptext14 0F1E                  __ptext23 01AD  
                __ptext15 0F11                  __ptext24 047C                  __ptext16 023E  
                __ptext25 0FB4                  __ptext17 0F04                  __ptext26 02E9  
                __ptext18 0F59                  __ptext27 03AA                  __ptext19 00E9  
                __ptext28 0FD9       __end_of_setupINTOSC 0FB4                  _contador 0061  
    Uart_Send_String@info 0072                  _voltaje1 005E                  _voltaje2 005D  
        _Uart_Send_String 0F42               ?_ADC_CONV_V 0070                 sprintf@ap 0033  
               sprintf@sp 0037          ___lwmod@dividend 007A          ___lldiv@dividend 0074  
               stringcode 000D                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0076  
             _setupINTOSC 0F93                  sprintf@c 0038                  sprintf@f 0020  
        ___lldiv@quotient 0079           ___lwmod@divisor 0078           ___lwmod@counter 007D  
                stringdir 000D                  stringtab 0003              ___aldiv@sign 0029  
              _VISUAL_LCD 0413  
